"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[17379],{36192:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var r=t(74848),i=t(28453);const s={title:"1. Two Sum",sidebar_label:"1. Two Sum",tags:["Leetcode Easy","Number Sum","Go","Rust"]},o=void 0,l={id:"leetcode/1-500/two_sum",title:"1. Two Sum",description:"https://leetcode.com/problems/two-sum",source:"@site/docs/leetcode/1-500/1_two_sum.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/two_sum",permalink:"/docs/leetcode/1-500/two_sum",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Number Sum",permalink:"/docs/tags/number-sum"},{label:"Go",permalink:"/docs/tags/go"},{label:"Rust",permalink:"/docs/tags/rust"}],version:"current",sidebarPosition:1,frontMatter:{title:"1. Two Sum",sidebar_label:"1. Two Sum",tags:["Leetcode Easy","Number Sum","Go","Rust"]},sidebar:"docSidebar",previous:{title:"Linked List",permalink:"/docs/leetcode_note/linked_list"},next:{title:"2. Add Two Numbers",permalink:"/docs/leetcode/1-500/add_two_numbers"}},u={},a=[{value:"Python",id:"python",level:2},{value:"Brute Force",id:"brute-force",level:3},{value:"Prefix Mapper with dict",id:"prefix-mapper-with-dict",level:3},{value:"Go",id:"go",level:2},{value:"Rust",id:"rust",level:2},{value:"Prefix Mapper",id:"prefix-mapper",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/two-sum",children:"https://leetcode.com/problems/two-sum"})}),"\n",(0,r.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.h3,{id:"brute-force",children:"Brute Force"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Time: O(N^2)"}),"\n",(0,r.jsx)(n.li,{children:"Space: O(1)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def two_sum(self, nums: List[int], target: int) -> List[int]:\n    for i in range(0, len(nums)):\n        for j in range(i+1, len(nums)):\n            if nums[i] + nums[j] == target:\n                return [i, j]\n\n    return False\n"})}),"\n",(0,r.jsx)(n.h3,{id:"prefix-mapper-with-dict",children:"Prefix Mapper with dict"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Time: O(N)"}),"\n",(0,r.jsx)(n.li,{children:"Space: O(N)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        memory = {num: index for index, num in enumerate(nums)}\n\n        for index, num in enumerate(nums):\n            other = target - num\n            if other in memory and memory[other] != index:\n                return [memory[other], index] if memory[other] < index else [index, memory[other]]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"go",children:"Go"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func twoSum(nums []int, target int) []int {\n    for i:=0; i<len(nums)-1; i++ {\n        for j:=i+1; j<len(nums); j++ {\n            if (nums[i] + nums[j] == target) {\n                return []int{i, j}\n            }\n        }\n    }\n    return []int{}\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"rust",children:"Rust"}),"\n",(0,r.jsx)(n.h3,{id:"prefix-mapper",children:"Prefix Mapper"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'use std::collections::HashMap;\n\n\nimpl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        let mut mapper: HashMap<i32, usize> = HashMap::new();\n        for (i, num) in nums.iter().enumerate() {\n            mapper.insert(*num, i);\n        }\n\n        for (i, num) in nums.iter().enumerate() {\n            let other = target - num;\n            if mapper.contains_key(&other) && mapper.get(&other).unwrap() != &i {\n                return vec![i as i32, *mapper.get(&other).unwrap() as i32];\n            }\n        }\n\n        panic!("not possible")\n    }\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);