"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[45776],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(h,i(i({ref:t},l),{},{components:n})):r.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},57726:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={title:"47. Permutations II",sidebar_label:"47. Permutations II",tags:["Leetcode Medium","Backtracking"]},i=void 0,c={unversionedId:"leetcode/1-500/permutations_ii",id:"leetcode/1-500/permutations_ii",title:"47. Permutations II",description:"https://leetcode.com/problems/permutations-ii/",source:"@site/docs/leetcode/1-500/47_permutations_ii.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/permutations_ii",permalink:"/docs/leetcode/1-500/permutations_ii",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/47_permutations_ii.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Backtracking",permalink:"/docs/tags/backtracking"}],version:"current",sidebarPosition:47,frontMatter:{title:"47. Permutations II",sidebar_label:"47. Permutations II",tags:["Leetcode Medium","Backtracking"]},sidebar:"docSidebar",previous:{title:"46. Permutations",permalink:"/docs/leetcode/1-500/permutations"},next:{title:"48. Rotate Image",permalink:"/docs/leetcode/1-500/rotate_image"}},s={},u=[{value:"Python",id:"python",level:2},{value:"Use Python itertools.permutations",id:"use-python-itertoolspermutations",level:3},{value:"Backtracking",id:"backtracking",level:3},{value:"Javascript",id:"javascript",level:2}],l={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/permutations-ii/"},"https://leetcode.com/problems/permutations-ii/")),(0,a.kt)("h2",{id:"python"},"Python"),(0,a.kt)("h3",{id:"use-python-itertoolspermutations"},"Use Python itertools.permutations"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from itertools import permutations\n\nclass Solution:\n    def permuteUnique(self, nums: List[int]) -> List[List[int]]:\n        return set([perm for perm in permutations(nums)])\n")),(0,a.kt)("h3",{id:"backtracking"},"Backtracking"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from itertools import permutations\n\nclass Solution:\n    def permuteUnique(self, nums: List[int]) -> List[List[int]]:\n        result = set()\n\n        def backtracking(track: list, used: set):\n            if len(track) == len(nums):\n                result.add(tuple(track))\n                return\n\n            for i, num in enumerate(nums):\n                if i in used:\n                    continue\n                used.add(i)\n                track.append(num)\n\n                backtracking(track, used)\n\n                used.remove(i)\n                track.pop()\n\n        backtracking([], set())\n        return result\n")),(0,a.kt)("h2",{id:"javascript"},"Javascript"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var permuteUnique = function(nums) {\n  const result = [];\n   var backtrack = function(hashmap, record =[]) {\n     // base case: the length of array has reached the length of nums\n     if (record.length === nums.length) {\n       result.push(record.slice());\n       return;\n     }\n\n     // use hashmap to memorize the number which had traversed\n     for (let key in hashmap) {\n       if (hashmap[key] <= 0) continue;\n       hashmap[key] -= 1;\n       record.push(Number(key));\n       backtrack(hashmap, record);\n       hashmap[key] += 1;\n       record.pop();\n\n     }\n   }\n\n   const hashmap = nums.reduce((acc, num) => {\n     if (acc[num] !== undefined) acc[num] += 1;\n     else acc[num] = 1;\n     return acc;\n   }, {})\n\n   backtrack(hashmap)\n   return result;\n};\n")))}m.isMDXComponent=!0}}]);