"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[23033],{76292:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=t(74848),o=t(28453);const i={title:"1114. Print in Order",sidebar_label:"1114. Print in Order",tags:["Leetcode Easy","Concurrency"]},c=void 0,s={id:"leetcode/1001-1500/print_in_order",title:"1114. Print in Order",description:"Python",source:"@site/docs/leetcode/1001-1500/1114_print_in_order.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/print_in_order",permalink:"/docs/leetcode/1001-1500/print_in_order",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Concurrency",permalink:"/docs/tags/concurrency"}],version:"current",sidebarPosition:1114,frontMatter:{title:"1114. Print in Order",sidebar_label:"1114. Print in Order",tags:["Leetcode Easy","Concurrency"]},sidebar:"docSidebar",previous:{title:"1094. Car Pooling",permalink:"/docs/leetcode/1001-1500/car_pooling"},next:{title:"1137. N-th Tribonacci Number",permalink:"/docs/leetcode/1001-1500/nth_tribonacci"}},l={},d=[{value:"Python",id:"python",level:2},{value:"Pair Sync",id:"pair-sync",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.h3,{id:"pair-sync",children:"Pair Sync"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from threading import Lock\n\nclass Foo:\n    def __init__(self):\n        self.first_lock = Lock()\n        self.second_lock = Lock()\n        self.first_lock.acquire()\n        self.second_lock.acquire()\n\n\n    def first(self, printFirst: 'Callable[[], None]') -> None:\n\n        # printFirst() outputs \"first\". Do not change or remove this line.\n\n        printFirst()\n        self.first_lock.release()\n\n\n    def second(self, printSecond: 'Callable[[], None]') -> None:\n\n        # printSecond() outputs \"second\". Do not change or remove this line.\n        with self.first_lock:\n            printSecond()\n            self.second_lock.release()\n\n\n    def third(self, printThird: 'Callable[[], None]') -> None:\n\n        # printThird() outputs \"third\". Do not change or remove this line.\n        with self.second_lock:\n            printThird()\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var r=t(96540);const o={},i=r.createContext(o);function c(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);