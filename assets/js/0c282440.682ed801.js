"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[88700],{29528:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>v,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var t=n(74848),d=n(28453);const o={title:"29. Divide Two Integers",sidebar_label:"29. Divide Two Integers",tags:["Leetcode Medium","Bit Manipulation"]},s=void 0,r={id:"leetcode/1-500/divide_two_integers",title:"29. Divide Two Integers",description:"https://leetcode.com/problems/divide-two-integers/",source:"@site/docs/leetcode/1-500/29_divide_two_integers.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/divide_two_integers",permalink:"/docs/leetcode/1-500/divide_two_integers",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Bit Manipulation",permalink:"/docs/tags/bit-manipulation"}],version:"current",sidebarPosition:29,frontMatter:{title:"29. Divide Two Integers",sidebar_label:"29. Divide Two Integers",tags:["Leetcode Medium","Bit Manipulation"]},sidebar:"docSidebar",previous:{title:"28. Find the Index of the First Occurrence in a String",permalink:"/docs/leetcode/1-500/find_the_index_of_the_first_occurence_in_a_string"},next:{title:"31. Next Permutation",permalink:"/docs/leetcode/1-500/next_permutation"}},l={},a=[{value:"Python",id:"python",level:2},{value:"Minus divisor one-by-one (Timelimit Exceed)",id:"minus-divisor-one-by-one-timelimit-exceed",level:3},{value:"Minus divisor on exponentially grow while fit",id:"minus-divisor-on-exponentially-grow-while-fit",level:3}];function c(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.com/problems/divide-two-integers/",children:"https://leetcode.com/problems/divide-two-integers/"})}),"\n",(0,t.jsx)(i.h2,{id:"python",children:"Python"}),"\n",(0,t.jsx)(i.h3,{id:"minus-divisor-one-by-one-timelimit-exceed",children:"Minus divisor one-by-one (Timelimit Exceed)"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"class Solution:\n    def divide(self, dividend: int, divisor: int) -> int:\n        # Edge case, 32bit INT did not have 2147483648\n        if dividend == -2147483648 and divisor == -1:\n            return 2147483647\n\n        # Decide the sign of the answer\n        is_negative = False\n\n        if dividend < 0:\n            dividend = -dividend\n            is_negative = True\n\n        if divisor < 0:\n            divisor = -divisor\n            is_negative = False if is_negative else True\n\n        ans = 0\n        while dividend >= divisor:\n            ans += 1\n            dividend -= divisor\n\n        return -ans if is_negative else ans\n"})}),"\n",(0,t.jsx)(i.h3,{id:"minus-divisor-on-exponentially-grow-while-fit",children:"Minus divisor on exponentially grow while fit"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"\u9664\u6578(divisor)\u5728\u5141\u8a31\u7bc4\u570d\u5167(\u9084\u53ef\u4ee5\u8b93\u88ab\u9664\u6578\u6e1b\u7684\u6642\u5019)\uff0c\u8b93\u4ed6\u7a0b\u6307\u6578\u589e\u9577(\u4e8c\u6b21\u65b9)"}),"\n",(0,t.jsxs)(i.li,{children:["\u985e\u4f3cTCP/IP congestion control\u6642\u7684",(0,t.jsx)(i.a,{href:"https://zh.wikipedia.org/zh-tw/%E5%92%8C%E6%80%A7%E5%A2%9E%E9%95%BF/%E4%B9%98%E6%80%A7%E9%99%8D%E4%BD%8E",children:"AIMD"})]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"class Solution:\n    def divide(self, dividend: int, divisor: int) -> int:\n        if dividend == -2147483648 and divisor == -1:\n            return 2147483647\n\n        is_negative = (dividend < 0) ^ (divisor < 0)\n        dividend, divisor = abs(dividend), abs(divisor)\n\n        ans = 0\n        while dividend >= divisor:\n            power_divisor, power = divisor, 1\n            while dividend >= power_divisor:\n                dividend -= power_divisor\n                ans += power\n                power <<= 1\n                power_divisor <<= 1\n\n        return -ans if is_negative else ans\n"})})]})}function v(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>r});var t=n(96540);const d={},o=t.createContext(d);function s(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);