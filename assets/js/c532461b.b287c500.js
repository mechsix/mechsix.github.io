"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[8456],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,f=d["".concat(l,".").concat(m)]||d[m]||s[m]||c;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,i=new Array(c);i[0]=d;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var u=2;u<c;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},37091:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return p}});var r=t(87462),o=t(63366),c=(t(67294),t(3905)),i=["components"],a={title:"518. Coin Change 2",sidebar_label:"518. Coin Change 2",tags:["Leetcode Medium","DP"]},l=void 0,u={unversionedId:"leetcode/501-1000/coin_change2",id:"leetcode/501-1000/coin_change2",title:"518. Coin Change 2",description:"https://leetcode.com/problems/coin-change-2/",source:"@site/docs/leetcode/501-1000/518_coin_change2.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/coin_change2",permalink:"/docs/leetcode/501-1000/coin_change2",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/518_coin_change2.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"DP",permalink:"/docs/tags/dp"}],version:"current",sidebarPosition:518,frontMatter:{title:"518. Coin Change 2",sidebar_label:"518. Coin Change 2",tags:["Leetcode Medium","DP"]},sidebar:"docSidebar",previous:{title:"509. Fibonacci Number",permalink:"/docs/leetcode/501-1000/fibonacci_number"},next:{title:"520. Detect Capital",permalink:"/docs/leetcode/501-1000/detect_capital"}},p=[{value:"Python",id:"python",children:[{value:"Bottom Up DP",id:"bottom-up-dp",children:[],level:3}],level:2},{value:"JS",id:"js",children:[],level:2}],s={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/coin-change-2/"},"https://leetcode.com/problems/coin-change-2/")),(0,c.kt)("h2",{id:"python"},"Python"),(0,c.kt)("h3",{id:"bottom-up-dp"},"Bottom Up DP"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def change(self, amount: int, coins: List[int]) -> int:\n        dp = [0] * (amount+1)\n        dp[0] = 1\n\n        for coin in coins:\n            for cur in range(coin, amount+1):\n                dp[cur] += dp[cur-coin]\n\n        return dp[amount]\n")),(0,c.kt)("h2",{id:"js"},"JS"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-javascript"},"var change = function(amount, coins) {\n    const dp = [...new Array(coins.length + 1)].map(() => new Array(amount + 1).fill(0));\n    \n    for (let j = 1; j <= coins.length; j++) {\n        for (let i = 0; i <= amount; i++) {\n            // base case \n            if (i === 0) dp[j][i] = 1;\n            else {\n                const coin = coins[j - 1];\n                dp[j][i] = i - coin < 0 ? dp[j - 1][i] : dp[j][i - coin] + dp[j - 1][i];\n            }\n        }\n    }\n    // console.log(dp)\n    return dp[coins.length][amount];\n};\n\n/**\n[\n  [ 0, 0, 0, 0, 0, 0 ],\n  [ 1, 1, 1, 1, 1, 1 ],\n  [ 1, 1, 2, 2, 3, 3 ],\n  [ 1, 1, 2, 2, 3, 4 ]\n]\n */\n")))}d.isMDXComponent=!0}}]);