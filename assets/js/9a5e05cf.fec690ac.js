"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[32829],{90828:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"leetcode/1001-1500/count_good_nodes_in_binary_tree","title":"1448. Count Good Nodes in Binary Tree","description":"https://leetcode.com/problems/count-good-nodes-in-binary-tree/","source":"@site/docs/leetcode/1001-1500/1448_count_good_nodes_in_binary_tree.md","sourceDirName":"leetcode/1001-1500","slug":"/leetcode/1001-1500/count_good_nodes_in_binary_tree","permalink":"/docs/leetcode/1001-1500/count_good_nodes_in_binary_tree","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Binary Tree","permalink":"/docs/tags/binary-tree"},{"inline":true,"label":"DFS","permalink":"/docs/tags/dfs"}],"version":"current","sidebarPosition":1448,"frontMatter":{"title":"1448. Count Good Nodes in Binary Tree","sidebar_label":"1448. Count Good Nodes in Binary Tree","tags":["Leetcode Medium","Binary Tree","DFS"]},"sidebar":"docSidebar","previous":{"title":"1446. Consecutive Characters","permalink":"/docs/leetcode/1001-1500/consecutive_chars"},"next":{"title":"1457. Pseudo-Palindromic Paths in a Binary Tree","permalink":"/docs/leetcode/1001-1500/pseudo_palindromic_paths_in_a_binary_tree"}}');var r=o(74848),i=o(28453);const s={title:"1448. Count Good Nodes in Binary Tree",sidebar_label:"1448. Count Good Nodes in Binary Tree",tags:["Leetcode Medium","Binary Tree","DFS"]},d=void 0,a={},c=[{value:"Python",id:"python",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree/",children:"https://leetcode.com/problems/count-good-nodes-in-binary-tree/"})}),"\n",(0,r.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from math import inf\n\n\nclass Solution:\n    def goodNodes(self, root: TreeNode) -> int:\n\n        def dfs(node: TreeNode, max_val: int):\n            if not node:\n                return 0\n\n            count = 1 if node.val >= max_val else 0\n\n            count += dfs(node.left, max(max_val, node.val))\n            count += dfs(node.right, max(max_val, node.val))\n            return count\n\n        return dfs(root, -inf)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>d});var t=o(96540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);