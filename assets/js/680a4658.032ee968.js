"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[3746],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(r),d=o,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||i;return r?n.createElement(f,a(a({ref:t},s),{},{components:r})):n.createElement(f,a({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},56905:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),a=["components"],c={title:"80. Remove Duplicates from Sorted Array II",sidebar_label:"80. Remove Duplicates from Sorted Array II",tags:["Leetcode Medium","In Place","Two Pointer"]},l=void 0,u={unversionedId:"leetcode/1-500/remove_duplicates_from_sorted_array_ii",id:"leetcode/1-500/remove_duplicates_from_sorted_array_ii",title:"80. Remove Duplicates from Sorted Array II",description:"https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/",source:"@site/docs/leetcode/1-500/80_remove_duplicates_from_sorted_array_ii.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/remove_duplicates_from_sorted_array_ii",permalink:"/docs/leetcode/1-500/remove_duplicates_from_sorted_array_ii",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/80_remove_duplicates_from_sorted_array_ii.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"In Place",permalink:"/docs/tags/in-place"},{label:"Two Pointer",permalink:"/docs/tags/two-pointer"}],version:"current",sidebarPosition:80,frontMatter:{title:"80. Remove Duplicates from Sorted Array II",sidebar_label:"80. Remove Duplicates from Sorted Array II",tags:["Leetcode Medium","In Place","Two Pointer"]},sidebar:"docSidebar",previous:{title:"77. Combinations",permalink:"/docs/leetcode/1-500/combinations"},next:{title:"83. Remove Duplicates from Sorted List",permalink:"/docs/leetcode/1-500/remove_duplicates_from_sorted_linked_list"}},s=[{value:"Python",id:"python",children:[],level:2}],m={toc:s};function p(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/"},"https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/")),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Time: O(n)"),(0,i.kt)("li",{parentName:"ul"},"Space: O(logn)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from collections import defaultdict\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        cur, end = 0, len(nums)-1\n\n        counter = defaultdict(int)\n\n        while cur <= end:\n            num = nums[cur]\n            counter[num] += 1\n\n            if counter[num] > 2:\n                nums.pop(cur)\n                end -= 1\n                continue\n            cur += 1\n\n        return end+1\n")))}p.isMDXComponent=!0}}]);