"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[69257],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(r),f=s,m=u["".concat(i,".").concat(f)]||u[f]||d[f]||o;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function m(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,l=new Array(o);l[0]=f;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a[u]="string"==typeof e?e:s,l[1]=a;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},58546:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=r(87462),s=(r(67294),r(3905));const o={title:"2300. Successful Pairs of Spells and Potions",sidebar_label:"2300. Successful Pairs of Spells and Potions",tags:["Leetcode Medium","Sort","Binary Search"]},l=void 0,a={unversionedId:"leetcode/2000/successful_pairs_of_spells_and_potions",id:"leetcode/2000/successful_pairs_of_spells_and_potions",title:"2300. Successful Pairs of Spells and Potions",description:"https://leetcode.com/problems/successful-pairs-of-spells-and-potions",source:"@site/docs/leetcode/2000/2330_successful_pairs_of_spells_and_potions.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/successful_pairs_of_spells_and_potions",permalink:"/docs/leetcode/2000/successful_pairs_of_spells_and_potions",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/2000/2330_successful_pairs_of_spells_and_potions.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Sort",permalink:"/docs/tags/sort"},{label:"Binary Search",permalink:"/docs/tags/binary-search"}],version:"current",sidebarPosition:2330,frontMatter:{title:"2300. Successful Pairs of Spells and Potions",sidebar_label:"2300. Successful Pairs of Spells and Potions",tags:["Leetcode Medium","Sort","Binary Search"]},sidebar:"docSidebar",previous:{title:"2306. Naming a Company",permalink:"/docs/leetcode/2000/naming_a_company"},next:{title:"2348. Number of Zero-Filled Subarrays",permalink:"/docs/leetcode/2000/num_of_zero_filled_subarrays"}},i={},c=[{value:"Python",id:"python",level:2},{value:"Sort and Binary Search",id:"sort-and-binary-search",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,s.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/successful-pairs-of-spells-and-potions"},"https://leetcode.com/problems/successful-pairs-of-spells-and-potions")),(0,s.kt)("h2",{id:"python"},"Python"),(0,s.kt)("h3",{id:"sort-and-binary-search"},"Sort and Binary Search"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"from bisect import bisect_left\n\n\nclass Solution:\n    def successfulPairs(self, spells: List[int], potions: List[int], success: int) -> List[int]:\n        potions.sort()\n        result = []\n        for spell in spells:\n            pos = bisect_left(\n                potions,\n                success,\n                key=lambda position: position*spell\n            )\n\n            result.append(len(potions)-pos)\n\n        return result\n")))}d.isMDXComponent=!0}}]);