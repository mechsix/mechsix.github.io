"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[2226],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),u=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(a.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(r),f=o,m=d["".concat(a,".").concat(f)]||d[f]||s[f]||c;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=d;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<c;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},42762:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return a},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var n=r(87462),o=r(63366),c=(r(67294),r(3905)),i=["components"],l={title:"238. Product of Array Except Self",sidebar_label:"238. Product of Array Except Self",tags:["Leetcode Medium"]},a=void 0,u={unversionedId:"leetcode/1-500/product_array_except_self",id:"leetcode/1-500/product_array_except_self",title:"238. Product of Array Except Self",description:"https://leetcode.com/problems/product-of-array-except-self/",source:"@site/docs/leetcode/1-500/238_product_array_except_self.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/product_array_except_self",permalink:"/docs/leetcode/1-500/product_array_except_self",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/238_product_array_except_self.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"}],version:"current",sidebarPosition:238,frontMatter:{title:"238. Product of Array Except Self",sidebar_label:"238. Product of Array Except Self",tags:["Leetcode Medium"]},sidebar:"docSidebar",previous:{title:"236. Lowest Common Ancestor of a Binary Tree",permalink:"/docs/leetcode/1-500/lowest_common_ancestor_of_bt"},next:{title:"240. Search a 2D Matrix II",permalink:"/docs/leetcode/1-500/search_2d_matrix_ii"}},p=[{value:"Python",id:"python",children:[{value:"Force Busted (Timelimit Exceed)",id:"force-busted-timelimit-exceed",children:[],level:3},{value:"Cache the Left and Right",id:"cache-the-left-and-right",children:[],level:3}],level:2}],s={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/product-of-array-except-self/"},"https://leetcode.com/problems/product-of-array-except-self/")),(0,c.kt)("h2",{id:"python"},"Python"),(0,c.kt)("h3",{id:"force-busted-timelimit-exceed"},"Force Busted (Timelimit Exceed)"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"Time: O(N^2)"),(0,c.kt)("li",{parentName:"ul"},"Space: O(1)")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"from functools import reduce\n\n\nclass Solution:\n    def productExceptSelf(self, nums: List[int]) -> List[int]:\n        return [\n            reduce(lambda cur, num: cur*num, nums[:i]+nums[i+1:], 1)\n            for i in range(len(nums))\n        ]\n")),(0,c.kt)("h3",{id:"cache-the-left-and-right"},"Cache the Left and Right"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"Time: O(N)"),(0,c.kt)("li",{parentName:"ul"},"Space: O(2N)")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"from collections import deque\n\n\nclass Solution:\n    def productExceptSelf(self, nums: List[int]) -> List[int]:\n        length = len(nums)\n\n        lefts = [1]\n        rights = deque([1])\n\n        for i in range(1, length):\n            # i from 1~n\n            lefts.append(lefts[i-1] * nums[i-1])\n\n        for i in range(length-1):\n            # length-1-i: 1~n\n            rights.appendleft(rights[0] * nums[length-1-i])\n\n        return [lefts[i]*rights[i] for i in range(length)]\n")))}d.isMDXComponent=!0}}]);