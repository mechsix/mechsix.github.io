"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[1143],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return d}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function u(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),m=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):u(u({},r),e)),t},s=function(e){var r=m(e.components);return n.createElement(i.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=m(t),d=a,y=p["".concat(i,".").concat(d)]||p[d]||l[d]||o;return t?n.createElement(y,u(u({ref:r},s),{},{components:t})):n.createElement(y,u({ref:r},s))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,u=new Array(o);u[0]=p;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,u[1]=c;for(var m=2;m<o;m++)u[m]=t[m];return n.createElement.apply(null,u)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},80632:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return m},toc:function(){return s},default:function(){return p}});var n=t(87462),a=t(63366),o=(t(67294),t(3905)),u=["components"],c={title:"152. Maximum Product Subarray",sidebar_label:"152. Maximum Product Subarray"},i=void 0,m={unversionedId:"leetcode/max_subarray/max_product_subarray",id:"leetcode/max_subarray/max_product_subarray",isDocsHomePage:!1,title:"152. Maximum Product Subarray",description:"Python",source:"@site/docs/leetcode/max_subarray/152_max_product_subarray.md",sourceDirName:"leetcode/max_subarray",slug:"/leetcode/max_subarray/max_product_subarray",permalink:"/docs/leetcode/max_subarray/max_product_subarray",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/max_subarray/152_max_product_subarray.md",tags:[],version:"current",sidebarPosition:152,frontMatter:{title:"152. Maximum Product Subarray",sidebar_label:"152. Maximum Product Subarray"},sidebar:"tutorialSidebar",previous:{title:"53. Maximum Subarray",permalink:"/docs/leetcode/max_subarray/max_subarray"},next:{title:"1. Two Sum",permalink:"/docs/leetcode/two_sum"}},s=[{value:"Python",id:"python",children:[]}],l={toc:s};function p(e){var r=e.components,t=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        if not nums:\n            return\n\n        ans_product = nums[0]\n        current_max = nums[0]\n        current_min = nums[0]\n        \n        for num in nums[1:]:\n            if num < 0:\n                current_max, current_min = current_min, current_max\n            current_max = max(current_max * num, num)\n            current_min = min(current_min * num, num)\n            \n            ans_product = max(current_max, ans_product)           \n        \n        return ans_product\n")))}p.isMDXComponent=!0}}]);