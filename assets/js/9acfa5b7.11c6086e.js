"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[31309],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),i=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=i(e.components);return o.createElement(c.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=i(t),d=r,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return t?o.createElement(f,s(s({ref:n},u),{},{components:t})):o.createElement(f,s({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:r,s[1]=l;for(var i=2;i<a;i++)s[i]=t[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},93688:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return i}});var o=t(83117),r=(t(67294),t(3905));const a={title:"useState & useMemo",sidebar_label:"useState & useMemo",tags:["Frontend"]},s=void 0,l={unversionedId:"react/use-state",id:"react/use-state",title:"useState & useMemo",description:"Multiple Set State",source:"@site/docs/react/use-state.md",sourceDirName:"react",slug:"/react/use-state",permalink:"/docs/react/use-state",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/react/use-state.md",tags:[{label:"Frontend",permalink:"/docs/tags/frontend"}],version:"current",frontMatter:{title:"useState & useMemo",sidebar_label:"useState & useMemo",tags:["Frontend"]},sidebar:"docSidebar",previous:{title:"Event Listener",permalink:"/docs/react/event_listener"},next:{title:"Functools",permalink:"/docs/python/functools"}},c={},i=[{value:"Multiple Set State",id:"multiple-set-state",level:2},{value:"useState on Object",id:"usestate-on-object",level:2},{value:"useMemo",id:"usememo",level:2},{value:"useCallback",id:"usecallback",level:2}],u={toc:i};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"multiple-set-state"},"Multiple Set State"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example() {\n  const [moo, setMoo] = useState(0);\n  const [foo, setFoo] = useState(0);\n\n  const handleClick = () => {\n    setMoo(moo + 1)\n    setMoo(moo + 1) // ??!!\n\n    setFoo(foo + 1)\n  }\n\n  return (\n    <>\n      <p>\n        <button onClick={handleClick}>Click Me</button>\n      </p>\n      <p>Moo: {moo}</p>\n      <p>Foo: {foo}</p>\n    </>\n  );\n}\n")),(0,r.kt)("h2",{id:"usestate-on-object"},"useState on Object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example() {\n  const [counter, setCounter] = useState(0);\n  const [animal, setAnimal] = useState('dog');\n\n  const obj = {\n    type: (animal === 'dog') ? 'Mammals' : 'Bird',\n    move: (animal === 'dog') ? 'walk' : 'fly'\n  }\n\n  // const obj = useMemo(() => ({\n  //   type: (animal === 'dog') ? 'Mammals' : 'Bird',\n  //   move: (animal === 'dog') ? 'walk' : 'fly'\n  // }), [animal])\n\n  const handleIncrease = () => {\n    setCounter(counter => counter + 1)\n  }\n\n  const handleChange = () => {\n    if (animal === 'dog') {\n      setAnimal('duck')\n    } else {\n      setAnimal('dog')\n    }\n  }\n\n  useEffect(() => {\n    console.log('Obj changed', obj)\n  }, [obj])\n\n  return (\n    <>\n      <p>\n        <button onClick={handleIncrease}>Increase</button>\n        <button onClick={handleChange}>Change</button>\n      </p>\n      <p>Counter: {counter}</p>\n      <p>{obj.type} can {obj.move}</p>\n    </>\n  );\n}\n")),(0,r.kt)("h2",{id:"usememo"},"useMemo"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/hooks-reference.html#usememo"},"useMemo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example() {\n  const [expensive, setExpensive] = useState(0);\n  const [cheap, setCheap] = useState(0);\n\n  const somethingExpensive = (origin) => {\n    let result = origin\n    for (let i=0; i <= 1000000000; i++) {\n      result += 0.000000001\n    }\n    return result\n  }\n\n  const handleClickCheap = () => {\n    setCheap(cheap + 1)\n  }\n\n  const handleClickExpensive = () => {\n    setExpensive(somethingExpensive(expensive))\n  }\n\n  return (\n    <>\n      <p>\n        <button onClick={handleClickCheap}>Cheap</button>\n        <button onClick={handleClickExpensive}>Expensive</button>\n      </p>\n      <p>Cheap: {cheap}</p>\n      <p>Exp: {expensive}</p>\n    </>\n  );\n}\n")),(0,r.kt)("h2",{id:"usecallback"},"useCallback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"useCallback(fn, [dep])\nuseMemo(() => fn, [deps])\n")))}p.isMDXComponent=!0}}]);