"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[55897],{59589:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var o=s(74848),t=s(28453);const i={title:"1254. Number of Closed Islands",sidebar_label:"1254. Number of Closed Islands",tags:["Leetcode Medium","DFS"]},d=void 0,r={id:"leetcode/1001-1500/number_of_closed_islands",title:"1254. Number of Closed Islands",description:"https://leetcode.com/problems/number-of-closed-islands",source:"@site/docs/leetcode/1001-1500/1254_number_of_closed_islands.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/number_of_closed_islands",permalink:"/docs/leetcode/1001-1500/number_of_closed_islands",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"DFS",permalink:"/docs/tags/dfs"}],version:"current",sidebarPosition:1254,frontMatter:{title:"1254. Number of Closed Islands",sidebar_label:"1254. Number of Closed Islands",tags:["Leetcode Medium","DFS"]},sidebar:"docSidebar",previous:{title:"1249. Minimum Remove to Make Valid Parentheses",permalink:"/docs/leetcode/1001-1500/min_remove_to_make_valid_parentheses"},next:{title:"1260. Shift 2D Grid",permalink:"/docs/leetcode/1001-1500/shift_2d_grid"}},l={},c=[{value:"Python",id:"python",level:2},{value:"DFS",id:"dfs",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/number-of-closed-islands",children:"https://leetcode.com/problems/number-of-closed-islands"})}),"\n",(0,o.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(n.h3,{id:"dfs",children:"DFS"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def closedIsland(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n\n        # 0: Not visited island block\n        # 1: Water\n        # 2: Visited island block\n        def dfs(i: int, j: int) -> bool:\n            if i < 0 or j < 0 or i >= m or j >= n:\n                return True\n\n            if grid[i][j] > 0:\n                return False\n\n            grid[i][j] = 2\n\n            return any([\n                dfs(i+rx, j+cx)\n                for rx, cx\n                in [(-1, 0), (1, 0), (0, -1), (0, 1)]\n            ])\n\n        ans = 0\n        for i in range(m):\n            for j in range(n):\n                if grid[i][j] == 0 and not dfs(i, j):\n                    ans += 1\n\n        return ans\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>r});var o=s(96540);const t={},i=o.createContext(t);function d(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);