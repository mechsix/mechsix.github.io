"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[31452],{68458:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"leetcode/1-500/add_strings","title":"415. Add Strings","description":"https://leetcode.com/problems/add-strings/","source":"@site/docs/leetcode/1-500/415_add_strings.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/add_strings","permalink":"/docs/leetcode/1-500/add_strings","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"}],"version":"current","sidebarPosition":415,"frontMatter":{"title":"415. Add Strings","sidebar_label":"415. Add Strings","tags":["Leetcode Easy"]},"sidebar":"docSidebar","previous":{"title":"414. Third Maximum Number","permalink":"/docs/leetcode/1-500/third_max_number"},"next":{"title":"416. Partition Equal Subset Sum","permalink":"/docs/leetcode/1-500/partition_equal_subset_sum"}}');var s=n(74848),o=n(28453);const i={title:"415. Add Strings",sidebar_label:"415. Add Strings",tags:["Leetcode Easy"]},d=void 0,a={},c=[{value:"Python",id:"python",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://leetcode.com/problems/add-strings/",children:"https://leetcode.com/problems/add-strings/"})}),"\n",(0,s.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def addStrings(self, num1: str, num2: str) -> str:\n        result = []\n        carry = 0\n\n        string1 = list(num1)\n        string2 = list(num2)\n\n        while string1 or string2:\n            char1 = string1.pop() if string1 else '0'\n            char2 = string2.pop() if string2 else '0'\n\n            n1 = ord(char1) - ord('0')\n            n2 = ord(char2) - ord('0')\n\n            value = n1 + n2 + carry\n            carry = value // 10\n            result.append(value % 10)\n\n        if carry:\n            result.append(carry)\n\n        return ''.join([str(char) for char in result[::-1]])\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var r=n(96540);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);