"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[91642],{97407:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var r=n(74848),o=n(28453);const i={title:"1065. Index Pairs of a String",sidebar_label:"1065. Index Pairs of a String",tags:["Leetcode Easy","Trie"]},s=void 0,c={id:"leetcode/1001-1500/index_pairs_of_string",title:"1065. Index Pairs of a String",description:"https://leetcode.com/problems/index-pairs-of-a-string/",source:"@site/docs/leetcode/1001-1500/1065_index_pairs_of_string.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/index_pairs_of_string",permalink:"/docs/leetcode/1001-1500/index_pairs_of_string",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Trie",permalink:"/docs/tags/trie"}],version:"current",sidebarPosition:1065,frontMatter:{title:"1065. Index Pairs of a String",sidebar_label:"1065. Index Pairs of a String",tags:["Leetcode Easy","Trie"]},sidebar:"docSidebar",previous:{title:"1064. Fixed Point",permalink:"/docs/leetcode/1001-1500/fixed_point"},next:{title:"1089. Duplicate Zeros",permalink:"/docs/leetcode/1001-1500/duplicate_zeros"}},a={},d=[{value:"Python",id:"python",level:2},{value:"Javascript",id:"javascript",level:2}];function l(t){const e={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://leetcode.com/problems/index-pairs-of-a-string/",children:"https://leetcode.com/problems/index-pairs-of-a-string/"})}),"\n",(0,r.jsx)(e.h2,{id:"python",children:"Python"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Time: O(NlogN)  # N = len(text)"}),"\n",(0,r.jsx)(e.li,{children:"Space: O(K)  # K = sum(len(words))"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"class Solution:\n    EOS = '-'\n    def indexPairs(self, text: str, words: List[str]) -> List[List[int]]:\n        # Build the Tire search tree for all words\n        root = {}\n        for word in words:\n            cur = root\n            for letter in word:\n                cur = cur.setdefault(letter, {})\n            cur[self.EOS] = True\n\n        result = []\n        for i in range(len(text)):\n            cur = root\n            for j in range(i, len(text)):\n                if text[j] not in cur:\n                    break\n                cur = cur[text[j]]\n                if self.EOS in cur:\n                    result.append([i, j])\n\n        return result\n"})}),"\n",(0,r.jsx)(e.h2,{id:"javascript",children:"Javascript"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"var indexPairs = function (text, words) {\n\tconst trie = new Trie();\n\ttrie.insert(words);\n\treturn trie.find(text);\n};\n\nclass Trie {\n\tconstructor() {\n\t\tthis.root = {};\n\t}\n\n\tinsert(words) {\n\t\tfor (const word of words) {\n\t\t\tlet node = this.root;\n\t\t\tfor (const char of word) {\n\t\t\t\tif (!node[char]) node[char] = {};\n\t\t\t\tnode = node[char];\n\t\t\t}\n\t\t\tnode.isMatched = true;\n\t\t}\n\t}\n\n\tfind(text) {\n\t\tconst result = [];\n\n\t\touter: \n        for (let i = 0; i < text.length; i++) {\n\t\t\tlet node = this.root;\n\t\t\tfor (let k = i; k < text.length; k++) {\n\t\t\t\tconst char = text[k];\n\n\t\t\t\tif (!node[char]) continue outer;\n\t\t\t\telse if (node[char].isMatched) {\n\t\t\t\t\tresult.push([i, k]);\n\t\t\t\t}\n\t\t\t\tnode = node[char];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n"})})]})}function u(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>c});var r=n(96540);const o={},i=r.createContext(o);function s(t){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:s(t.components),r.createElement(i.Provider,{value:e},t.children)}}}]);