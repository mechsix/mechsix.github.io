"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[25964],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,c=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=s(n),h=i,d=u["".concat(l,".").concat(h)]||u[h]||p[h]||c;return n?r.createElement(d,a(a({ref:t},m),{},{components:n})):r.createElement(d,a({ref:t},m))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var c=n.length,a=new Array(c);a[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:i,a[1]=o;for(var s=2;s<c;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},90158:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));const c={title:"2622. Cache With Time Limit",sidebar_label:"2622. Cache With Time Limit",tags:["Leetcode Medium","JS 30 Days Challenge"]},a=void 0,o={unversionedId:"leetcode/2000/cache_with_timelimit",id:"leetcode/2000/cache_with_timelimit",title:"2622. Cache With Time Limit",description:"https://leetcode.com/problems/cache-with-time-limit/",source:"@site/docs/leetcode/2000/2622_cache_with_timelimit.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/cache_with_timelimit",permalink:"/docs/leetcode/2000/cache_with_timelimit",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/2000/2622_cache_with_timelimit.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"JS 30 Days Challenge",permalink:"/docs/tags/js-30-days-challenge"}],version:"current",sidebarPosition:2622,frontMatter:{title:"2622. Cache With Time Limit",sidebar_label:"2622. Cache With Time Limit",tags:["Leetcode Medium","JS 30 Days Challenge"]},sidebar:"docSidebar",previous:{title:"2621. Sleep",permalink:"/docs/leetcode/2000/sleep"},next:{title:"2623. Memoize",permalink:"/docs/leetcode/2000/memoize"}},l={},s=[{value:"Javascript",id:"javascript",level:2},{value:"Typescript",id:"typescript",level:2}],m={toc:s},u="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/cache-with-time-limit/"},"https://leetcode.com/problems/cache-with-time-limit/")),(0,i.kt)("h2",{id:"javascript"},"Javascript"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"var TimeLimitedCache = function() {\n    this.cache = {}\n};\n\n/**\n * @param {number} key\n * @param {number} value\n * @param {number} time until expiration in ms\n * @return {boolean} if un-expired key already existed\n */\nTimeLimitedCache.prototype.set = function(key, value, duration) {\n    const cache = this.cache\n    const isExist = cache.hasOwnProperty(key)\n\n    if (isExist) {\n        clearTimeout(cache[key]['timer'])\n    }\n\n    const timer = setTimeout(() => {\n        delete cache[key]\n    }, duration)\n\n    cache[key] = {\n        timer: timer,\n        value: value\n    }\n    return isExist\n};\n\n/**\n * @param {number} key\n * @return {number} value associated with key\n */\nTimeLimitedCache.prototype.get = function(key) {\n    return this.cache.hasOwnProperty(key) ? this.cache[key]['value'] : -1\n};\n\n/**\n * @return {number} count of non-expired keys\n */\nTimeLimitedCache.prototype.count = function() {\n    return Object.keys(this.cache).length\n};\n\n/**\n * Your TimeLimitedCache object will be instantiated and called as such:\n * var obj = new TimeLimitedCache()\n * obj.set(1, 42, 1000); // false\n * obj.get(1) // 42\n * obj.count() // 1\n */\n")),(0,i.kt)("h2",{id:"typescript"},"Typescript"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"type LimitedCacheType = {\n    timer: ReturnType<typeof setTimeout>;\n    value: number;\n};\n\nclass TimeLimitedCache {\n    cache: {[key: number]: LimitedCacheType}\n\n    constructor() {\n        this.cache = {}\n    }\n\n    set(key: number, value: number, duration: number): boolean {\n        const cache = this.cache\n        const isExist = cache.hasOwnProperty(key)\n\n        if (isExist) {\n            clearTimeout(cache[key]['timer'])\n        }\n\n        const timer = setTimeout(() => {\n            delete cache[key]\n        }, duration)\n\n        cache[key] = {\n            timer: timer,\n            value: value\n        }\n\n        return isExist\n    }\n\n    get(key: number): number {\n        return this.cache.hasOwnProperty(key) ? this.cache[key]['value'] : -1\n    }\n\n    count(): number {\n        return Object.keys(this.cache).length\n    }\n}\n")))}p.isMDXComponent=!0}}]);