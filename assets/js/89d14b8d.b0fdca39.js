"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[7123],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return g}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},u=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(r),f=o,g=p["".concat(s,".").concat(f)]||p[f]||d[f]||i;return r?t.createElement(g,a(a({ref:n},u),{},{components:r})):t.createElement(g,a({ref:n},u))}));function g(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},14762:function(e,n,r){r.r(n),r.d(n,{assets:function(){return s},contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l}});var t=r(83117),o=(r(67294),r(3905));const i={title:"441. Arranging Coins",sidebar_label:"441. Arranging Coins",tags:["Leetcode Easy"]},a=void 0,c={unversionedId:"leetcode/1-500/arranging_coins",id:"leetcode/1-500/arranging_coins",title:"441. Arranging Coins",description:"https://leetcode.com/problems/arranging-coins",source:"@site/docs/leetcode/1-500/441_arranging_coins.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/arranging_coins",permalink:"/docs/leetcode/1-500/arranging_coins",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/441_arranging_coins.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"}],version:"current",sidebarPosition:441,frontMatter:{title:"441. Arranging Coins",sidebar_label:"441. Arranging Coins",tags:["Leetcode Easy"]},sidebar:"docSidebar",previous:{title:"438. Find All Anagrams in a String",permalink:"/docs/leetcode/1-500/find_all_anagrams_in_a_string"},next:{title:"448. Find All Numbers Disappeared in an Array",permalink:"/docs/leetcode/1-500/find_all_nums_disappeared_in_array"}},s={},l=[{value:"Python",id:"python",level:2}],u={toc:l};function p(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/arranging-coins"},"https://leetcode.com/problems/arranging-coins")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def arrangeCoins(self, n: int) -> int:\n        row_counts = 0\n        counter = 1\n\n        while n > 0:\n            if n - counter >= 0:\n                row_counts += 1\n\n            n -= counter\n            counter += 1\n\n        return row_counts\n")))}p.isMDXComponent=!0}}]);