"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[96596],{30963:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"leetcode/501-1000/single_elm_in_sotrted_array","title":"540. Single Element in a Sorted Array","description":"https://leetcode.com/problems/single-element-in-a-sorted-array","source":"@site/docs/leetcode/501-1000/540_single_elm_in_sotrted_array.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/single_elm_in_sotrted_array","permalink":"/docs/leetcode/501-1000/single_elm_in_sotrted_array","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Hash","permalink":"/docs/tags/hash"}],"version":"current","sidebarPosition":540,"frontMatter":{"title":"540. Single Element in a Sorted Array","sidebar_label":"540. Single Element in a Sorted Array","tags":["Leetcode Medium","Hash"]},"sidebar":"docSidebar","previous":{"title":"538. Convert BST to Greater Tree","permalink":"/docs/leetcode/501-1000/feat1038_convert_bst_greater_tree"},"next":{"title":"543. Diameter of Binary Tree","permalink":"/docs/leetcode/501-1000/diameter_of_binary_tree"}}');var i=t(74848),o=t(28453);const s={title:"540. Single Element in a Sorted Array",sidebar_label:"540. Single Element in a Sorted Array",tags:["Leetcode Medium","Hash"]},l=void 0,a={},d=[{value:"Python",id:"python",level:2},{value:"Reduce",id:"reduce",level:3},{value:"Set",id:"set",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/single-element-in-a-sorted-array",children:"https://leetcode.com/problems/single-element-in-a-sorted-array"})}),"\n",(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h3,{id:"reduce",children:"Reduce"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from functools import reduce\n\n\nclass Solution:\n    def singleNonDuplicate(self, nums: List[int]) -> int:\n        return reduce(lambda a, b: a^b, nums)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"set",children:"Set"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Did not use the advantage of sorted condition"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def singleNonDuplicate(self, nums: List[int]) -> int:\n        buffer = set()\n\n        for num in nums:\n            if num not in buffer:\n                buffer.add(num)\n            else:\n                buffer.remove(num)\n\n        return buffer.pop(\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var r=t(96540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);