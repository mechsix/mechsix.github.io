"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[80216],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),d=r,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?o.createElement(f,i(i({ref:t},u),{},{components:n})):o.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},41683:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const a={title:"1680. Concatenation of Consecutive Binary Numbers",sidebar_label:"1680. Concatenation of Consecutive Binary Numbers",tags:["Leetcode Medium","Bit Manipulation"]},i=void 0,c={unversionedId:"leetcode/1501-2000/concatenation_of_consecutive_bin_nums",id:"leetcode/1501-2000/concatenation_of_consecutive_bin_nums",title:"1680. Concatenation of Consecutive Binary Numbers",description:"https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers/",source:"@site/docs/leetcode/1501-2000/1680_concatenation_of_consecutive_bin_nums.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/concatenation_of_consecutive_bin_nums",permalink:"/docs/leetcode/1501-2000/concatenation_of_consecutive_bin_nums",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1501-2000/1680_concatenation_of_consecutive_bin_nums.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Bit Manipulation",permalink:"/docs/tags/bit-manipulation"}],version:"current",sidebarPosition:1680,frontMatter:{title:"1680. Concatenation of Consecutive Binary Numbers",sidebar_label:"1680. Concatenation of Consecutive Binary Numbers",tags:["Leetcode Medium","Bit Manipulation"]},sidebar:"docSidebar",previous:{title:"1679. Max Number of K-Sum Pairs",permalink:"/docs/leetcode/1501-2000/max_num_of_k_sum_pairs"},next:{title:"1683. Invalid Tweets",permalink:"/docs/leetcode/1501-2000/invalid_tweets"}},s={},l=[{value:"Python",id:"python",level:2}],u={toc:l},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers/"},"https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers/")),(0,r.kt)("h2",{id:"python"},"Python"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u76f4\u89ba\u7684\u5beb\u6cd5\uff0c\u4f46\u5c31run\u7684\u904e\u4e86...")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Time: O(N) # \u8ff4\u5708\u8981\u5f9e1\u8dd1\u5230N")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Space: O(1)"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def concatenatedBinary(self, n: int) -> int:\n        mod = 10**9+7\n        ans = 1\n        for i in range(2, n+1):\n            bins = str(bin(i))[2:]\n            ans <<= len(bins)\n            ans += i\n            ans %= mod\n\n        return ans\n")))}m.isMDXComponent=!0}}]);