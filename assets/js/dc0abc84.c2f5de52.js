"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[74572],{68805:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"leetcode/1-500/edit_distance","title":"72. Edit Distance","description":"https://leetcode.com/problems/edit-distance/","source":"@site/docs/leetcode/1-500/72_edit_distance.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/edit_distance","permalink":"/docs/leetcode/1-500/edit_distance","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Hard","permalink":"/docs/tags/leetcode-hard"},{"inline":true,"label":"DP","permalink":"/docs/tags/dp"},{"inline":true,"label":"CTCI","permalink":"/docs/tags/ctci"}],"version":"current","sidebarPosition":72,"frontMatter":{"title":"72. Edit Distance","sidebar_label":"72. Edit Distance","tags":["Leetcode Hard","DP","CTCI"]},"sidebar":"docSidebar","previous":{"title":"71. Simplify Path","permalink":"/docs/leetcode/1-500/simplify_path"},"next":{"title":"74. Search a 2D Matrix","permalink":"/docs/leetcode/1-500/search_2d_matrix"}}');var r=t(74848),i=t(28453);const l={title:"72. Edit Distance",sidebar_label:"72. Edit Distance",tags:["Leetcode Hard","DP","CTCI"]},o=void 0,s={},c=[{value:"Python",id:"python",level:2},{value:"Bottom-up DP",id:"bottom-up-dp",level:3},{value:"Javascript",id:"javascript",level:2},{value:"Rust",id:"rust",level:2}];function a(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://leetcode.com/problems/edit-distance/",children:"https://leetcode.com/problems/edit-distance/"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"CTCI 1.5 One Away"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(e.h3,{id:"bottom-up-dp",children:"Bottom-up DP"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"word1\\word2"}),(0,r.jsx)(e.th,{children:'""'}),(0,r.jsx)(e.th,{children:"a"}),(0,r.jsx)(e.th,{children:"p"}),(0,r.jsx)(e.th,{children:"p"}),(0,r.jsx)(e.th,{children:"l"}),(0,r.jsx)(e.th,{children:"e"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:'""'}),(0,r.jsx)(e.td,{children:"0"}),(0,r.jsx)(e.td,{children:"1"}),(0,r.jsx)(e.td,{children:"2"}),(0,r.jsx)(e.td,{children:"3"}),(0,r.jsx)(e.td,{children:"4"}),(0,r.jsx)(e.td,{children:"5"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"r"}),(0,r.jsx)(e.td,{children:"1"}),(0,r.jsx)(e.td,{children:"1"}),(0,r.jsx)(e.td,{children:"2"}),(0,r.jsx)(e.td,{children:"3"}),(0,r.jsx)(e.td,{children:"4"}),(0,r.jsx)(e.td,{children:"5"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"a"}),(0,r.jsx)(e.td,{children:"2"}),(0,r.jsx)(e.td,{children:"1"}),(0,r.jsx)(e.td,{children:"2"}),(0,r.jsx)(e.td,{children:"3"}),(0,r.jsx)(e.td,{children:"4"}),(0,r.jsx)(e.td,{children:"5"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"d"}),(0,r.jsx)(e.td,{children:"3"}),(0,r.jsx)(e.td,{children:"2"}),(0,r.jsx)(e.td,{children:"2"}),(0,r.jsx)(e.td,{children:"3"}),(0,r.jsx)(e.td,{children:"4"}),(0,r.jsx)(e.td,{children:"5"})]})]})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def minDistance(self, word1: str, word2: str) -> int:\n        m, n = len(word1), len(word2)\n\n        dp = [[0]*(n+1) for _ in range(m+1)]\n\n        for row in range(1, m+1):\n            dp[row][0] = row\n        for col in range(1, n+1):\n            dp[0][col] = col\n\n\n        for row in range(1, m+1):\n            for col in range(1, n+1):\n                if word1[row-1] == word2[col-1]:\n                    dp[row][col] = dp[row-1][col-1]\n                else:\n                    dp[row][col] = min(\n                        dp[row-1][col]+1,\n                        dp[row][col-1]+1,\n                        dp[row-1][col-1]+1\n                    )\n\n        return dp[m][n]\n"})}),"\n",(0,r.jsx)(e.h2,{id:"javascript",children:"Javascript"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'var minDistance = function(word1, word2) {\n    const dp = [...new Array(word1.length + 1)].map(() => new Array(word2.length + 1).fill(0))\n    for (let i = 0; i <= word1.length; i++) {\n        for (let j = 0; j <= word2.length; j++) {\n            if (i === 0) dp[i][j] = j;\n            else if (j === 0) dp[i][j] = i;\n            else {\n                if (word1[i - 1] === word2[j - 1]) {\n                    dp[i][j] = dp[i - 1][j - 1];\n                } else {\n                    dp[i][j] = Math.min(\n                        dp[i - 1][j] + 1,\n                        dp[i - 1][j - 1] + 1,\n                        dp[i][j - 1] + 1,\n                    );\n                }\n            }\n        }\n    }\n\n    return dp[word1.length][word2.length]\n};\n\n/**\n *   " h o r s e\n * " 0 1 2 3 4 5\n * r 1 1 2 2 3 4\n * o 2 2 1 2 3 4\n * s 3 3 2 2 2 3\n */\n'})}),"\n",(0,r.jsx)(e.h2,{id:"rust",children:"Rust"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn min_distance(word1: String, word2: String) -> i32 {\n        let m = word1.len();\n        let n = word2.len();\n        let word1_bytes = word1.as_bytes();\n        let word2_bytes = word2.as_bytes();\n\n        let mut dp = vec![vec![0; n + 1]; m + 1];\n\n        for row in 0..m {\n            dp[row][0] = row;\n        }\n        for col in 0..n {\n            dp[0][col] = col;\n        }\n\n        for row in 1..m+1 {\n            for col in 1..n+1 {\n                if word1_bytes[row-1] == word2_bytes[col-1] {\n                    dp[row][col] = dp[row-1][col-1];\n                    continue;\n                }\n\n                dp[row][col] = *vec![\n                    1+dp[row-1][col],\n                    1+dp[row][col-1],\n                    1+dp[row-1][col-1]\n                ].iter().min().unwrap();\n            }\n        }\n\n        dp[m][n] as i32\n    }\n}\n"})})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>o});var d=t(96540);const r={},i=d.createContext(r);function l(n){const e=d.useContext(i);return d.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),d.createElement(i.Provider,{value:e},n.children)}}}]);