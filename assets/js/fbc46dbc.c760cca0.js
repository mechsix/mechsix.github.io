"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[41215],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(n),h=o,f=p["".concat(u,".").concat(h)]||p[h]||d[h]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},63423:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],c={title:"1642. Furthest Building You Can Reach",sidebar_label:"1642. Furthest Building You Can Reach",tags:["Leetcode Hard","Heap"]},u=void 0,l={unversionedId:"leetcode/1501-2000/furtuest_building_can_reach",id:"leetcode/1501-2000/furtuest_building_can_reach",title:"1642. Furthest Building You Can Reach",description:"https://leetcode.com/problems/furthest-building-you-can-reach/",source:"@site/docs/leetcode/1501-2000/1642_furtuest_building_can_reach.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/furtuest_building_can_reach",permalink:"/docs/leetcode/1501-2000/furtuest_building_can_reach",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1501-2000/1642_furtuest_building_can_reach.md",tags:[{label:"Leetcode Hard",permalink:"/docs/tags/leetcode-hard"},{label:"Heap",permalink:"/docs/tags/heap"}],version:"current",sidebarPosition:1642,frontMatter:{title:"1642. Furthest Building You Can Reach",sidebar_label:"1642. Furthest Building You Can Reach",tags:["Leetcode Hard","Heap"]},sidebar:"docSidebar",previous:{title:"1641. Count Sorted Vowel Strings",permalink:"/docs/leetcode/1501-2000/count_sorted_vowel_strings"},next:{title:"1644. Lowest Common Ancestor of a Binary Tree II",permalink:"/docs/leetcode/1501-2000/lowest_common_ancestor_of_bt_ii"}},s=[{value:"Python",id:"python",children:[],level:2}],d={toc:s};function p(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/furthest-building-you-can-reach/"},"https://leetcode.com/problems/furthest-building-you-can-reach/")),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import heapq\n\n\nclass Solution:\n    def furthestBuilding(self, heights: List[int], bricks: int, ladders: int) -> int:\n        heap = []\n        heapq.heapify(heap)\n\n        for i in range(1, len(heights)):\n            diff = heights[i] - heights[i-1]\n\n            # Jump down, won't need bricks or ladders\n            if diff <= 0:\n                continue\n\n            heapq.heappush(heap, diff)\n            if len(heap) <= ladders:\n                # Ladders still enough\n                continue\n\n            # Use the bricks on the miniumn cost of diff\n            bricks -= heapq.heappop(heap)\n\n            # Running out of bricks, reach the farest building\n            if bricks < 0:\n                return i-1\n\n        # Resource is enough to reaching the end\n        return len(heights)-1\n")))}p.isMDXComponent=!0}}]);