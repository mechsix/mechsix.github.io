"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[46970],{35021:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=t(74848),o=t(28453);const i={title:"200. Number of Islands",sidebar_label:"200. Number of Islands",tags:["Leetcode Medium","Matrix"]},r=void 0,l={id:"leetcode/1-500/number_of_islands",title:"200. Number of Islands",description:"https://leetcode.com/problems/number-of-islands/",source:"@site/docs/leetcode/1-500/200_number_of_islands.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/number_of_islands",permalink:"/docs/leetcode/1-500/number_of_islands",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Matrix",permalink:"/docs/tags/matrix"}],version:"current",sidebarPosition:200,frontMatter:{title:"200. Number of Islands",sidebar_label:"200. Number of Islands",tags:["Leetcode Medium","Matrix"]},sidebar:"docSidebar",previous:{title:"199. Binary Tree Right Side View",permalink:"/docs/leetcode/1-500/binary_tree_right_side_view"},next:{title:"202. Happy Number",permalink:"/docs/leetcode/1-500/happy_number"}},d={},c=[{value:"Python",id:"python",level:2},{value:"DFS with Hashmap",id:"dfs-with-hashmap",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/number-of-islands/",children:"https://leetcode.com/problems/number-of-islands/"})}),"\n",(0,s.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(n.h3,{id:"dfs-with-hashmap",children:"DFS with Hashmap"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Time: O(M*N)"}),"\n",(0,s.jsx)(n.li,{children:"Space: O(K)  # K present the block with"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        m, n = len(grid), len(grid[0])\n        offsets = [(0, 1), (0, -1), (1, 0), (-1, 0)]\n        visited = set()\n\n\n        def dfs(row: int, col: int, island: set):\n            if grid[row][col] == \"0\":\n                return set()\n\n            island.add((row, col))\n\n            for rx, cx in offsets:\n                if row+rx < 0 or row+rx >= m or col+cx < 0 or col+cx >= n:\n                    continue\n                if (row+rx, col+cx) in island:\n                    continue\n                island |= dfs(row+rx, col+cx, island)\n\n            return island\n\n        ans = 0\n        for row in range(m):\n            for col in range(n):\n                if grid[row][col] == '0' or (row, col) in visited:\n                    continue\n                ans += 1\n                visited |= dfs(row, col, set())\n\n        return ans\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(96540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);