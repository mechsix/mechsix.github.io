"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[1309],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=o,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||a;return t?r.createElement(f,s(s({ref:n},u),{},{components:t})):r.createElement(f,s({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var c=2;c<a;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},93688:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),s=["components"],l={title:"useState & useMemo",sidebar_label:"useState & useMemo",tags:["Frontend"]},i=void 0,c={unversionedId:"react/use-state",id:"react/use-state",title:"useState & useMemo",description:"Multiple Set State",source:"@site/docs/react/use-state.md",sourceDirName:"react",slug:"/react/use-state",permalink:"/docs/react/use-state",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/react/use-state.md",tags:[{label:"Frontend",permalink:"/docs/tags/frontend"}],version:"current",frontMatter:{title:"useState & useMemo",sidebar_label:"useState & useMemo",tags:["Frontend"]},sidebar:"docSidebar",previous:{title:"Event Listener",permalink:"/docs/react/event_listener"},next:{title:"Fbcid Trim",permalink:"/docs/scripts/fbcid-trim"}},u=[{value:"Multiple Set State",id:"multiple-set-state",children:[],level:2},{value:"useState on Object",id:"usestate-on-object",children:[],level:2},{value:"useMemo",id:"usememo",children:[],level:2},{value:"useCallback",id:"usecallback",children:[],level:2}],p={toc:u};function m(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"multiple-set-state"},"Multiple Set State"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example() {\n  const [moo, setMoo] = useState(0);\n  const [foo, setFoo] = useState(0);\n\n  const handleClick = () => {\n    setMoo(moo + 1)\n    setMoo(moo + 1) // ??!!\n\n    setFoo(foo + 1)\n  }\n\n  return (\n    <>\n      <p>\n        <button onClick={handleClick}>Click Me</button>\n      </p>\n      <p>Moo: {moo}</p>\n      <p>Foo: {foo}</p>\n    </>\n  );\n}\n")),(0,a.kt)("h2",{id:"usestate-on-object"},"useState on Object"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example() {\n  const [counter, setCounter] = useState(0);\n  const [animal, setAnimal] = useState('dog');\n\n  const obj = {\n    type: (animal === 'dog') ? 'Mammals' : 'Bird',\n    move: (animal === 'dog') ? 'walk' : 'fly'\n  }\n\n  // const obj = useMemo(() => ({\n  //   type: (animal === 'dog') ? 'Mammals' : 'Bird',\n  //   move: (animal === 'dog') ? 'walk' : 'fly'\n  // }), [animal])\n\n  const handleIncrease = () => {\n    setCounter(counter => counter + 1)\n  }\n\n  const handleChange = () => {\n    if (animal === 'dog') {\n      setAnimal('duck')\n    } else {\n      setAnimal('dog')\n    }\n  }\n\n  useEffect(() => {\n    console.log('Obj changed', obj)\n  }, [obj])\n\n  return (\n    <>\n      <p>\n        <button onClick={handleIncrease}>Increase</button>\n        <button onClick={handleChange}>Change</button>\n      </p>\n      <p>Counter: {counter}</p>\n      <p>{obj.type} can {obj.move}</p>\n    </>\n  );\n}\n")),(0,a.kt)("h2",{id:"usememo"},"useMemo"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/hooks-reference.html#usememo"},"useMemo")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Example() {\n  const [expensive, setExpensive] = useState(0);\n  const [cheap, setCheap] = useState(0);\n\n  const somethingExpensive = (origin) => {\n    let result = origin\n    for (let i=0; i <= 1000000000; i++) {\n      result += 0.000000001\n    }\n    return result\n  }\n\n  const handleClickCheap = () => {\n    setCheap(cheap + 1)\n  }\n\n  const handleClickExpensive = () => {\n    setExpensive(somethingExpensive(expensive))\n  }\n\n  return (\n    <>\n      <p>\n        <button onClick={handleClickCheap}>Cheap</button>\n        <button onClick={handleClickExpensive}>Expensive</button>\n      </p>\n      <p>Cheap: {cheap}</p>\n      <p>Exp: {expensive}</p>\n    </>\n  );\n}\n")),(0,a.kt)("h2",{id:"usecallback"},"useCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"useCallback(fn, [dep])\nuseMemo(() => fn, [deps])\n")))}m.isMDXComponent=!0}}]);