"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[8564],{47975:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"leetcode/501-1000/flip_string_to_monotone_increasing","title":"926. Flip String to Monotone Increasing","description":"https://leetcode.com/problems/flip-string-to-monotone-increasing/description/","source":"@site/docs/leetcode/501-1000/926_flip_string_to_monotone_increasing.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/flip_string_to_monotone_increasing","permalink":"/docs/leetcode/501-1000/flip_string_to_monotone_increasing","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"DP","permalink":"/docs/tags/dp"}],"version":"current","sidebarPosition":926,"frontMatter":{"title":"926. Flip String to Monotone Increasing","sidebar_label":"926. Flip String to Monotone Increasing","tags":["Leetcode Medium","DP"]},"sidebar":"docSidebar","previous":{"title":"916. Word Subsets","permalink":"/docs/leetcode/501-1000/word_subsets"},"next":{"title":"931. Minimum Falling Path Sum","permalink":"/docs/leetcode/501-1000/minimum_falling_path_sum"}}');var o=i(74848),s=i(28453);const r={title:"926. Flip String to Monotone Increasing",sidebar_label:"926. Flip String to Monotone Increasing",tags:["Leetcode Medium","DP"]},c=void 0,l={},a=[{value:"Python",id:"python",level:2},{value:"Dynamic Window",id:"dynamic-window",level:3},{value:"Dynamic Window (Official Solution)",id:"dynamic-window-official-solution",level:3}];function d(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://leetcode.com/problems/flip-string-to-monotone-increasing/description/",children:"https://leetcode.com/problems/flip-string-to-monotone-increasing/description/"})}),"\n",(0,o.jsx)(e.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(e.h3,{id:"dynamic-window",children:"Dynamic Window"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def minFlipsMonoIncr(self, s: str) -> int:\n        left1, right0 = 0, sum([1 for char in s if char == '0'])\n\n        ans = right0\n\n        print(left1, right0, ans)\n        for char in s:\n            if char == '0':\n                right0 -= 1\n            else:\n                left1 += 1\n\n            ans = min(ans, left1+right0)\n\n        return ans\n"})}),"\n",(0,o.jsx)(e.h3,{id:"dynamic-window-official-solution",children:"Dynamic Window (Official Solution)"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def minFlipsMonoIncr(self, s: str) -> int:\n        count = sum([1 for n in s if n == '0'])\n\n        ans = count\n        for char in s:\n            if char == '0':\n                count -= 1\n                ans = min(ans, count)\n            else:\n                count += 1\n        return ans\n"})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>c});var t=i(96540);const o={},s=t.createContext(o);function r(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);