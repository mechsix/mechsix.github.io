"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[24607],{24117:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>a});var s=n(74848),i=n(28453);const c={title:"115. Distinct Subsequences",sidebar_label:"115. Distinct Subsequences",tags:["DP","Leetcode Hard"]},o=void 0,r={id:"leetcode/1-500/distinct_subsequences",title:"115. Distinct Subsequences",description:"https://leetcode.com/problems/distinct-subsequences/",source:"@site/docs/leetcode/1-500/115_distinct_subsequences.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/distinct_subsequences",permalink:"/docs/leetcode/1-500/distinct_subsequences",draft:!1,unlisted:!1,tags:[{label:"DP",permalink:"/docs/tags/dp"},{label:"Leetcode Hard",permalink:"/docs/tags/leetcode-hard"}],version:"current",sidebarPosition:115,frontMatter:{title:"115. Distinct Subsequences",sidebar_label:"115. Distinct Subsequences",tags:["DP","Leetcode Hard"]},sidebar:"docSidebar",previous:{title:"114. Flatten Binary Tree to Linked List",permalink:"/docs/leetcode/1-500/flatten_binary_tree_to_ll"},next:{title:"116. Populating Next Right Pointers in Each Node",permalink:"/docs/leetcode/1-500/link_next_right_in_binary_tree_nodes"}},d={},a=[{value:"Python",id:"python",level:2},{value:"Javascript",id:"javascript",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://leetcode.com/problems/distinct-subsequences/",children:"https://leetcode.com/problems/distinct-subsequences/"})}),"\n",(0,s.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(t.h2,{id:"javascript",children:"Javascript"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"var numDistinct = function(s, t) {\n    const memo = {};\n    \n    const dfs = (i, j) => {\n        if (!memo.hasOwnProperty(i)) memo[i] = {};\n        \n        if (j === t.length) return 1;\n        if (i === s.length) return 0;\n        if (memo[i][j] !== undefined) return memo[i][j];\n        \n        if (s[i] === t[j]) {\n            memo[i][j] = dfs(i + 1, j + 1) + dfs(i + 1, j);\n        } else {\n            memo[i][j] = dfs(i + 1, j)\n        }\n        \n        return memo[i][j]\n    }\n    return dfs(0, 0);\n};\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(96540);const i={},c=s.createContext(i);function o(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);