"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[18586],{31004:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=t(74848),r=t(28453);const a={title:"221. Maximal Square",sidebar_label:"221. Maximal Square",tags:["DP"]},i=void 0,l={id:"leetcode/1-500/max_square",title:"221. Maximal Square",description:"https://leetcode.com/problems/maximal-square/",source:"@site/docs/leetcode/1-500/221_max_square.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/max_square",permalink:"/docs/leetcode/1-500/max_square",draft:!1,unlisted:!1,tags:[{label:"DP",permalink:"/docs/tags/dp"}],version:"current",sidebarPosition:221,frontMatter:{title:"221. Maximal Square",sidebar_label:"221. Maximal Square",tags:["DP"]},sidebar:"docSidebar",previous:{title:"219. Contains Duplicate II",permalink:"/docs/leetcode/1-500/contains_duplicate_ii"},next:{title:"222. Count Complete Tree Nodes",permalink:"/docs/leetcode/1-500/count_complete_bin_tree"}},s={},c=[{value:"Python",id:"python",level:2},{value:"Bottom Up DP",id:"bottom-up-dp",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/maximal-square/",children:"https://leetcode.com/problems/maximal-square/"})}),"\n",(0,o.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(n.h3,{id:"bottom-up-dp",children:"Bottom Up DP"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Time: O(M*N)"}),"\n",(0,o.jsx)(n.li,{children:"Space: O(M*N)"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class Solution:\n    def maximalSquare(self, matrix: List[List[str]]) -> int:\n        m, n = len(matrix), len(matrix[0])\n\n        dp = [[0]*(n+1) for _ in range(m+1)]\n        ans = 0\n\n        for row in range(1, m+1):\n            for col in range(1, n+1):\n                if matrix[row-1][col-1] != "1":\n                    continue\n\n                dp[row][col] = 1 + min([\n                    dp[row-1][col], dp[row][col-1], dp[row-1][col-1]\n                ])\n\n                ans = max(ans, dp[row][col])\n\n        return ans**2\n'})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var o=t(96540);const r={},a=o.createContext(r);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);