"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[98816],{30850:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=t(74848),o=t(28453);const i={title:"983. Minimum Cost For Tickets",sidebar_label:"983. Minimum Cost For Tickets",tags:["Leetcode Medium","DP"]},r=void 0,c={id:"leetcode/501-1000/min_cost_for_tickets",title:"983. Minimum Cost For Tickets",description:"https://leetcode.com/problems/minimum-cost-for-tickets/",source:"@site/docs/leetcode/501-1000/983_min_cost_for_tickets.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/min_cost_for_tickets",permalink:"/docs/leetcode/501-1000/min_cost_for_tickets",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"DP",permalink:"/docs/tags/dp"}],version:"current",sidebarPosition:983,frontMatter:{title:"983. Minimum Cost For Tickets",sidebar_label:"983. Minimum Cost For Tickets",tags:["Leetcode Medium","DP"]},sidebar:"docSidebar",previous:{title:"981. Time Based Key-Value Store",permalink:"/docs/leetcode/501-1000/time_based_key_value_store"},next:{title:"985. Sum of Even Numbers After Queries",permalink:"/docs/leetcode/501-1000/sum_of_even_nums_after_queries"}},a={},d=[{value:"Python",id:"python",level:2},{value:"Top Down DP",id:"top-down-dp",level:3},{value:"Javascript",id:"javascript",level:2}];function m(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/minimum-cost-for-tickets/",children:"https://leetcode.com/problems/minimum-cost-for-tickets/"})}),"\n",(0,s.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(n.h3,{id:"top-down-dp",children:"Top Down DP"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from functools import cache\nfrom math import inf\n\n\nclass Solution:\n    def mincostTickets(self, days: List[int], costs: List[int]) -> int:\n        durations = [1, 7, 30]\n\n        @cache\n        def dp(i):\n            if i >= len(days):\n                return 0\n\n            ans = inf\n            j = i\n            for cost, duration in zip(costs, durations):\n                while j < len(days) and days[j] < days[i]+duration:\n                    j += 1\n                ans = min(ans, dp(j)+cost)\n            return ans\n\n        return dp(0)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"javascript",children:"Javascript"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"/**\n * @param {number[]} days\n * @param {number[]} costs\n * @return {number}\n */\nvar mincostTickets = function(days, costs) {\n    const memo = {};\n    const dp = (i) => {\n        if (i === days.length) return 0;\n        if (memo.hasOwnProperty(i)) return memo[i];\n        \n        let min = Infinity;\n        const steps = [1,7,30];\n        for (let j = 0; j < costs.length; j++) {\n            const cost = costs[j];\n            let k = i;\n            while (k < days.length && days[k] < days[i] + steps[j]) {\n                k++;\n            }\n            \n            min = Math.min(min, cost + dp(k))\n        }\n        \n        return memo[i] = min;\n    }\n    \n    return dp(0);\n};\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);