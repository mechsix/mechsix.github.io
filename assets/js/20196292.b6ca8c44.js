"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[16110],{85736:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=d(74848),t=d(28453);const o={title:"127. Word Ladder",sidebar_label:"127. Word Ladder",tags:["Leetcode Hard","BFS"]},i=void 0,s={id:"leetcode/1-500/word_ladder",title:"127. Word Ladder",description:"https://leetcode.com/problems/word-ladder/",source:"@site/docs/leetcode/1-500/127_word_ladder.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/word_ladder",permalink:"/docs/leetcode/1-500/word_ladder",draft:!1,unlisted:!1,tags:[{label:"Leetcode Hard",permalink:"/docs/tags/leetcode-hard"},{label:"BFS",permalink:"/docs/tags/bfs"}],version:"current",sidebarPosition:127,frontMatter:{title:"127. Word Ladder",sidebar_label:"127. Word Ladder",tags:["Leetcode Hard","BFS"]},sidebar:"docSidebar",previous:{title:"126. Word Ladder II",permalink:"/docs/leetcode/1-500/word_ladder_ii"},next:{title:"128. Longest Consecutive Sequence",permalink:"/docs/leetcode/1-500/longest_consecutive_sequence"}},c={},l=[{value:"Python",id:"python",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/word-ladder/",children:"https://leetcode.com/problems/word-ladder/"})}),"\n",(0,r.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"BFS with deuplicate remove"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from collections import deque\n\n\nclass Solution:\n    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:\n        if beginWord == endWord:\n            return 1\n\n        queue = deque()\n        queue.append(beginWord)\n\n        candidates = set(wordList)\n        candidates.add(beginWord)\n\n        result = 1\n        while queue:\n            for i in range(len(queue)):\n                word = queue.popleft()\n\n                if word not in candidates:\n                    continue\n\n                candidates.remove(word)\n\n                if word == endWord:\n                    return result\n\n                for i in range(len(word)):\n                    for char in string.ascii_letters[:26]:\n                        temp_word = word[:i] + char + word[i+1:]\n                        if temp_word in candidates:\n                            queue.append(temp_word)\n            result += 1\n        return 0\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,d)=>{d.d(n,{R:()=>i,x:()=>s});var r=d(96540);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);