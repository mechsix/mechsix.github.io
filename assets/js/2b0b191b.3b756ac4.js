"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[82610],{54064:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var i=t(74848),o=t(28453);const l={title:"142. Linked List Cycle II",slidebar_label:"142. Linked List Cycle II",tags:["Leetcode Medium","Linked List","Floyd's Algorithm","Two Pointer"]},s=void 0,d={id:"leetcode/1-500/linked_list_cycle_ii",title:"142. Linked List Cycle II",description:"https://leetcode.com/problems/linked-list-cycle-ii",source:"@site/docs/leetcode/1-500/142_linked_list_cycle_ii.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/linked_list_cycle_ii",permalink:"/docs/leetcode/1-500/linked_list_cycle_ii",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Linked List",permalink:"/docs/tags/linked-list"},{label:"Floyd's Algorithm",permalink:"/docs/tags/floyds-algorithm"},{label:"Two Pointer",permalink:"/docs/tags/two-pointer"}],version:"current",sidebarPosition:142,frontMatter:{title:"142. Linked List Cycle II",slidebar_label:"142. Linked List Cycle II",tags:["Leetcode Medium","Linked List","Floyd's Algorithm","Two Pointer"]},sidebar:"docSidebar",previous:{title:"141. Linked List Cycle",permalink:"/docs/leetcode/1-500/linked_list_cycle"},next:{title:"143. Reorder List",permalink:"/docs/leetcode/1-500/reorder_list"}},r={},c=[{value:"Python",id:"python",level:2},{value:"While Loop",id:"while-loop",level:3},{value:"Two Pointer",id:"two-pointer",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/linked-list-cycle-ii",children:"https://leetcode.com/problems/linked-list-cycle-ii"})}),"\n",(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h3,{id:"while-loop",children:"While Loop"}),"\n",(0,i.jsx)(n.p,{children:"Space O(N)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        memory = set()\n\n        node = head\n        n = 0\n\n        while node and id(node) not in memory:\n            memory.add(id(node))\n            node = node.next\n            n += 1\n\n        if not node:\n            return\n\n        return node\n"})}),"\n",(0,i.jsx)(n.h3,{id:"two-pointer",children:"Two Pointer"}),"\n",(0,i.jsx)(n.p,{children:"Floyd's Tortoise and Hare Algorithm"}),"\n",(0,i.jsxs)(n.p,{children:["Solution from ",(0,i.jsx)(n.a,{href:"https://englishandcoding.pixnet.net/blog/post/31525831-leetcode-%E7%AD%86%E8%A8%98%EF%BC%8D142.-linked-list-cycle-ii",children:"here"})]}),"\n",(0,i.jsx)(n.p,{children:"Space O(1)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        if not head or not head.next:\n            return\n        first = True\n\n        slow, fast = head, head\n\n        while slow != fast or first:\n            first = False\n            if not fast or not fast.next:\n                return\n            slow = slow.next\n            fast = fast.next.next\n\n\n        slow = head\n        while slow != fast:\n            slow = slow.next\n            fast = fast.next\n        return fast\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var i=t(96540);const o={},l=i.createContext(o);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);