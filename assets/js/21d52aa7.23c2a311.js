"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[3788],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(f,c(c({ref:n},l),{},{components:t})):r.createElement(f,c({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=d;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=t[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},61071:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return l},default:function(){return d}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),c=["components"],i={title:"401. Binary Watch",sidebar_label:"401. Binary Watch",tags:["Leetcode Easy","Backtracking"]},u=void 0,s={unversionedId:"leetcode/1-500/binary_watch",id:"leetcode/1-500/binary_watch",title:"401. Binary Watch",description:"https://leetcode.com/problems/binary-watch/",source:"@site/docs/leetcode/1-500/401_binary_watch.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/binary_watch",permalink:"/docs/leetcode/1-500/binary_watch",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/401_binary_watch.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Backtracking",permalink:"/docs/tags/backtracking"}],version:"current",sidebarPosition:401,frontMatter:{title:"401. Binary Watch",sidebar_label:"401. Binary Watch",tags:["Leetcode Easy","Backtracking"]},sidebar:"docSidebar",previous:{title:"392. Is Subsequence",permalink:"/docs/leetcode/1-500/is_subsequence"},next:{title:"404. Sum of Left Leaf",permalink:"/docs/leetcode/1-500/left_leaf_sum"}},l=[{value:"Python",id:"python",children:[],level:2},{value:"Javascript",id:"javascript",children:[],level:2}],p={toc:l};function d(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/binary-watch/"},"https://leetcode.com/problems/binary-watch/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h2",{id:"javascript"},"Javascript"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'/**\n * H [1,2,4,8]\n * M [1,2,4,8,16,32]\n * \n * Example 1:\n * turnedOn = 1 => [0,1], [1,0]\n * turnedOn = 2 => [0,2], [2,0], [1, 1]\n */\n\n/**\n * @param {number} turnedOn\n * @return {string[]}\n */\nvar readBinaryWatch = function (turnedOn) {\n  if (turnedOn >= 9) return [];\n    const hourDigits = [1, 2, 4, 8];\n    const minDigits = [1, 2, 4, 8, 16, 32];\n    const n = turnedOn;\n    const result = [];\n\n    for (let i = 0; i <= n; i++) {\n        const hours = createDigit(hourDigits, i);\n        const mins = createDigit(minDigits, n - i);\n         // console.log(hours, i)\n         // console.log(mins, n - i)\n\n     for (hour of hours) {\n      for (min of mins) {\n        if (hour >= 12 || min >= 60) break;\n        result.push(`${hour}:${padZero(min)}`);\n      }\n     }\n    }\n    return result;\n};\n\nfunction createDigit(list, max) {\n    const result = [];\n    pickByMax(list, max, 0, [], result);\n    return result;\n}\n\nfunction pickByMax(ary, max, start, record = [], result) {\n    if (record.length === max) {\n        const sum = record.reduce((acc, num) => acc + num, 0);\n        result.push(sum);\n        return;\n    }\n\n    for (let i = start; i < ary.length; i++) {\n        record.push(ary[i]);\n        pickByMax(ary, max, i + 1, record, result);\n        record.pop();\n    }\n}\n\nfunction padZero(num) {\n    if (!num) return "00";\n\n    const target = 2;\n    const max = Math.max(target - num.toString().length, 0);\n    const pad = "0".repeat(max);\n    return `${pad}${num}`;\n}\n')))}d.isMDXComponent=!0}}]);