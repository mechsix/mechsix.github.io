"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[7301],{3905:function(e,r,t){t.d(r,{Zo:function(){return d},kt:function(){return b}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),s=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},d=function(e){var r=s(e.components);return n.createElement(i.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(t),b=o,f=p["".concat(i,".").concat(b)]||p[b]||u[b]||a;return t?n.createElement(f,c(c({ref:r},d),{},{components:t})):n.createElement(f,c({ref:r},d))}));function b(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=p;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var s=2;s<a;s++)c[s]=t[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},75225:function(e,r,t){t.r(r),t.d(r,{contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var n=t(87462),o=t(63366),a=(t(67294),t(3905)),c=["components"],l={title:"723. Candy Crush",sidebar_label:"723. Candy Crush",tags:["Two Pointers","Leetcode Medium"]},i=void 0,s={unversionedId:"leetcode/501-1000/candy_crush",id:"leetcode/501-1000/candy_crush",title:"723. Candy Crush",description:"https://leetcode.com/problems/candy-crush/",source:"@site/docs/leetcode/501-1000/723_candy_crush.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/candy_crush",permalink:"/docs/leetcode/501-1000/candy_crush",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/723_candy_crush.md",tags:[{label:"Two Pointers",permalink:"/docs/tags/two-pointers"},{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"}],version:"current",sidebarPosition:723,frontMatter:{title:"723. Candy Crush",sidebar_label:"723. Candy Crush",tags:["Two Pointers","Leetcode Medium"]},sidebar:"docSidebar",previous:{title:"707. Design Linked List",permalink:"/docs/leetcode/501-1000/design_linked_list"},next:{title:"733. Flood Fill",permalink:"/docs/leetcode/501-1000/flood_fill"}},d=[{value:"Python",id:"python",children:[],level:2},{value:"Javascript",id:"javascript",children:[],level:2}],u={toc:d};function p(e){var r=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/candy-crush/"},"https://leetcode.com/problems/candy-crush/")),(0,a.kt)("h2",{id:"python"},"Python"),(0,a.kt)("h2",{id:"javascript"},"Javascript"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var candyCrush = function(board) {\n   let crush = false;\n  // row\n  for (let r = 0; r < board.length; r++) {\n    for (let c = 0; c < board[r].length - 2; c++) {\n      const target = Math.abs(board[r][c]);\n      const allEqual = (target === Math.abs(board[r][c + 1])) && (target === Math.abs(board[r][c + 2]));\n      if (board[r][c] !== 0 && allEqual) {\n        board[r][c] = board[r][c + 1] = board[r][c + 2] = -target;\n        crush = true;\n      }\n    }\n  }\n\n  // col\n  for (let c = 0; c < board[0].length; c++) {\n    for (let r = 0; r < board.length - 2; r++) {\n      const target = Math.abs(board[r][c]);\n      const allEqual = (target === Math.abs(board[r + 1][c])) && (target === Math.abs(board[r + 2][c]));\n\n      if (board[r][c] !== 0 && allEqual) {\n        board[r][c] = board[r + 1][c] = board[r + 2][c] = -target;\n        crush = true;\n      }\n    }\n  }\n\n  for (let c = 0; c < board[0].length; c++) {\n    let tmp = board.length - 1;\n    for (let r = board.length - 1; r >= 0; r--) {\n      if (board[r][c] > 0) {\n        board[tmp--][c] = board[r][c]\n      }\n    }\n    while (tmp >= 0) board[tmp--][c] = 0;\n  }\n  // console.log(board)\n  \n  if (crush) return candyCrush(board);\n  else return board;\n};\n")))}p.isMDXComponent=!0}}]);