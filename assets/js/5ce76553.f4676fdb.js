"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[20548],{63688:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"leetcode/1-500/remove_duplicates_from_sorted_linked_list","title":"83. Remove Duplicates from Sorted List","description":"https://leetcode.com/problems/remove-duplicates-from-sorted-list/","source":"@site/docs/leetcode/1-500/83_remove_duplicates_from_sorted_linked_list.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/remove_duplicates_from_sorted_linked_list","permalink":"/docs/leetcode/1-500/remove_duplicates_from_sorted_linked_list","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"},{"inline":true,"label":"Linked List","permalink":"/docs/tags/linked-list"},{"inline":true,"label":"Go","permalink":"/docs/tags/go"}],"version":"current","sidebarPosition":83,"frontMatter":{"title":"83. Remove Duplicates from Sorted List","sidebar_label":"83. Remove Duplicates from Sorted List","tags":["Leetcode Easy","Linked List","Go"]},"sidebar":"docSidebar","previous":{"title":"82. Remove Duplicates from Sorted List II","permalink":"/docs/leetcode/1-500/remove_duplicates_from_sorted_list_ii"},"next":{"title":"86. Partition List","permalink":"/docs/leetcode/1-500/partition_list"}}');var r=o(74848),s=o(28453);const i={title:"83. Remove Duplicates from Sorted List",sidebar_label:"83. Remove Duplicates from Sorted List",tags:["Leetcode Easy","Linked List","Go"]},l=void 0,c={},d=[{value:"Python",id:"python",level:2},{value:"Go",id:"go",level:2}];function a(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://leetcode.com/problems/remove-duplicates-from-sorted-list/",children:"https://leetcode.com/problems/remove-duplicates-from-sorted-list/"})}),"\n",(0,r.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        if not head:\n            return head\n\n        pre = head\n        cur = head.next\n\n        while cur:\n            if cur.val == pre.val:\n                pre.next = cur.next\n            else:\n                pre = cur\n            cur = cur.next\n        return head\n"})}),"\n",(0,r.jsx)(t.h2,{id:"go",children:"Go"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:"func deleteDuplicates(head *ListNode) *ListNode {\n    if head == nil {\n        return head\n    }\n\n    pre := head\n    cur := head.Next\n    for cur != nil {\n        if pre.Val == cur.Val {\n\n            pre.Next = cur.Next\n        } else {\n            pre = cur\n        }\n        cur = cur.Next\n    }\n    return head\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>l});var n=o(96540);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);