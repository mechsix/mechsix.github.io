"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[4657],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),s=l(n),d=o,f=s["".concat(u,".").concat(d)]||s[d]||p[d]||i;return n?r.createElement(f,c(c({ref:t},m),{},{components:n})):r.createElement(f,c({ref:t},m))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=d;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[s]="string"==typeof e?e:o,c[1]=a;for(var l=2;l<i;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},39744:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return s},frontMatter:function(){return i},metadata:function(){return a},toc:function(){return l}});var r=n(83117),o=(n(67294),n(3905));const i={title:"377. Combination Sum IV",sidebar_label:"377. Combination Sum IV",tags:["Leetcode Medium","DP"]},c=void 0,a={unversionedId:"leetcode/1-500/combination_sum_iv",id:"leetcode/1-500/combination_sum_iv",title:"377. Combination Sum IV",description:"https://leetcode.com/problems/combination-sum-iv/",source:"@site/docs/leetcode/1-500/377_combination_sum_iv.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/combination_sum_iv",permalink:"/docs/leetcode/1-500/combination_sum_iv",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/377_combination_sum_iv.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"DP",permalink:"/docs/tags/dp"}],version:"current",sidebarPosition:377,frontMatter:{title:"377. Combination Sum IV",sidebar_label:"377. Combination Sum IV",tags:["Leetcode Medium","DP"]},sidebar:"docSidebar",previous:{title:"376. Wiggle Subsequence",permalink:"/docs/leetcode/1-500/wiggle_subsequence"},next:{title:"378. Kth Smallest Element in a Sorted Matrix",permalink:"/docs/leetcode/1-500/kth_smallest_elm_in_sorted_martrix"}},u={},l=[{value:"Python",id:"python",level:2},{value:"Top Down DP",id:"top-down-dp",level:3}],m={toc:l};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/combination-sum-iv/"},"https://leetcode.com/problems/combination-sum-iv/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"top-down-dp"},"Top Down DP"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from functools import cache\n\n\nclass Solution:\n    def combinationSum4(self, nums: List[int], target: int) -> int:\n        @cache\n        def dp(remain):\n            if remain == 0:\n                return 1\n            if remain < 0:\n                return 0\n\n            count = 0\n            for num in nums:\n                count += dp(remain-num)\n            return count\n\n        return dp(target)\n")))}s.isMDXComponent=!0}}]);