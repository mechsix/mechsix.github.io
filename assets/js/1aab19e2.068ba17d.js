"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[27275],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=d(n),f=o,m=u["".concat(c,".").concat(f)]||u[f]||p[f]||a;return n?r.createElement(m,l(l({ref:t},s),{},{components:n})):r.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var d=2;d<a;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},95024:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return a},metadata:function(){return i},toc:function(){return d}});var r=n(83117),o=(n(67294),n(3905));const a={title:"729. My Calendar I",sidebar_label:"729. My Calendar I",tags:["Leetcode Medium","Interval"]},l=void 0,i={unversionedId:"leetcode/501-1000/my_calendar_1",id:"leetcode/501-1000/my_calendar_1",title:"729. My Calendar I",description:"https://leetcode.com/problems/my-calendar-i/",source:"@site/docs/leetcode/501-1000/729_my_calendar_1.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/my_calendar_1",permalink:"/docs/leetcode/501-1000/my_calendar_1",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/729_my_calendar_1.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Interval",permalink:"/docs/tags/interval"}],version:"current",sidebarPosition:729,frontMatter:{title:"729. My Calendar I",sidebar_label:"729. My Calendar I",tags:["Leetcode Medium","Interval"]},sidebar:"docSidebar",previous:{title:"724. Find Pivot Index",permalink:"/docs/leetcode/501-1000/find_pivot_index"},next:{title:"733. Flood Fill",permalink:"/docs/leetcode/501-1000/flood_fill"}},c={},d=[{value:"Python",id:"python",level:2}],s={toc:d};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/my-calendar-i/"},"https://leetcode.com/problems/my-calendar-i/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("p",null,"For the ",(0,o.kt)("inlineCode",{parentName:"p"},"book")," method:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Time: O(logN) # N: The booked schedule"),(0,o.kt)("li",{parentName:"ul"},"Space: O(1) # If the (start, end) pair accepted, each time took O(1)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class MyCalendar:\n\n    def __init__(self):\n        self.booked = []\n        \n    def book(self, start: int, end: int) -> bool:\n        for i in range(len(self.booked)):\n            s_start, s_end = self.booked[i]\n            if start >= s_end:\n                continue\n            if end > s_start:\n                return False\n            self.booked.insert(i, (start, end))\n            return True\n        \n        self.booked.append((start, end))\n        return True\n")))}u.isMDXComponent=!0}}]);