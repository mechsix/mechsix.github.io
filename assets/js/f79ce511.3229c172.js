"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[43014],{45029:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>r,toc:()=>l});var i=e(74848),o=e(28453);const c={title:"216. Combination Sum III",sidebar_label:"216. Combination Sum III",tags:["Leetcode Medium","Combinations","Backtracking"]},a=void 0,r={id:"leetcode/1-500/combination_sum_iii",title:"216. Combination Sum III",description:"https://leetcode.com/problems/combination-sum-iii/",source:"@site/docs/leetcode/1-500/216_combination_sum_iii.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/combination_sum_iii",permalink:"/docs/leetcode/1-500/combination_sum_iii",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Combinations",permalink:"/docs/tags/combinations"},{label:"Backtracking",permalink:"/docs/tags/backtracking"}],version:"current",sidebarPosition:216,frontMatter:{title:"216. Combination Sum III",sidebar_label:"216. Combination Sum III",tags:["Leetcode Medium","Combinations","Backtracking"]},sidebar:"docSidebar",previous:{title:"215. Kth Largest Element in an Array",permalink:"/docs/leetcode/1-500/kth_largest_elm_in_array"},next:{title:"217. Contains Duplicate",permalink:"/docs/leetcode/1-500/containers_duplicate"}},s={},l=[{value:"Python",id:"python",level:2},{value:"Backtracking",id:"backtracking",level:3}];function m(n){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/combination-sum-iii/",children:"https://leetcode.com/problems/combination-sum-iii/"})}),"\n",(0,i.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(t.h3,{id:"backtracking",children:"Backtracking"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def combinationSum3(self, k: int, n: int) -> List[List[int]]:\n        options = [num for num in range(1, 10)]\n        result = set()\n\n        def backtrack(track: set):\n            if len(track) == k:\n                if sum(track) == n:\n                    result.add(tuple(sorted(list(track))))\n                return\n\n            current_total = sum(track)\n\n            for option in options:\n                if option in track:\n                    continue\n\n                if current_total + option > n:\n                    continue\n\n                track.add(option)\n                backtrack(track)\n                track.remove(option)\n\n        backtrack(set())\n\n        return list(result)\n"})})]})}function d(n={}){const{wrapper:t}={...(0,o.R)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(m,{...n})}):m(n)}},28453:(n,t,e)=>{e.d(t,{R:()=>a,x:()=>r});var i=e(96540);const o={},c=i.createContext(o);function a(n){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function r(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),i.createElement(c.Provider,{value:t},n.children)}}}]);