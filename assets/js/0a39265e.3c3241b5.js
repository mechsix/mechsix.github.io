"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[45092],{77677:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>f,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var t=i(74848),o=i(28453);const r={title:"1335. Minimum Difficulty of a Job Schedule",sidebar_label:"1335. Minimum Difficulty of a Job Schedule",tags:["Leetcode Hard","Prefix Sum","DP"]},c=void 0,l={id:"leetcode/1001-1500/min_difficulty_of_job_schedule",title:"1335. Minimum Difficulty of a Job Schedule",description:"Python",source:"@site/docs/leetcode/1001-1500/1335_min_difficulty_of_job_schedule.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/min_difficulty_of_job_schedule",permalink:"/docs/leetcode/1001-1500/min_difficulty_of_job_schedule",draft:!1,unlisted:!1,tags:[{label:"Leetcode Hard",permalink:"/docs/tags/leetcode-hard"},{label:"Prefix Sum",permalink:"/docs/tags/prefix-sum"},{label:"DP",permalink:"/docs/tags/dp"}],version:"current",sidebarPosition:1335,frontMatter:{title:"1335. Minimum Difficulty of a Job Schedule",sidebar_label:"1335. Minimum Difficulty of a Job Schedule",tags:["Leetcode Hard","Prefix Sum","DP"]},sidebar:"docSidebar",previous:{title:"1332. Remove Palindromic Subsequences",permalink:"/docs/leetcode/1001-1500/remove_palindromic_subsequences"},next:{title:"1337. The K Weakest Rows in a Matrix",permalink:"/docs/leetcode/1001-1500/k_weakest_rows_in_matrix"}},s={},d=[{value:"Python",id:"python",level:2},{value:"Top Down DP",id:"top-down-dp",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,t.jsx)(n.h3,{id:"top-down-dp",children:"Top Down DP"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Time: O(N**2 * d)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Space: O(N**2 * d)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u9810\u5148\u505aprefix sum\u62ff\u51fa\u6bcf\u500b",(0,t.jsx)(n.code,{children:"index"}),"\u5f80\u53f3\u770b\u6700\u5927\u7684\u503c\uff0c\u7528\u4ee5\u6c7a\u5b9a\u5728",(0,t.jsx)(n.code,{children:"index"}),"\u6642\u7684difficulty"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"DP\u8981\u8dd1\u6240\u6709\u53ef\u80fd\uff0c\u4f46\u53ea\u7528\u4e00\u500b\u8b8a\u6578(diff)\u5b58\uff0c\u610f\u7fa9\u4e0a\u662f2D DP\u7684\u964d\u7dad\u6253\u64ca"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from math import inf\n\nclass Solution:\n    def minDifficulty(self, jobDifficulty: List[int], d: int) -> int:\n        length = len(jobDifficulty)\n\n        if length < d:\n            return -1\n\n        max_remaing = jobDifficulty[:]\n        for i in range(length-2, -1, -1):\n            max_remaing[i] = max(max_remaing[i], max_remaing[i + 1])\n\n        @cache\n        def dp(i, remains):\n            if remains == 1:\n                return max_remaing[i]\n\n            res = inf\n            diff = 0\n\n            for j in range(i, length-remains+1):\n                diff = max(diff, jobDifficulty[j])\n                res = min(res, diff + dp(j+1, remains-1))\n\n            return res\n\n        return dp(0, d)\n"})})]})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var t=i(96540);const o={},r=t.createContext(o);function c(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);