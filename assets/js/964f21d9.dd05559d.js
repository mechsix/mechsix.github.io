"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[90202],{6133:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>u,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"leetcode/501-1000/continuous_subarray_sum","title":"523. Continuous Subarray Sum","description":"https://leetcode.com/problems/continuous-subarray-sum/","source":"@site/docs/leetcode/501-1000/523_continuous_subarray_sum.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/continuous_subarray_sum","permalink":"/docs/leetcode/501-1000/continuous_subarray_sum","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Prefix Sum","permalink":"/docs/tags/prefix-sum"}],"version":"current","sidebarPosition":523,"frontMatter":{"title":"523. Continuous Subarray Sum","sidebar_label":"523. Continuous Subarray Sum","tags":["Leetcode Medium","Prefix Sum"]},"sidebar":"docSidebar","previous":{"title":"520. Detect Capital","permalink":"/docs/leetcode/501-1000/detect_capital"},"next":{"title":"525. Contiguous Array","permalink":"/docs/leetcode/501-1000/contiguous_array"}}');var o=t(74848),s=t(28453);const u={title:"523. Continuous Subarray Sum",sidebar_label:"523. Continuous Subarray Sum",tags:["Leetcode Medium","Prefix Sum"]},i=void 0,a={},c=[{value:"Python",id:"python",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/continuous-subarray-sum/",children:"https://leetcode.com/problems/continuous-subarray-sum/"})}),"\n",(0,o.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def checkSubarraySum(self, nums: List[int], k: int) -> bool:\n        if k <= 0:\n            return\n\n        # key: sum mod k, value: index\n        prefix_map = {0: -1}\n        remainder = 0\n\n        for i, num in enumerate(nums):\n            remainder += num\n            remainder %= k\n\n            if remainder in prefix_map:\n                if i - prefix_map.get(remainder) > 1:\n                    return True\n            else:\n                prefix_map[remainder] = i\n\n        return False\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>u,x:()=>i});var r=t(96540);const o={},s=r.createContext(o);function u(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:u(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);