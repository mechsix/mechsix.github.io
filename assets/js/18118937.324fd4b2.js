"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[52445],{45351:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var o=t(74848),i=t(28453);const s={title:"63. Unique Paths II",sidebar_label:"63. Unique Paths II",tags:["Leetcode Medium","DFS"]},c=void 0,r={id:"leetcode/1-500/unique_paths_ii",title:"63. Unique Paths II",description:"Python",source:"@site/docs/leetcode/1-500/63_unique_paths_ii.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/unique_paths_ii",permalink:"/docs/leetcode/1-500/unique_paths_ii",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"DFS",permalink:"/docs/tags/dfs"}],version:"current",sidebarPosition:63,frontMatter:{title:"63. Unique Paths II",sidebar_label:"63. Unique Paths II",tags:["Leetcode Medium","DFS"]},sidebar:"docSidebar",previous:{title:"62. Unique Paths",permalink:"/docs/leetcode/1-500/unique_paths"},next:{title:"66. Plus One",permalink:"/docs/leetcode/1-500/plus_one"}},a={},l=[{value:"Python",id:"python",level:2},{value:"DFS with cache",id:"dfs-with-cache",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(n.h3,{id:"dfs-with-cache",children:"DFS with cache"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from functools import cache\n\n\nclass Solution:\n    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:\n        m, n = len(obstacleGrid), len(obstacleGrid[0])\n\n        if obstacleGrid[0][0] == 1 or obstacleGrid[m-1][n-1] == 1:\n            return 0\n\n        @cache\n        def dfs(row, col):\n            if row == m-1 and col == n-1:\n                if path or obstacleGrid[row][col] == 0:\n                    return 1\n                else:\n                    return 0\n\n            down_reachable, right_reachable = 0, 0\n            if row + 1 < m and obstacleGrid[row+1][col] == 0:\n                down_reachable = dfs(row+1, col)\n\n            if col + 1 < n and obstacleGrid[row][col+1] == 0:\n                right_reachable = dfs(row, col+1)\n\n            return down_reachable + right_reachable\n\n        result = dfs(0, 0)\n\n        return result\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var o=t(96540);const i={},s=o.createContext(i);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);