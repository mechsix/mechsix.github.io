"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[40272],{22722:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"leetcode/501-1000/minimum_number_of_refueling_stops","title":"871. Minimum Number of Refueling Stops","description":"https://leetcode.com/problems/minimum-number-of-refueling-stops/","source":"@site/docs/leetcode/501-1000/871_minimum_number_of_refueling_stops.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/minimum_number_of_refueling_stops","permalink":"/docs/leetcode/501-1000/minimum_number_of_refueling_stops","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"DP","permalink":"/docs/tags/dp"}],"version":"current","sidebarPosition":871,"frontMatter":{"title":"871. Minimum Number of Refueling Stops","sidebar_label":"871. Minimum Number of Refueling Stops","tags":["Leetcode Medium","DP"]},"sidebar":"docSidebar","previous":{"title":"869. Reordered Power of 2","permalink":"/docs/leetcode/501-1000/recordered_power_of_2"},"next":{"title":"872. Leaf-Similar Trees","permalink":"/docs/leetcode/501-1000/leaf_similar_trees"}}');var i=n(74848),s=n(28453);const r={title:"871. Minimum Number of Refueling Stops",sidebar_label:"871. Minimum Number of Refueling Stops",tags:["Leetcode Medium","DP"]},l=void 0,u={},m=[{value:"Python",id:"python",level:2},{value:"Bottom Up DP",id:"bottom-up-dp",level:3}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/minimum-number-of-refueling-stops/",children:"https://leetcode.com/problems/minimum-number-of-refueling-stops/"})}),"\n",(0,i.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(t.h3,{id:"bottom-up-dp",children:"Bottom Up DP"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def minRefuelStops(self, target: int, startFuel: int, stations: List[List[int]]) -> int:\n        dp = [0] * (len(stations)+1)\n        dp[0] = startFuel\n\n        dp = [startFuel] + [0] * len(stations)\n        for i, (location, capacity) in enumerate(stations):\n            for t in range(i, -1, -1):\n                if dp[t] >= location:\n                    dp[t+1] = max(dp[t+1], dp[t] + capacity)\n\n        for i, dest in enumerate(dp):\n            if dest >= target:\n                return i\n\n        return -1\n"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var o=n(96540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);