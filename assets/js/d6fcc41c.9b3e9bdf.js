"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[61559],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=i(r),m=a,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(h,s(s({ref:t},p),{},{components:r})):n.createElement(h,s({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,s[1]=l;for(var i=2;i<o;i++)s[i]=r[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2595:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var n=r(87462),a=(r(67294),r(3905));const o={title:"32. Longest Valid Parentheses",sidebar_label:"32. Longest Valid Parentheses",tags:["Leetcode Hard","Stack"]},s=void 0,l={unversionedId:"leetcode/1-500/longest_valid_parentheses",id:"leetcode/1-500/longest_valid_parentheses",title:"32. Longest Valid Parentheses",description:"https://leetcode.com/problems/longest-valid-parentheses/",source:"@site/docs/leetcode/1-500/32_longest_valid_parentheses.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/longest_valid_parentheses",permalink:"/docs/leetcode/1-500/longest_valid_parentheses",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/32_longest_valid_parentheses.md",tags:[{label:"Leetcode Hard",permalink:"/docs/tags/leetcode-hard"},{label:"Stack",permalink:"/docs/tags/stack"}],version:"current",sidebarPosition:32,frontMatter:{title:"32. Longest Valid Parentheses",sidebar_label:"32. Longest Valid Parentheses",tags:["Leetcode Hard","Stack"]},sidebar:"docSidebar",previous:{title:"31. Next Permutation",permalink:"/docs/leetcode/1-500/next_permutation"},next:{title:"33. Search in Rotated Sorted Array",permalink:"/docs/leetcode/1-500/search_in_rotated_sorted_array"}},c={},i=[{value:"Python",id:"python",level:2},{value:"Stack",id:"stack",level:3}],p={toc:i},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/longest-valid-parentheses/"},"https://leetcode.com/problems/longest-valid-parentheses/")),(0,a.kt)("h2",{id:"python"},"Python"),(0,a.kt)("h3",{id:"stack"},"Stack"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Time: O(N)"),(0,a.kt)("li",{parentName:"ul"},"Space: O(N)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def longestValidParentheses(self, s: str) -> int:\n        max_length = 0\n\n        stack = []\n        stack.append((-1, ')'))\n\n        for i, char in enumerate(s):\n            if char == ')' and stack[-1][1] == '(':\n                stack.pop()\n                max_length = max(max_length, i-stack[-1][0])\n            else:\n                stack.append((i, char))\n\n        return max_length\n")))}u.isMDXComponent=!0}}]);