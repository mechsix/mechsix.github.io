"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[5374],{65036:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"leetcode/501-1000/course_schedule_iii","title":"630. Course Schedule III","description":"https://leetcode.com/problems/course-schedule-iii/","source":"@site/docs/leetcode/501-1000/630_course_schedule_iii.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/course_schedule_iii","permalink":"/docs/leetcode/501-1000/course_schedule_iii","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Hard","permalink":"/docs/tags/leetcode-hard"},{"inline":true,"label":"DP","permalink":"/docs/tags/dp"},{"inline":true,"label":"Heap","permalink":"/docs/tags/heap"}],"version":"current","sidebarPosition":630,"frontMatter":{"title":"630. Course Schedule III","sidebar_label":"630. Course Schedule III","tags":["Leetcode Hard","DP","Heap"]},"sidebar":"docSidebar","previous":{"title":"623. Add One Row to Tree","permalink":"/docs/leetcode/501-1000/add_one_row_to_tree"},"next":{"title":"637. Average of Levels in Binary Tree","permalink":"/docs/leetcode/501-1000/average_of_levels_in_binary_tree"}}');var i=t(74848),r=t(28453);const s={title:"630. Course Schedule III",sidebar_label:"630. Course Schedule III",tags:["Leetcode Hard","DP","Heap"]},c=void 0,d={},l=[{value:"Python",id:"python",level:2},{value:"Top-Down DP (Timelimit Exceed)",id:"top-down-dp-timelimit-exceed",level:3},{value:"Bottom-Up DP with Max Heap",id:"bottom-up-dp-with-max-heap",level:3}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/course-schedule-iii/",children:"https://leetcode.com/problems/course-schedule-iii/"})}),"\n",(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h3,{id:"top-down-dp-timelimit-exceed",children:"Top-Down DP (Timelimit Exceed)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Time: O(N*D)  # N = len(courses); D = deepth"}),"\n",(0,i.jsx)(n.li,{children:"Space: O(N*D)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from functools import cache\n\n\nclass Solution:\n    def scheduleCourse(self, courses: List[List[int]]) -> int:\n        courses.sort(key=lambda course: course[1])\n\n        @cache\n        def dp(i: int, current: int):\n            if i == len(courses):\n                return 0\n            duration, end = courses[i]\n\n            pick_cost = 0\n            if (now := current + duration) <= end:\n                pick_cost = 1 + dp(i+1, now)\n\n            ignore_cost = dp(i+1, current)\n\n            return max(pick_cost, ignore_cost)\n\n        return dp(0, 0)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"bottom-up-dp-with-max-heap",children:"Bottom-Up DP with Max Heap"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import heapq\n\n\nclass Solution:\n    def scheduleCourse(self, courses: List[List[int]]) -> int:\n        courses.sort(key=lambda course: (course[1], course[0]))\n\n        dp = []\n        current = 0\n        for duration, end in courses:\n            current += duration\n            heapq.heappush(dp, -duration)  # Max Heap\n\n            if current > end:\n                current += heapq.heappop(dp)\n\n        return len(dp)\n"})})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var o=t(96540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);