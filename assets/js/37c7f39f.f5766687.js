"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[51735],{44576:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"leetcode/1001-1500/break_palindrome","title":"1328. Break a Palindrome","description":"https://leetcode.com/problems/break-a-palindrome/","source":"@site/docs/leetcode/1001-1500/1328_break_palindrome.md","sourceDirName":"leetcode/1001-1500","slug":"/leetcode/1001-1500/break_palindrome","permalink":"/docs/leetcode/1001-1500/break_palindrome","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Greedy","permalink":"/docs/tags/greedy"}],"version":"current","sidebarPosition":1328,"frontMatter":{"title":"1328. Break a Palindrome","sidebar_label":"1328. Break a Palindrome","tags":["Leetcode Medium","Greedy"]},"sidebar":"docSidebar","previous":{"title":"1318. Minimum Flips to Make a OR b Equal to c","permalink":"/docs/leetcode/1001-1500/min_flips_to_make_a_or_b_equal_c"},"next":{"title":"1329. Sort the Matrix Diagonally","permalink":"/docs/leetcode/1001-1500/sort_matrix_diagonally"}}');var a=r(74848),o=r(28453);const i={title:"1328. Break a Palindrome",sidebar_label:"1328. Break a Palindrome",tags:["Leetcode Medium","Greedy"]},l=void 0,d={},s=[{value:"Python",id:"python",level:2},{value:"Greedy",id:"greedy",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/break-a-palindrome/",children:"https://leetcode.com/problems/break-a-palindrome/"})}),"\n",(0,a.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,a.jsx)(n.h3,{id:"greedy",children:"Greedy"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def breakPalindrome(self, palindrome: str) -> str:\n        # Case: Not possible to become non-palindromic\n        if len(palindrome) == 1:\n            return \"\"\n\n        # Case: Replace the first not 'a' character\n        for i in range(len(palindrome)>>1):\n            if palindrome[i] != 'a':\n                return palindrome[:i] + 'a' + palindrome[i+1:]\n\n        # Case: all characters are 'a'\n        return palindrome[:-1] + 'b'\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var t=r(96540);const a={},o=t.createContext(a);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);