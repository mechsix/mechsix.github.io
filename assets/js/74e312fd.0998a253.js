"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[9213],{26517:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var o=n(74848),c=n(28453);const s={title:"1167. Minimum Cost to Connect Sticks",sidebar_label:"1167. Minimum Cost to Connect Sticks",tags:["Leetcode Medium","Heap"]},i=void 0,r={id:"leetcode/1001-1500/min_cost_to_connect_sticks",title:"1167. Minimum Cost to Connect Sticks",description:"https://leetcode.com/problems/minimum-cost-to-connect-sticks/",source:"@site/docs/leetcode/1001-1500/1167_min_cost_to_connect_sticks.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/min_cost_to_connect_sticks",permalink:"/docs/leetcode/1001-1500/min_cost_to_connect_sticks",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Heap",permalink:"/docs/tags/heap"}],version:"current",sidebarPosition:1167,frontMatter:{title:"1167. Minimum Cost to Connect Sticks",sidebar_label:"1167. Minimum Cost to Connect Sticks",tags:["Leetcode Medium","Heap"]},sidebar:"docSidebar",previous:{title:"1161. Maximum Level Sum of a Binary Tree",permalink:"/docs/leetcode/1001-1500/max_level_sum_of_binary_tree"},next:{title:"1192. Critical Connections in a Network",permalink:"/docs/leetcode/1001-1500/critical_connections_in_network"}},a={},l=[{value:"Python",id:"python",level:2}];function m(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.com/problems/minimum-cost-to-connect-sticks/",children:"https://leetcode.com/problems/minimum-cost-to-connect-sticks/"})}),"\n",(0,o.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"import heapq\n\n\nclass Solution:\n    def connectSticks(self, sticks: List[int]) -> int:\n        heapq.heapify(sticks)\n\n        total_cost = 0\n        while len(sticks) > 1:\n            cost = heapq.heappop(sticks) + heapq.heappop(sticks)\n            total_cost += cost\n            heapq.heappush(sticks, cost)\n\n        return total_cost\n"})})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var o=n(96540);const c={},s=o.createContext(c);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);