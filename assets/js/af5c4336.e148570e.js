"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[26163],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),c=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=c(r),f=n,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||l;return r?o.createElement(m,i(i({ref:t},u),{},{components:r})):o.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:n,i[1]=a;for(var c=2;c<l;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},56826:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return u}});var o=r(87462),n=r(63366),l=(r(67294),r(3905)),i=["components"],a={title:"2136. Earliest Possible Day of Full Bloom",sidebar_label:"2136. Earliest Possible Day of Full Bloom",tags:["Leetcode Hard","Greedy"]},s=void 0,c={unversionedId:"leetcode/2000/earliest_possible_day_of_full_bloom",id:"leetcode/2000/earliest_possible_day_of_full_bloom",title:"2136. Earliest Possible Day of Full Bloom",description:"https://leetcode.com/problems/earliest-possible-day-of-full-bloom/",source:"@site/docs/leetcode/2000/2136_earliest_possible_day_of_full_bloom.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/earliest_possible_day_of_full_bloom",permalink:"/docs/leetcode/2000/earliest_possible_day_of_full_bloom",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/2000/2136_earliest_possible_day_of_full_bloom.md",tags:[{label:"Leetcode Hard",permalink:"/docs/tags/leetcode-hard"},{label:"Greedy",permalink:"/docs/tags/greedy"}],version:"current",sidebarPosition:2136,frontMatter:{title:"2136. Earliest Possible Day of Full Bloom",sidebar_label:"2136. Earliest Possible Day of Full Bloom",tags:["Leetcode Hard","Greedy"]},sidebar:"docSidebar",previous:{title:"2095. Delete the Middle Node of a Linked List",permalink:"/docs/leetcode/2000/delete_the_middle_of_linked_list"},next:{title:"6204. Largest Positive Integer That Exists With Its Negative",permalink:"/docs/leetcode/2000/largest_positive_int_that_exists_with_its_negative"}},u=[{value:"Python",id:"python",children:[{value:"Greedy",id:"greedy",children:[],level:3}],level:2}],p={toc:u};function d(e){var t=e.components,r=(0,n.Z)(e,i);return(0,l.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/earliest-possible-day-of-full-bloom/"},"https://leetcode.com/problems/earliest-possible-day-of-full-bloom/")),(0,l.kt)("h2",{id:"python"},"Python"),(0,l.kt)("h3",{id:"greedy"},"Greedy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def earliestFullBloom(self, plantTime: List[int], growTime: List[int]) -> int:\n        mapper = [item for item in zip(growTime, plantTime)]\n        mapper.sort(key=lambda item: (-item[0], item[1]))\n\n        current, ans = 0, 0\n        for grow, plant in mapper:\n            current += plant\n            ans = max(ans, current+grow)\n        return ans\n")))}d.isMDXComponent=!0}}]);