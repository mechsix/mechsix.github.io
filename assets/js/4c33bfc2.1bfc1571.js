"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[97787],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(r),b=o,f=d["".concat(l,".").concat(b)]||d[b]||p[b]||i;return r?n.createElement(f,c(c({ref:t},u),{},{components:r})):n.createElement(f,c({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=b;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[d]="string"==typeof e?e:o,c[1]=a;for(var s=2;s<i;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},17655:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return a},toc:function(){return s}});var n=r(83117),o=(r(67294),r(3905));const i={title:"337. House Robber III",sidebar_label:"337. House Robber III",tags:["Leetcode Medium","DP","Tree"]},c=void 0,a={unversionedId:"leetcode/1-500/house_robber_iii",id:"leetcode/1-500/house_robber_iii",title:"337. House Robber III",description:"https://leetcode.com/problems/house-robber-iii/",source:"@site/docs/leetcode/1-500/337_house_robber_iii.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/house_robber_iii",permalink:"/docs/leetcode/1-500/house_robber_iii",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/337_house_robber_iii.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"DP",permalink:"/docs/tags/dp"},{label:"Tree",permalink:"/docs/tags/tree"}],version:"current",sidebarPosition:337,frontMatter:{title:"337. House Robber III",sidebar_label:"337. House Robber III",tags:["Leetcode Medium","DP","Tree"]},sidebar:"docSidebar",previous:{title:"336. Palindrome Pairs",permalink:"/docs/leetcode/1-500/palindrome_pairs"},next:{title:"338. Counting Bits",permalink:"/docs/leetcode/1-500/counting_bits"}},l={},s=[{value:"Python",id:"python",level:2},{value:"DFS (Time Limit Exceed)",id:"dfs-time-limit-exceed",level:3}],u={toc:s};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/house-robber-iii/"},"https://leetcode.com/problems/house-robber-iii/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"dfs-time-limit-exceed"},"DFS (Time Limit Exceed)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def rob(self, root: Optional[TreeNode]) -> int:\n\n        def dfs(node, can_pick: bool):\n            if not node:\n                return 0\n\n            skip = dfs(node.left, True) + dfs(node.right, True)\n            if not can_pick:\n                return skip\n\n            pick = node.val + dfs(node.left, False) + dfs(node.right, False)\n\n            return max(pick, skip)\n\n        return max(dfs(root, False), dfs(root, True))\n")))}d.isMDXComponent=!0}}]);