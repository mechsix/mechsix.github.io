"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[71678],{62007:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"leetcode/1-500/insertion_sort_list","title":"147. Insertion Sort List","description":"https://leetcode.com/problems/insertion-sort-list","source":"@site/docs/leetcode/1-500/147_insertion_sort_list.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/insertion_sort_list","permalink":"/docs/leetcode/1-500/insertion_sort_list","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Linked List","permalink":"/docs/tags/linked-list"},{"inline":true,"label":"Leetcode Optimable","permalink":"/docs/tags/leetcode-optimable"}],"version":"current","sidebarPosition":147,"frontMatter":{"title":"147. Insertion Sort List","sidebar_label":"147. Insertion Sort List","tags":["Leetcode Medium","Linked List","Leetcode Optimable"]},"sidebar":"docSidebar","previous":{"title":"146. LRU Cache","permalink":"/docs/leetcode/1-500/lru_cache"},"next":{"title":"148. Sort List","permalink":"/docs/leetcode/1-500/sort_list"}}');var o=n(74848),s=n(28453);const r={title:"147. Insertion Sort List",sidebar_label:"147. Insertion Sort List",tags:["Leetcode Medium","Linked List","Leetcode Optimable"]},l=void 0,c={},d=[{value:"Python",id:"python",level:2}];function a(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.com/problems/insertion-sort-list",children:"https://leetcode.com/problems/insertion-sort-list"})}),"\n",(0,o.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def insertionSortList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        new_head = ListNode(val=-5001, next=None)\n        origin = head\n\n        while origin:\n            cur = new_head\n            while cur.next and cur.next.val < origin.val:\n                cur = cur.next\n\n            cur.next = ListNode(val=origin.val, next=cur.next if cur.next else None)\n            origin = origin.next\n\n        return new_head.next\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var i=n(96540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);