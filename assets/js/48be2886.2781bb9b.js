"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[68148],{72097:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"leetcode/501-1000/design_hashmap","title":"706. Design HashMap","description":"https://leetcode.com/problems/design-hashmap/","source":"@site/docs/leetcode/501-1000/706_design_hashmap.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/design_hashmap","permalink":"/docs/leetcode/501-1000/design_hashmap","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"}],"version":"current","sidebarPosition":706,"frontMatter":{"title":"706. Design HashMap","sidebar_label":"706. Design HashMap","tags":["Leetcode Easy"]},"sidebar":"docSidebar","previous":{"title":"706. Design HashMap","permalink":"/docs/leetcode/501-1000/design_hashset"},"next":{"title":"707. Design Linked List","permalink":"/docs/leetcode/501-1000/design_linked_list"}}');var i=s(74848),a=s(28453);const o={title:"706. Design HashMap",sidebar_label:"706. Design HashMap",tags:["Leetcode Easy"]},r=void 0,l={},c=[{value:"Python",id:"python",level:2},{value:"Remainder Mapping into Array",id:"remainder-mapping-into-array",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/design-hashmap/",children:"https://leetcode.com/problems/design-hashmap/"})}),"\n",(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h3,{id:"remainder-mapping-into-array",children:"Remainder Mapping into Array"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Time: Put,Get,Remove are all O(1)"}),"\n",(0,i.jsx)(n.li,{children:"Space: O(10^6)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class MyHashMap:\n    def __init__(self):\n        self.memory = [None]*(10**6)\n\n    def put(self, key: int, value: int) -> None:\n        self.memory[key % (10**6)] = value\n\n    def get(self, key: int) -> int:\n        result = self.memory[key % (10**6)]\n        return result if result is not None else -1\n\n    def remove(self, key: int) -> None:\n        self.memory[key % (10**6)] = None\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(96540);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);