"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[41421],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=c(n),p=a,f=d["".concat(l,".").concat(p)]||d[p]||u[p]||o;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},36270:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"1249. Minimum Remove to Make Valid Parentheses",sidebar_label:"1249. Minimum Remove to Make Valid Parentheses",tags:["Leetcode Medium","Stack"]},i=void 0,s={unversionedId:"leetcode/1001-1500/min_remove_to_make_valid_parentheses",id:"leetcode/1001-1500/min_remove_to_make_valid_parentheses",title:"1249. Minimum Remove to Make Valid Parentheses",description:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/",source:"@site/docs/leetcode/1001-1500/1249_min_remove_to_make_valid_parentheses.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/min_remove_to_make_valid_parentheses",permalink:"/docs/leetcode/1001-1500/min_remove_to_make_valid_parentheses",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1001-1500/1249_min_remove_to_make_valid_parentheses.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Stack",permalink:"/docs/tags/stack"}],version:"current",sidebarPosition:1249,frontMatter:{title:"1249. Minimum Remove to Make Valid Parentheses",sidebar_label:"1249. Minimum Remove to Make Valid Parentheses",tags:["Leetcode Medium","Stack"]},sidebar:"docSidebar",previous:{title:"1239. Maximum Length of a Concatenated String with Unique Characters",permalink:"/docs/leetcode/1001-1500/max_length_of_concatenated_string_with_unique_chars"},next:{title:"1254. Number of Closed Islands",permalink:"/docs/leetcode/1001-1500/number_of_closed_islands"}},l={},c=[{value:"Python",id:"python",level:2}],m={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/"},"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/")),(0,a.kt)("h2",{id:"python"},"Python"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Time: O(2N)"),(0,a.kt)("li",{parentName:"ul"},"Space: O(k)  # k stands for removal item's number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def minRemoveToMakeValid(self, s: str) -> str:\n        stack = []\n        chars = list(s)\n\n        removal = set()\n\n        for index, char in enumerate(chars):\n            if char == '(':\n                stack.append(index)\n            elif char == ')':\n                if not stack:\n                    removal.add(index)\n                else:\n                    stack.pop()\n\n        removal ^= set(stack)\n        result = []\n        for index, char in enumerate(chars):\n            if index in removal:\n                continue\n            result.append(char)\n\n        return ''.join(result)\n")))}u.isMDXComponent=!0}}]);