"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[80929],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),l=m(n),f=o,d=l["".concat(s,".").concat(f)]||l[f]||p[f]||a;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[l]="string"==typeof e?e:o,i[1]=u;for(var m=2;m<a;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},20108:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>m});var r=n(87462),o=(n(67294),n(3905));const a={title:"1679. Max Number of K-Sum Pairs",sidebar_label:"1679. Max Number of K-Sum Pairs",tags:["Leetcode Medium","Prefix Sum"]},i=void 0,u={unversionedId:"leetcode/1501-2000/max_num_of_k_sum_pairs",id:"leetcode/1501-2000/max_num_of_k_sum_pairs",title:"1679. Max Number of K-Sum Pairs",description:"https://leetcode.com/problems/max-number-of-k-sum-pairs/",source:"@site/docs/leetcode/1501-2000/1679_max_num_of_k_sum_pairs.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/max_num_of_k_sum_pairs",permalink:"/docs/leetcode/1501-2000/max_num_of_k_sum_pairs",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1501-2000/1679_max_num_of_k_sum_pairs.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Prefix Sum",permalink:"/docs/tags/prefix-sum"}],version:"current",sidebarPosition:1679,frontMatter:{title:"1679. Max Number of K-Sum Pairs",sidebar_label:"1679. Max Number of K-Sum Pairs",tags:["Leetcode Medium","Prefix Sum"]},sidebar:"docSidebar",previous:{title:"1672. Richest Customer Wealth",permalink:"/docs/leetcode/1501-2000/richest_customer_wealth"},next:{title:"1680. Concatenation of Consecutive Binary Numbers",permalink:"/docs/leetcode/1501-2000/concatenation_of_consecutive_bin_nums"}},s={},m=[{value:"Python",id:"python",level:2},{value:"Prefix Sum",id:"prefix-sum",level:3}],c={toc:m},l="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(l,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/max-number-of-k-sum-pairs/"},"https://leetcode.com/problems/max-number-of-k-sum-pairs/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"prefix-sum"},"Prefix Sum"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from collections import defaultdict\n\n\nclass Solution:\n    def maxOperations(self, nums: List[int], k: int) -> int:\n        if len(nums) < 2:\n            return 0\n\n        mapper = defaultdict(int)\n        for i, num in enumerate(nums):\n            mapper[num] += 1\n\n        used = set()\n        ans = 0\n        for num, count in mapper.items():\n            if num in used:\n                continue\n\n            remains = k - num\n            if remains == num:\n                ans += count // 2\n                used.add(num)\n            elif remains in mapper:\n                ans += min(count, mapper[remains])\n                used.add(remains)\n\n        return ans\n")))}p.isMDXComponent=!0}}]);