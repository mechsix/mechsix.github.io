"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[87432],{64113:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(74848),r=n(28453);const a={title:"835. Image Overlap",sidebar_label:"835. Image Overlap",tags:["Leetcode Medium","Matrix"]},i=void 0,l={id:"leetcode/501-1000/image_overlap",title:"835. Image Overlap",description:"https://leetcode.com/problems/image-overlap/",source:"@site/docs/leetcode/501-1000/835_image_overlap.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/image_overlap",permalink:"/docs/leetcode/501-1000/image_overlap",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Matrix",permalink:"/docs/tags/matrix"}],version:"current",sidebarPosition:835,frontMatter:{title:"835. Image Overlap",sidebar_label:"835. Image Overlap",tags:["Leetcode Medium","Matrix"]},sidebar:"docSidebar",previous:{title:"823. Binary Trees With Factors",permalink:"/docs/leetcode/501-1000/binary_tree_with_factors"},next:{title:"841. Keys and Rooms",permalink:"/docs/leetcode/501-1000/keys_and_rooms"}},s={},c=[{value:"Python",id:"python",level:2}];function m(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.com/problems/image-overlap/",children:"https://leetcode.com/problems/image-overlap/"})}),"\n",(0,o.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def largestOverlap(self, img1: List[List[int]], img2: List[List[int]]) -> int:\n        n = len(img1)\n\n        def count_overlay(start_row, start_col):\n            up_left, up_right, down_left, down_right = 0, 0, 0, 0\n\n            for row_ref, row_move in enumerate(range(start_row, n)):\n                for col_ref, col_move in enumerate(range(start_col, n)):\n                    if img1[row_move][col_move] and img2[row_ref][col_ref]:\n                        up_left += 1\n\n                    if img1[row_move][col_ref] and img2[row_ref][col_move]:\n                        up_right += 1\n\n                    if img1[row_ref][col_ref] and img2[row_move][col_move]:\n                        down_left += 1\n\n                    if img1[row_ref][col_move] and img2[row_move][col_ref]:\n                        down_right += 1\n\n            return max(up_left, up_right, down_left, down_right)\n\n        ans = 0\n        for r in range(n):\n            for c in range(n):\n                ans = max(ans, count_overlay(r, c))\n        return ans\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var o=n(96540);const r={},a=o.createContext(r);function i(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);