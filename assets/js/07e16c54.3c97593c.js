"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[86140],{35322:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=t(74848),o=t(28453);const s={title:"567. Permutation in String",sidebar_label:"567. Permutation in String",tags:["Leetcode Medium","Sliding Window","CTCI"]},r=void 0,l={id:"leetcode/501-1000/permutation_in_string",title:"567. Permutation in String",description:"https://leetcode.com/problems/permutation-in-string/",source:"@site/docs/leetcode/501-1000/567_permutation_in_string.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/permutation_in_string",permalink:"/docs/leetcode/501-1000/permutation_in_string",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Sliding Window",permalink:"/docs/tags/sliding-window"},{label:"CTCI",permalink:"/docs/tags/ctci"}],version:"current",sidebarPosition:567,frontMatter:{title:"567. Permutation in String",sidebar_label:"567. Permutation in String",tags:["Leetcode Medium","Sliding Window","CTCI"]},sidebar:"docSidebar",previous:{title:"566. Reshape the Matrix",permalink:"/docs/leetcode/501-1000/reshape_matrix"},next:{title:"576. Out of Boundary Paths",permalink:"/docs/leetcode/501-1000/out_of_boundary_paths"}},a={},c=[{value:"Python",id:"python",level:2},{value:"Slide Window",id:"slide-window",level:3},{value:"Rust",id:"rust",level:2},{value:"Slide Window",id:"slide-window-1",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/permutation-in-string/",children:"https://leetcode.com/problems/permutation-in-string/"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CTCI 1.2 Check Permutation"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h3,{id:"slide-window",children:"Slide Window"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from collections import Counter\n\n\nclass Solution:\n    def checkInclusion(self, s1: str, s2: str) -> bool:\n        length_diff = len(s2) - len(s1)\n\n        if length_diff < 0:\n            return False\n\n        s1_count = Counter(s1)\n\n        for i in range(0, length_diff+1):\n            for char, count in Counter(s2[i:i+len(s1)]).items():\n                if s1_count.get(char) != count:\n                    break\n            else:\n                # If inner loop not be broken, there is the answer\n                return True\n\n        return False\n"})}),"\n",(0,i.jsx)(n.h2,{id:"rust",children:"Rust"}),"\n",(0,i.jsx)(n.h3,{id:"slide-window-1",children:"Slide Window"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:"use std::collections::HashMap;\n\n\nimpl Solution {\n    fn gen_map(s: &String) -> String {\n        let mut mapper = [0; 26];\n        for i in s.as_bytes().iter() {\n            mapper[(i-b'a') as usize] += 1;\n        }\n        mapper.iter().map(|&count| count.to_string()).collect()\n    }\n\n    pub fn check_inclusion(s1: String, s2: String) -> bool {\n        if s1.len() > s2.len() {\n            return false;\n        }\n\n        let mapper = Solution::gen_map(&s1);\n        let len_diff = s2.len() - s1.len();\n\n        for i in 0..len_diff+1 {\n            let sub_s2 = &s2[i..i+s1.len()].to_string();\n            let sub_s2_map = Solution::gen_map(&sub_s2);\n\n            if sub_s2_map == mapper {\n                return true;\n            }\n        }\n\n        false\n    }\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);