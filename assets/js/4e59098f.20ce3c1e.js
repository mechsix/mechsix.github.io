"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[80216],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),u=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return o.createElement(s.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(t),d=r,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return t?o.createElement(f,a(a({ref:n},l),{},{components:t})):o.createElement(f,a({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[m]="string"==typeof e?e:r,a[1]=c;for(var u=2;u<i;u++)a[u]=t[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},41683:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var o=t(87462),r=(t(67294),t(3905));const i={title:"1680. Concatenation of Consecutive Binary Numbers",sidebar_label:"1680. Concatenation of Consecutive Binary Numbers",tags:["Leetcode Medium","Bit Manipulation"]},a=void 0,c={unversionedId:"leetcode/1501-2000/concatenation_of_consecutive_bin_nums",id:"leetcode/1501-2000/concatenation_of_consecutive_bin_nums",title:"1680. Concatenation of Consecutive Binary Numbers",description:"https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers/",source:"@site/docs/leetcode/1501-2000/1680_concatenation_of_consecutive_bin_nums.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/concatenation_of_consecutive_bin_nums",permalink:"/docs/leetcode/1501-2000/concatenation_of_consecutive_bin_nums",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1501-2000/1680_concatenation_of_consecutive_bin_nums.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Bit Manipulation",permalink:"/docs/tags/bit-manipulation"}],version:"current",sidebarPosition:1680,frontMatter:{title:"1680. Concatenation of Consecutive Binary Numbers",sidebar_label:"1680. Concatenation of Consecutive Binary Numbers",tags:["Leetcode Medium","Bit Manipulation"]},sidebar:"docSidebar",previous:{title:"1679. Max Number of K-Sum Pairs",permalink:"/docs/leetcode/1501-2000/max_num_of_k_sum_pairs"},next:{title:"1689. Partitioning Into Minimum Number Of Deci-Binary Numbers",permalink:"/docs/leetcode/1501-2000/partitioning_into_min_num_of_deci_binary_nums"}},s={},u=[{value:"Python",id:"python",level:2}],l={toc:u},m="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers/"},"https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers/")),(0,r.kt)("h2",{id:"python"},"Python"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u76f4\u89ba\u7684\u5beb\u6cd5\uff0c\u4f46\u5c31run\u7684\u904e\u4e86...")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Time: O(N) # \u8ff4\u5708\u8981\u5f9e1\u8dd1\u5230N")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Space: O(1)"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def concatenatedBinary(self, n: int) -> int:\n        mod = 10**9+7\n        ans = 1\n        for i in range(2, n+1):\n            bins = str(bin(i))[2:]\n            ans <<= len(bins)\n            ans += i\n            ans %= mod\n\n        return ans\n")))}p.isMDXComponent=!0}}]);