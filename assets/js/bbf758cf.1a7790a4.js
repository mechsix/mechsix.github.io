"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[5772],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return b}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(n),b=a,f=d["".concat(u,".").concat(b)]||d[b]||p[b]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},10575:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return l}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],c={title:"Javascript Data Operations",sidebar_label:"JS Data Operations",tags:["Frontend"]},u=void 0,s={unversionedId:"cheatsheet/js-operation",id:"cheatsheet/js-operation",title:"Javascript Data Operations",description:"Object Array to an Object lead by key",source:"@site/docs/cheatsheet/js-operation.md",sourceDirName:"cheatsheet",slug:"/cheatsheet/js-operation",permalink:"/docs/cheatsheet/js-operation",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/cheatsheet/js-operation.md",tags:[{label:"Frontend",permalink:"/docs/tags/frontend"}],version:"current",frontMatter:{title:"Javascript Data Operations",sidebar_label:"JS Data Operations",tags:["Frontend"]},sidebar:"docSidebar",previous:{title:"STS",permalink:"/docs/aws/sts"},next:{title:"CSS Naming Convention",permalink:"/docs/dev_practice/css_naming_convention"}},l=[{value:"Object Array to an Object lead by key",id:"object-array-to-an-object-lead-by-key",children:[],level:2}],p={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"object-array-to-an-object-lead-by-key"},"Object Array to an Object lead by key"),(0,o.kt)("p",null,"Transfer Object Array into an Object lead by id from the items' value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// Input\nconst input = [\n    {\n        "key": "uuid-1",\n        "value": "value1"\n    },\n    {\n        "key": "uuid-2",\n        "value": "value2"\n    },\n    {\n        "key": "uuid-3",\n        "value": "value3"\n    }\n]\n\nconst output = input.reduce((obj, item) => ({\n    ...obj,\n    [item.key]: item.value\n}), {})\n\n// Output\n// {\n//     "uuid-1": "value1",\n//     "uuid-2": "value2",\n//     "uuid-3": "value3"\n// }\n')))}d.isMDXComponent=!0}}]);