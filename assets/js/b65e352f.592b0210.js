"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[24265],{89999:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(74848),o=r(28453);const a={title:"1662. Check If Two String Arrays are Equivalent",sidebar_label:"1662. Check If Two String Arrays are Equivalent",tags:["Leetcode Easy"]},i=void 0,s={id:"leetcode/1501-2000/check_if_two_string_arrays_are_equivalent",title:"1662. Check If Two String Arrays are Equivalent",description:"Python",source:"@site/docs/leetcode/1501-2000/1662_check_if_two_string_arrays_are_equivalent.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/check_if_two_string_arrays_are_equivalent",permalink:"/docs/leetcode/1501-2000/check_if_two_string_arrays_are_equivalent",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"}],version:"current",sidebarPosition:1662,frontMatter:{title:"1662. Check If Two String Arrays are Equivalent",sidebar_label:"1662. Check If Two String Arrays are Equivalent",tags:["Leetcode Easy"]},sidebar:"docSidebar",previous:{title:"1658. Minimum Operations to Reduce X to Zero",permalink:"/docs/leetcode/1501-2000/min_operations_to_reduce_x_to_zero"},next:{title:"1667. Fix Names in a Table",permalink:"/docs/leetcode/1501-2000/fix_names_in_a_table"}},c={},l=[{value:"Python",id:"python",level:2}];function d(e){const t={code:"code",h2:"h2",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def arrayStringsAreEqual(self, word1: List[str], word2: List[str]) -> bool:\n        return ''.join(word1) == ''.join(word2)\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var n=r(96540);const o={},a=n.createContext(o);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);