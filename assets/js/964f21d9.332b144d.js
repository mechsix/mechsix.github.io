"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[89821],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return d}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function u(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?u(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},u=Object.keys(e);for(n=0;n<u.length;n++)t=u[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)t=u[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,u=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),p=s(t),d=o,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||u;return t?n.createElement(f,i(i({ref:r},l),{},{components:t})):n.createElement(f,i({ref:r},l))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var u=t.length,i=new Array(u);i[0]=p;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var s=2;s<u;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},24383:function(e,r,t){t.r(r),t.d(r,{contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l}});var n=t(87462),o=t(63366),u=(t(67294),t(3905)),i=["components"],a={title:"523. Continuous Subarray Sum",sidebar_label:"523. Continuous Subarray Sum",tags:["Leetcode Medium","Prefix Sum"]},c=void 0,s={unversionedId:"leetcode/501-1000/continuous_subarray_sum",id:"leetcode/501-1000/continuous_subarray_sum",title:"523. Continuous Subarray Sum",description:"https://leetcode.com/problems/continuous-subarray-sum/",source:"@site/docs/leetcode/501-1000/523_continuous_subarray_sum.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/continuous_subarray_sum",permalink:"/docs/leetcode/501-1000/continuous_subarray_sum",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/523_continuous_subarray_sum.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Prefix Sum",permalink:"/docs/tags/prefix-sum"}],version:"current",sidebarPosition:523,frontMatter:{title:"523. Continuous Subarray Sum",sidebar_label:"523. Continuous Subarray Sum",tags:["Leetcode Medium","Prefix Sum"]},sidebar:"docSidebar",previous:{title:"520. Detect Capital",permalink:"/docs/leetcode/501-1000/detect_capital"},next:{title:"525. Contiguous Array",permalink:"/docs/leetcode/501-1000/contiguous_array"}},l=[{value:"Python",id:"python",children:[],level:2}],m={toc:l};function p(e){var r=e.components,t=(0,o.Z)(e,i);return(0,u.kt)("wrapper",(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,u.kt)("p",null,(0,u.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/continuous-subarray-sum/"},"https://leetcode.com/problems/continuous-subarray-sum/")),(0,u.kt)("h2",{id:"python"},"Python"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def checkSubarraySum(self, nums: List[int], k: int) -> bool:\n        if k <= 0:\n            return\n\n        # key: sum mod k, value: index\n        prefix_map = {0: -1}\n        remainder = 0\n\n        for i, num in enumerate(nums):\n            remainder += num\n            remainder %= k\n\n            if remainder in prefix_map:\n                if i - prefix_map.get(remainder) > 1:\n                    return True\n            else:\n                prefix_map[remainder] = i\n\n        return False\n")))}p.isMDXComponent=!0}}]);