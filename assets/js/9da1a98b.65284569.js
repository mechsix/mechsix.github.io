"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[94006],{83598:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"leetcode/501-1000/validate_stack_sequences","title":"946. Validate Stack Sequences","description":"https://leetcode.com/problems/validate-stack-sequences/","source":"@site/docs/leetcode/501-1000/946_validate_stack_sequences.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/validate_stack_sequences","permalink":"/docs/leetcode/501-1000/validate_stack_sequences","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Stack","permalink":"/docs/tags/stack"},{"inline":true,"label":"Rust","permalink":"/docs/tags/rust"},{"inline":true,"label":"Go","permalink":"/docs/tags/go"}],"version":"current","sidebarPosition":946,"frontMatter":{"title":"946. Validate Stack Sequences","sidebar_label":"946. Validate Stack Sequences","tags":["Leetcode Medium","Stack","Rust","Go"]},"sidebar":"docSidebar","previous":{"title":"941. Valid Mountain Array","permalink":"/docs/leetcode/501-1000/valid_mountain_array"},"next":{"title":"953. Verifying an Alien Dictionary","permalink":"/docs/leetcode/501-1000/verifying_an_alien_dictionary"}}');var a=t(74848),c=t(28453);const o={title:"946. Validate Stack Sequences",sidebar_label:"946. Validate Stack Sequences",tags:["Leetcode Medium","Stack","Rust","Go"]},i=void 0,l={},d=[{value:"Python",id:"python",level:2},{value:"Rust",id:"rust",level:2},{value:"Go",id:"go",level:2}];function r(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/validate-stack-sequences/",children:"https://leetcode.com/problems/validate-stack-sequences/"})}),"\n",(0,a.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from collections import deque\n\n\nclass Solution:\n    def validateStackSequences(self, pushed: List[int], popped: List[int]) -> bool:\n        remains = deque(popped)\n        stack = []\n\n        for num in pushed:\n            stack.append(num)\n            while stack and stack[-1] == remains[0]:\n                stack.pop()\n                remains.popleft()\n\n        return not remains\n"})}),"\n",(0,a.jsx)(n.h2,{id:"rust",children:"Rust"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:"impl Solution {\n    pub fn validate_stack_sequences(pushed: Vec<i32>, popped: Vec<i32>) -> bool {\n       let mut stack = Vec::new();\n        let mut pop_index = 0;\n        for num in pushed {\n            stack.push(num);\n            while let Some(&top) = stack.last() {\n                if top == popped[pop_index] {\n                    stack.pop();\n                    pop_index += 1;\n                } else {\n                    break;\n                }\n            }\n        }\n        pop_index == popped.len()\n    }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"go",children:"Go"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:"func validateStackSequences(pushed []int, popped []int) bool {\n    stack := []int{}\n    popIndex := 0\n    for _, num := range pushed {\n        stack = append(stack, num)\n        for len(stack) > 0 && stack[len(stack)-1] == popped[popIndex] {\n            stack = stack[:len(stack)-1]\n            popIndex++\n        }\n    }\n    return popIndex == len(popped)\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(96540);const a={},c=s.createContext(a);function o(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);