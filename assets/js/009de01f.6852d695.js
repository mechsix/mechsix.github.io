"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[8361],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),f=u(t),d=o,g=f["".concat(l,".").concat(d)]||f[d]||p[d]||i;return t?r.createElement(g,c(c({ref:n},s),{},{components:t})):r.createElement(g,c({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=f;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var u=2;u<i;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},88545:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return f}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),c=["components"],a={title:"441. Arranging Coins",sidebar_label:"441. Arranging Coins"},l=void 0,u={unversionedId:"leetcode/arranging_coins",id:"leetcode/arranging_coins",isDocsHomePage:!1,title:"441. Arranging Coins",description:"Python",source:"@site/docs/leetcode/441_arranging_coins.md",sourceDirName:"leetcode",slug:"/leetcode/arranging_coins",permalink:"/docs/leetcode/arranging_coins",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/441_arranging_coins.md",tags:[],version:"current",sidebarPosition:441,frontMatter:{title:"441. Arranging Coins",sidebar_label:"441. Arranging Coins"},sidebar:"tutorialSidebar",previous:{title:"430. Flatten Doubly Linked List",permalink:"/docs/leetcode/flatten_multilevel_doubly_linked_list"},next:{title:"739. Daily Temperatures",permalink:"/docs/leetcode/daily_temperatures"}},s=[{value:"Python",id:"python",children:[]}],p={toc:s};function f(e){var n=e.components,t=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def arrangeCoins(self, n: int) -> int:\n        row_counts = 0\n        counter = 1\n\n        while n > 0:\n            if n - counter >= 0:\n                row_counts += 1\n\n            n -= counter\n            counter += 1\n\n        return row_counts\n")))}f.isMDXComponent=!0}}]);