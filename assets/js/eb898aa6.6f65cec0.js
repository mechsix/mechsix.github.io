"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[53227],{47515:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"leetcode/2000/num_of_zero_filled_subarrays","title":"2348. Number of Zero-Filled Subarrays","description":"https://leetcode.com/problems/number-of-zero-filled-subarrays","source":"@site/docs/leetcode/2000/2348_num_of_zero_filled_subarrays.md","sourceDirName":"leetcode/2000","slug":"/leetcode/2000/num_of_zero_filled_subarrays","permalink":"/docs/leetcode/2000/num_of_zero_filled_subarrays","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"}],"version":"current","sidebarPosition":2348,"frontMatter":{"title":"2348. Number of Zero-Filled Subarrays","sidebar_label":"2348. Number of Zero-Filled Subarrays","tags":["Leetcode Medium"]},"sidebar":"docSidebar","previous":{"title":"2300. Successful Pairs of Spells and Potions","permalink":"/docs/leetcode/2000/successful_pairs_of_spells_and_potions"},"next":{"title":"2405. Optimal Partition of String","permalink":"/docs/leetcode/2000/optimal_partition_of_string"}}');var r=o(74848),s=o(28453);const i={title:"2348. Number of Zero-Filled Subarrays",sidebar_label:"2348. Number of Zero-Filled Subarrays",tags:["Leetcode Medium"]},l=void 0,a={},c=[{value:"Python",id:"python",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/number-of-zero-filled-subarrays",children:"https://leetcode.com/problems/number-of-zero-filled-subarrays"})}),"\n",(0,r.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def zeroFilledSubarray(self, nums: List[int]) -> int:\n        segments = []\n\n        count = 0\n        for i, num in enumerate(nums):\n            if num == 0:\n                count += 1\n                continue\n\n            if count:\n                segments.append(count)\n            count = 0\n\n        if count:\n            segments.append(count)\n\n        # Trapezoidal area\n        return sum([(n**2 + n)//2 for n in segments])\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var t=o(96540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);