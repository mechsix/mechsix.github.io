"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[2742],{56670:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"leetcode/1-500/range_sum_query_immutable","title":"303. Range Sum Query - Immutable","description":"https://leetcode.com/problems/range-sum-query-immutable/","source":"@site/docs/leetcode/1-500/303_range_sum_query_immutable.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/range_sum_query_immutable","permalink":"/docs/leetcode/1-500/range_sum_query_immutable","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"}],"version":"current","sidebarPosition":303,"frontMatter":{"title":"303. Range Sum Query - Immutable","sidebar_label":"303. Range Sum Query - Immutable","tags":["Leetcode Easy"]},"sidebar":"docSidebar","previous":{"title":"300. Longest Increasing Subsequence","permalink":"/docs/leetcode/1-500/longest_increasing_subsequence"},"next":{"title":"304. Range Sum Query 2D - Immutable","permalink":"/docs/leetcode/1-500/range_sum_query_2d_immutable"}}');var i=t(74848),l=t(28453);const r={title:"303. Range Sum Query - Immutable",sidebar_label:"303. Range Sum Query - Immutable",tags:["Leetcode Easy"]},a=void 0,c={},u=[{value:"Python",id:"python",level:2},{value:"Cache the sum of ranges on initial",id:"cache-the-sum-of-ranges-on-initial",level:3}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/range-sum-query-immutable/",children:"https://leetcode.com/problems/range-sum-query-immutable/"})}),"\n",(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h3,{id:"cache-the-sum-of-ranges-on-initial",children:"Cache the sum of ranges on initial"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["INIT","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Time: O(N)"}),"\n",(0,i.jsx)(n.li,{children:"Space: O(N)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Call sumRange","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Time: O(1)"}),"\n",(0,i.jsx)(n.li,{children:"Space: O(1)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class NumArray:\n    def __init__(self, nums: List[int]):\n        cache = [0]*len(nums)\n        cache[0] = nums[0]\n\n        for i in range(1, len(nums)):\n            cache[i] = cache[i-1] + nums[i]\n\n        self.cache = cache\n\n\n    def sumRange(self, left: int, right: int) -> int:\n        if left == 0:\n            return self.cache[right]\n        else:\n            return self.cache[right] - self.cache[left-1]\n"})})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(96540);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);