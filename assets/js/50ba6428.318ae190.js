"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[23515],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=s(n),p=i,f=u["".concat(l,".").concat(p)]||u[p]||b[p]||o;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},30905:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return a},default:function(){return u},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return s}});var r=n(83117),i=(n(67294),n(3905));const o={title:"688. Knight Probability in Chessboard",sidebar_label:"688. Knight Probability in Chessboard",tags:["Leetcode Medium","DFS","Matrix"]},a=void 0,c={unversionedId:"leetcode/501-1000/knight_probability_in_chessboard",id:"leetcode/501-1000/knight_probability_in_chessboard",title:"688. Knight Probability in Chessboard",description:"https://leetcode.com/problems/knight-probability-in-chessboard/",source:"@site/docs/leetcode/501-1000/688_knight_probability_in_chessboard.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/knight_probability_in_chessboard",permalink:"/docs/leetcode/501-1000/knight_probability_in_chessboard",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/688_knight_probability_in_chessboard.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"DFS",permalink:"/docs/tags/dfs"},{label:"Matrix",permalink:"/docs/tags/matrix"}],version:"current",sidebarPosition:688,frontMatter:{title:"688. Knight Probability in Chessboard",sidebar_label:"688. Knight Probability in Chessboard",tags:["Leetcode Medium","DFS","Matrix"]},sidebar:"docSidebar",previous:{title:"682. Baseball Game",permalink:"/docs/leetcode/501-1000/baseball_game"},next:{title:"692. Top K Frequent Words",permalink:"/docs/leetcode/501-1000/top_k_frequent_words"}},l={},s=[{value:"Python",id:"python",level:2},{value:"DFS with cache",id:"dfs-with-cache",level:3}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/knight-probability-in-chessboard/"},"https://leetcode.com/problems/knight-probability-in-chessboard/")),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("h3",{id:"dfs-with-cache"},"DFS with cache"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from functools import cache\n\n\nclass Solution:\n    def knightProbability(self, n: int, k: int, row: int, column: int) -> float:\n        if k == 0:\n            return 1\n\n        alts = [(2, -1), (1, -2), (-1, -2), (-2, -1), (-2, 1), (-1, 2), (1, 2), (2, 1)]\n\n        @cache\n        def dfs(x, y, remain):\n            if remain <= 0:\n                return 1\n\n            ans=0\n            for dx, dy in alts:\n                nx = x + dx\n                ny = y + dy\n                if 0 <= nx <= n-1 and 0 <= ny <= n-1:\n                    ans += dfs(nx, ny, remain-1)\n\n            return ans\n\n        return dfs(row,column,k) / 8**k\n")))}u.isMDXComponent=!0}}]);