"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[2677],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(r),p=o,f=d["".concat(c,".").concat(p)]||d[p]||m[p]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},58163:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return s}});var n=r(83117),o=(r(67294),r(3905));const a={title:"540. Single Element in a Sorted Array",sidebar_label:"540. Single Element in a Sorted Array",tags:["Leetcode Medium","Hash"]},i=void 0,l={unversionedId:"leetcode/501-1000/single_elm_in_sotrted_array",id:"leetcode/501-1000/single_elm_in_sotrted_array",title:"540. Single Element in a Sorted Array",description:"https://leetcode.com/problems/single-element-in-a-sorted-array",source:"@site/docs/leetcode/501-1000/540_single_elm_in_sotrted_array.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/single_elm_in_sotrted_array",permalink:"/docs/leetcode/501-1000/single_elm_in_sotrted_array",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/540_single_elm_in_sotrted_array.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Hash",permalink:"/docs/tags/hash"}],version:"current",sidebarPosition:540,frontMatter:{title:"540. Single Element in a Sorted Array",sidebar_label:"540. Single Element in a Sorted Array",tags:["Leetcode Medium","Hash"]},sidebar:"docSidebar",previous:{title:"538. Convert BST to Greater Tree",permalink:"/docs/leetcode/501-1000/feat1038_convert_bst_greater_tree"},next:{title:"543. Diameter of Binary Tree",permalink:"/docs/leetcode/501-1000/diameter_of_binary_tree"}},c={},s=[{value:"Python",id:"python",level:2},{value:"Reduce",id:"reduce",level:3},{value:"Set",id:"set",level:3}],u={toc:s};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/single-element-in-a-sorted-array"},"https://leetcode.com/problems/single-element-in-a-sorted-array")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"reduce"},"Reduce"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from functools import reduce\n\n\nclass Solution:\n    def singleNonDuplicate(self, nums: List[int]) -> int:\n        return reduce(lambda a, b: a^b, nums)\n")),(0,o.kt)("h3",{id:"set"},"Set"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Did not use the advantage of sorted condition")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def singleNonDuplicate(self, nums: List[int]) -> int:\n        buffer = set()\n\n        for num in nums:\n            if num not in buffer:\n                buffer.add(num)\n            else:\n                buffer.remove(num)\n\n        return buffer.pop(\n")))}d.isMDXComponent=!0}}]);