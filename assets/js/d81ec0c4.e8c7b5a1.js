"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[31745],{17214:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var i=n(74848),s=n(28453);const o={title:"258. Add Digits",sidebar_label:"258. Add Digits",tags:["Leetcode Easy"]},d=void 0,c={id:"leetcode/1-500/add_digits",title:"258. Add Digits",description:"https://leetcode.com/problems/add-digits/",source:"@site/docs/leetcode/1-500/258_add_digits.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/add_digits",permalink:"/docs/leetcode/1-500/add_digits",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"}],version:"current",sidebarPosition:258,frontMatter:{title:"258. Add Digits",sidebar_label:"258. Add Digits",tags:["Leetcode Easy"]},sidebar:"docSidebar",previous:{title:"Binary Tree Paths",permalink:"/docs/leetcode/1-500/binary-tree-paths"},next:{title:"260. Single Number III",permalink:"/docs/leetcode/1-500/single_number_iii"}},r={},a=[{value:"Python",id:"python",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/add-digits/",children:"https://leetcode.com/problems/add-digits/"})}),"\n",(0,i.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def addDigits(self, num: int) -> int:\n        \n        while num // 10 > 0:\n            total = 0\n            cur = num\n            while cur // 10 > 0:\n                total += cur % 10\n                cur = cur // 10\n            total += cur\n            num = total\n        return num\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>c});var i=n(96540);const s={},o=i.createContext(s);function d(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);