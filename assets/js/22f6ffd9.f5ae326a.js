"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[86090],{20170:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"leetcode/501-1000/set_mismatch","title":"645. Set Mismatch","description":"https://leetcode.com/problems/set-mismatch/","source":"@site/docs/leetcode/501-1000/645_set_mismatch.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/set_mismatch","permalink":"/docs/leetcode/501-1000/set_mismatch","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"},{"inline":true,"label":"Hash","permalink":"/docs/tags/hash"},{"inline":true,"label":"Sort","permalink":"/docs/tags/sort"}],"version":"current","sidebarPosition":645,"frontMatter":{"title":"645. Set Mismatch","sidebar_label":"645. Set Mismatch","tags":["Leetcode Easy","Hash","Sort"]},"sidebar":"docSidebar","previous":{"title":"637. Average of Levels in Binary Tree","permalink":"/docs/leetcode/501-1000/average_of_levels_in_binary_tree"},"next":{"title":"647. Palindromic Substrings","permalink":"/docs/leetcode/501-1000/palindromic_substrings"}}');var o=n(74848),i=n(28453);const r={title:"645. Set Mismatch",sidebar_label:"645. Set Mismatch",tags:["Leetcode Easy","Hash","Sort"]},c=void 0,a={},l=[{value:"Python",id:"python",level:2}];function m(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.com/problems/set-mismatch/",children:"https://leetcode.com/problems/set-mismatch/"})}),"\n",(0,o.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def findErrorNums(self, nums: List[int]) -> List[int]:\n        full_nums = set([n for n in range(1, len(nums)+1)])\n        \n        missed = full_nums - set(nums)\n        \n        seen = set()\n        for num in nums:\n            if num not in seen:\n                seen.add(num)\n                continue\n            return [num, missed.pop()]\n"})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(96540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);