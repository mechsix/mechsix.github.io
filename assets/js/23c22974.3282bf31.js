"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[37879],{63275:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"leetcode/1-500/ransom_note","title":"383. Ransom Note","description":"https://leetcode.com/problems/ransom-note/","source":"@site/docs/leetcode/1-500/383_ransom_note.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/ransom_note","permalink":"/docs/leetcode/1-500/ransom_note","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"}],"version":"current","sidebarPosition":383,"frontMatter":{"title":"383. Ransom Note","sidebar_label":"383. Ransom Note","tags":["Leetcode Easy"]},"sidebar":"docSidebar","previous":{"title":"382. Linked List Random Node","permalink":"/docs/leetcode/1-500/linked_list_rand_node"},"next":{"title":"387. First Unique Character in a String","permalink":"/docs/leetcode/1-500/first_unique_char_in_string"}}');var s=t(74848),r=t(28453);const i={title:"383. Ransom Note",sidebar_label:"383. Ransom Note",tags:["Leetcode Easy"]},a=void 0,l={},c=[{value:"Python",id:"python",level:2},{value:"Mapped by 26 letter list",id:"mapped-by-26-letter-list",level:3},{value:"Built-in Counter",id:"built-in-counter",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/ransom-note/",children:"https://leetcode.com/problems/ransom-note/"})}),"\n",(0,s.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(n.h3,{id:"mapped-by-26-letter-list",children:"Mapped by 26 letter list"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def canConstruct(self, ransomNote: str, magazine: str) -> bool:\n        used = list(magazine)\n\n        for char in ransomNote:\n            if char not in used:\n                return False\n            used[used.index(char)] = None\n\n        return True\n"})}),"\n",(0,s.jsx)(n.h3,{id:"built-in-counter",children:"Built-in Counter"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from collections import Counter\n\n\nclass Solution:\n    def canConstruct(self, ransomNote: str, magazine: str) -> bool:\n        counts = Counter(magazine)\n\n        for letter in ransomNote:\n            if letter not in counts or counts[letter]-1 < 0:\n                return False\n            counts[letter] -= 1\n\n        return True\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(96540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);