"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[74915],{59228:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=t(74848),s=t(28453);const o={title:"66. Plus One",sidebar_label:"66. Plus One",tags:["Leetcode Easy"]},r=void 0,l={id:"leetcode/1-500/plus_one",title:"66. Plus One",description:"Python",source:"@site/docs/leetcode/1-500/66_plus_one.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/plus_one",permalink:"/docs/leetcode/1-500/plus_one",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"}],version:"current",sidebarPosition:66,frontMatter:{title:"66. Plus One",sidebar_label:"66. Plus One",tags:["Leetcode Easy"]},sidebar:"docSidebar",previous:{title:"63. Unique Paths II",permalink:"/docs/leetcode/1-500/unique_paths_ii"},next:{title:"67. Add Binary",permalink:"/docs/leetcode/1-500/add_bin"}},d={},c=[{value:"Python",id:"python",level:2},{value:"To String and plus it",id:"to-string-and-plus-it",level:3},{value:"Loop and carry",id:"loop-and-carry",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h3,{id:"to-string-and-plus-it",children:"To String and plus it"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        num = int(''.join([str(n) for n in digits]))\n        return [int(n) for n in str(num+1)]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"loop-and-carry",children:"Loop and carry"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        carry = 1\n\n        for i in range(len(digits)-1, -1, -1):\n            digits[i] += carry\n            if digits[i] // 10 < 1:\n                carry = 0\n                break\n            digits[i] %= 10\n\n        return [1] + digits if carry else digits\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);