"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[14289],{3905:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>f});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),p=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},c=function(e){var r=p(e.components);return t.createElement(s.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?t.createElement(f,o(o({ref:r},c),{},{components:n})):t.createElement(f,o({ref:r},c))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},82876:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var t=n(87462),a=(n(67294),n(3905));const i={title:"448. Find All Numbers Disappeared in an Array",sidebar_label:"448. Find All Numbers Disappeared in an Array",tags:["Leetcode Easy"]},o=void 0,l={unversionedId:"leetcode/1-500/find_all_nums_disappeared_in_array",id:"leetcode/1-500/find_all_nums_disappeared_in_array",title:"448. Find All Numbers Disappeared in an Array",description:"https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array",source:"@site/docs/leetcode/1-500/448_find_all_nums_disappeared_in_array.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/find_all_nums_disappeared_in_array",permalink:"/docs/leetcode/1-500/find_all_nums_disappeared_in_array",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/448_find_all_nums_disappeared_in_array.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"}],version:"current",sidebarPosition:448,frontMatter:{title:"448. Find All Numbers Disappeared in an Array",sidebar_label:"448. Find All Numbers Disappeared in an Array",tags:["Leetcode Easy"]},sidebar:"docSidebar",previous:{title:"443. String Compression",permalink:"/docs/leetcode/1-500/string_compression"},next:{title:"450. Delete Node in a BST",permalink:"/docs/leetcode/1-500/delete_bst_node"}},s={},p=[{value:"Python",id:"python",level:2}],c={toc:p},d="wrapper";function u(e){let{components:r,...n}=e;return(0,a.kt)(d,(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array"},"https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array")),(0,a.kt)("h2",{id:"python"},"Python"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def findDisappearedNumbers(self, nums: List[int]) -> List[int]:\n        n = len(nums)\n        result = set(range(1, n+1))\n\n        for num in nums:\n            try:\n                result.remove(num)\n            except KeyError as err:\n                pass\n\n        return result\n")))}u.isMDXComponent=!0}}]);