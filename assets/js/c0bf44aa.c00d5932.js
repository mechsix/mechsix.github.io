"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[8444],{84316:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});const i=JSON.parse('{"id":"leetcode/1501-2000/find_original_array_from_doubled_array","title":"2007. Find Original Array From Doubled Array","description":"https://leetcode.com/problems/find-original-array-from-doubled-array/","source":"@site/docs/leetcode/1501-2000/2007_find_original_array_from_doubled_array.md","sourceDirName":"leetcode/1501-2000","slug":"/leetcode/1501-2000/find_original_array_from_doubled_array","permalink":"/docs/leetcode/1501-2000/find_original_array_from_doubled_array","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Sort","permalink":"/docs/tags/sort"}],"version":"current","sidebarPosition":2007,"frontMatter":{"title":"2007. Find Original Array From Doubled Array","sidebar_label":"2007. Find Original Array From Doubled Array","tags":["Leetcode Medium","Sort"]},"sidebar":"docSidebar","previous":{"title":"1996. The Number of Weak Characters in the Game","permalink":"/docs/leetcode/1501-2000/number_of_weak_character_in_the_game"},"next":{"title":"2038. Remove Colored Pieces if Both Neighbors are the Same Color","permalink":"/docs/leetcode/2000/remove_colored_pieces_if_both_neighbors_are_the_same"}}');var o=r(74848),t=r(28453);const a={title:"2007. Find Original Array From Doubled Array",sidebar_label:"2007. Find Original Array From Doubled Array",tags:["Leetcode Medium","Sort"]},d=void 0,l={},s=[{value:"Python",id:"python",level:2},{value:"Straightforward solution (Time limit exceed)",id:"straightforward-solution-time-limit-exceed",level:3},{value:"Solution from <code>tanmaysankhe</code>",id:"solution-from-tanmaysankhe",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/find-original-array-from-doubled-array/",children:"https://leetcode.com/problems/find-original-array-from-doubled-array/"})}),"\n",(0,o.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(n.h3,{id:"straightforward-solution-time-limit-exceed",children:"Straightforward solution (Time limit exceed)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def findOriginalArray(self, changed: List[int]) -> List[int]:\n        changed.sort()\n        origin, cand = [], []\n        temp = []\n\n        # Odd number can't possible be the doubled, filter them and early return\n        for num in changed:\n            if num % 2 == 0:\n                cand.append(num)\n            else:\n                origin.append(num)\n\n        for num in origin:\n            if cand and num*2 in cand:\n                cand.pop(cand.index(num*2))\n            else:\n                return []\n\n        # Process the remains\n        for i in range(len(cand)):\n            num = cand[i]\n            if num == -1:\n                continue\n            elif num != -1:\n                cand[i] = -1\n                if num*2 in cand:\n                    origin.append(num)\n                    cand[cand.index(num*2)] = -1\n                else:\n                    return []\n            else:\n                return []\n\n        cand = [n for n in cand if n != -1]\n        return [] if cand else origin\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"solution-from-tanmaysankhe",children:["Solution from ",(0,o.jsx)(n.code,{children:"tanmaysankhe"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/find-original-array-from-doubled-array/discuss/2580362/Python3-Easy-with-comments",children:"https://leetcode.com/problems/find-original-array-from-doubled-array/discuss/2580362/Python3-Easy-with-comments"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def findOriginalArray(self, changed: List[int]) -> List[int]:\n        #sorting the input array\n        changed.sort()\n        i = 0\n        ans = []\n        #dict for maintaining double of current element\n        doubled = collections.defaultdict(int)\n        while i < len(changed):\n            #checking if the current element is double of other element, if yes then skipping the element\n            if doubled[changed[i]] > 0:\n                    doubled[changed[i]] -= 1\n                    i += 1\n                    continue\n            #adding element to ans and it's double in the dictionary\n            ans.append(changed[i])\n            doubled[changed[i]*2] += 1\n            i += 1\n\n        #if dictionary have values other than 0 means there were someelements whose double were not in the changed list\n        for i in doubled.values():\n            if i != 0:\n                return []\n        return(ans)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>d});var i=r(96540);const o={},t=i.createContext(o);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);