"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[31093],{3905:(e,r,o)=>{o.d(r,{Zo:()=>d,kt:()=>b});var t=o(67294);function n(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function i(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,t)}return o}function l(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?i(Object(o),!0).forEach((function(r){n(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function a(e,r){if(null==e)return{};var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)o=i[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)o=i[t],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var c=t.createContext({}),s=function(e){var r=t.useContext(c),o=r;return e&&(o="function"==typeof e?e(r):l(l({},r),e)),o},d=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},h=t.forwardRef((function(e,r){var o=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),m=s(o),h=n,b=m["".concat(c,".").concat(h)]||m[h]||p[h]||i;return o?t.createElement(b,l(l({ref:r},d),{},{components:o})):t.createElement(b,l({ref:r},d))}));function b(e,r){var o=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=o.length,l=new Array(i);l[0]=h;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a[m]="string"==typeof e?e:n,l[1]=a;for(var s=2;s<i;s++)l[s]=o[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,o)}h.displayName="MDXCreateElement"},24866:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var t=o(87462),n=(o(67294),o(3905));const i={title:"2038. Remove Colored Pieces if Both Neighbors are the Same Color",sidebar_label:"2038. Remove Colored Pieces if Both Neighbors are the Same Color",tags:["Leetcode Medium","Greedy"]},l=void 0,a={unversionedId:"leetcode/2000/remove_colored_pieces_if_both_neighbors_are_the_same",id:"leetcode/2000/remove_colored_pieces_if_both_neighbors_are_the_same",title:"2038. Remove Colored Pieces if Both Neighbors are the Same Color",description:"https://leetcode.com/problems/remove-colored-pieces-if-both-neighbors-are-the-same-color/",source:"@site/docs/leetcode/2000/2038_remove_colored_pieces_if_both_neighbors_are_the_same.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/remove_colored_pieces_if_both_neighbors_are_the_same",permalink:"/docs/leetcode/2000/remove_colored_pieces_if_both_neighbors_are_the_same",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/2000/2038_remove_colored_pieces_if_both_neighbors_are_the_same.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Greedy",permalink:"/docs/tags/greedy"}],version:"current",sidebarPosition:2038,frontMatter:{title:"2038. Remove Colored Pieces if Both Neighbors are the Same Color",sidebar_label:"2038. Remove Colored Pieces if Both Neighbors are the Same Color",tags:["Leetcode Medium","Greedy"]},sidebar:"docSidebar",previous:{title:"2007. Find Original Array From Doubled Array",permalink:"/docs/leetcode/1501-2000/find_original_array_from_doubled_array"},next:{title:"2095. Delete the Middle Node of a Linked List",permalink:"/docs/leetcode/2000/delete_the_middle_of_linked_list"}},c={},s=[{value:"Python",id:"python",level:2}],d={toc:s},m="wrapper";function p(e){let{components:r,...o}=e;return(0,n.kt)(m,(0,t.Z)({},d,o,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/remove-colored-pieces-if-both-neighbors-are-the-same-color/"},"https://leetcode.com/problems/remove-colored-pieces-if-both-neighbors-are-the-same-color/")),(0,n.kt)("h2",{id:"python"},"Python"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def winnerOfGame(self, colors: str) -> bool:\n        alice, bob = 0, 0\n\n        for i in range(1, len(colors)-1):\n            if colors[i-1] == colors[i] == colors[i+1]:\n                if colors[i] == 'A':\n                    alice += 1\n                else:\n                    bob += 1\n\n        return alice > bob\n")))}p.isMDXComponent=!0}}]);