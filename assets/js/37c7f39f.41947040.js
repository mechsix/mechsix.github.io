"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[8543],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return f}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),d=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=d(e.components);return n.createElement(c.Provider,{value:r},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(t),m=o,f=u["".concat(c,".").concat(m)]||u[m]||s[m]||a;return t?n.createElement(f,i(i({ref:r},p),{},{components:t})):n.createElement(f,i({ref:r},p))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<a;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},75252:function(e,r,t){t.r(r),t.d(r,{assets:function(){return c},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return d}});var n=t(83117),o=(t(67294),t(3905));const a={title:"1328. Break a Palindrome",sidebar_label:"1328. Break a Palindrome",tags:["Leetcode Medium","Greedy"]},i=void 0,l={unversionedId:"leetcode/1001-1500/break_palindrome",id:"leetcode/1001-1500/break_palindrome",title:"1328. Break a Palindrome",description:"https://leetcode.com/problems/break-a-palindrome/",source:"@site/docs/leetcode/1001-1500/1328_break_palindrome.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/break_palindrome",permalink:"/docs/leetcode/1001-1500/break_palindrome",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1001-1500/1328_break_palindrome.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Greedy",permalink:"/docs/tags/greedy"}],version:"current",sidebarPosition:1328,frontMatter:{title:"1328. Break a Palindrome",sidebar_label:"1328. Break a Palindrome",tags:["Leetcode Medium","Greedy"]},sidebar:"docSidebar",previous:{title:"1306. Jump Game III",permalink:"/docs/leetcode/1001-1500/jump_game_iii"},next:{title:"1329. Sort the Matrix Diagonally",permalink:"/docs/leetcode/1001-1500/sort_matrix_diagonally"}},c={},d=[{value:"Python",id:"python",level:2},{value:"Greedy",id:"greedy",level:3}],p={toc:d};function u(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/break-a-palindrome/"},"https://leetcode.com/problems/break-a-palindrome/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"greedy"},"Greedy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def breakPalindrome(self, palindrome: str) -> str:\n        # Case: Not possible to become non-palindromic\n        if len(palindrome) == 1:\n            return \"\"\n\n        # Case: Replace the first not 'a' character\n        for i in range(len(palindrome)>>1):\n            if palindrome[i] != 'a':\n                return palindrome[:i] + 'a' + palindrome[i+1:]\n\n        # Case: all characters are 'a'\n        return palindrome[:-1] + 'b'\n")))}u.isMDXComponent=!0}}]);