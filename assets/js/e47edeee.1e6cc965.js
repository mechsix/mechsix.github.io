"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[59035],{4733:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"leetcode/1-500/p132_pattern","title":"456. 132 Pattern","description":"https://leetcode.com/problems/132-pattern/","source":"@site/docs/leetcode/1-500/456_p132_pattern.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/p132_pattern","permalink":"/docs/leetcode/1-500/p132_pattern","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Prefix Sum","permalink":"/docs/tags/prefix-sum"},{"inline":true,"label":"Stack","permalink":"/docs/tags/stack"}],"version":"current","sidebarPosition":456,"frontMatter":{"title":"456. 132 Pattern","sidebar_label":"456. 132 Pattern","tags":["Leetcode Medium","Prefix Sum","Stack"]},"sidebar":"docSidebar","previous":{"title":"453. Minimum Moves to Equal Array Elements","permalink":"/docs/leetcode/1-500/minimum_moves_to_equal_array_elements"},"next":{"title":"458. Poor Pigs","permalink":"/docs/leetcode/1-500/poor_pigs"}}');var r=i(74848),s=i(28453);const l={title:"456. 132 Pattern",sidebar_label:"456. 132 Pattern",tags:["Leetcode Medium","Prefix Sum","Stack"]},c=void 0,o={},a=[{value:"Python",id:"python",level:2},{value:"Brute Force (Timelimit Exceed)",id:"brute-force-timelimit-exceed",level:3},{value:"Brute Force - Remeber Min i (Timelimit Exceed)",id:"brute-force---remeber-min-i-timelimit-exceed",level:3},{value:"Prefix Sum (Min) with stack",id:"prefix-sum-min-with-stack",level:3}];function m(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/132-pattern/",children:"https://leetcode.com/problems/132-pattern/"})}),"\n",(0,r.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.h3,{id:"brute-force-timelimit-exceed",children:"Brute Force (Timelimit Exceed)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Time: O(n^3)"}),"\n",(0,r.jsx)(n.li,{children:"Space: O(1)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def find132pattern(self, nums: List[int]) -> bool:\n        n = len(nums)\n\n        if n < 3:\n            return False\n\n        for i in range(n-1):\n            for j in range(i+1, n-1):\n                if nums[i] > nums[j]:\n                    continue\n                for k in range(j+1, n):\n                    if nums[i] < nums[k] and nums[k] < nums[j]:\n                        return True\n\n        return False\n"})}),"\n",(0,r.jsx)(n.h3,{id:"brute-force---remeber-min-i-timelimit-exceed",children:"Brute Force - Remeber Min i (Timelimit Exceed)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Time: O(n^2)"}),"\n",(0,r.jsx)(n.li,{children:"Space: O(1)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import math\n\n\nclass Solution:\n    def find132pattern(self, nums: List[int]) -> bool:\n        n = len(nums)\n\n        if n < 3:\n            return False\n\n        min_i = math.inf\n        for j in range(n-1):\n            min_i = min(min_i, nums[j])\n            for k in range(j+1, n):\n                if min_i < nums[k] < nums[j]:\n                    return True\n\n        return False\n"})}),"\n",(0,r.jsx)(n.h3,{id:"prefix-sum-min-with-stack",children:"Prefix Sum (Min) with stack"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Time: O(n)"}),"\n",(0,r.jsx)(n.li,{children:"Space: O(n)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def find132pattern(self, nums: List[int]) -> bool:\n        n = len(nums)\n\n        if n < 3:\n            return False\n\n        prefix_min = [nums[0]]\n        for i in range(1, n):\n            prefix_min.append(min(prefix_min[-1], nums[i]))\n\n        stack = []\n        for j in range(n-1, -1, -1):\n            if nums[j] <= prefix_min[j]:\n                continue\n\n            while stack and stack[-1] <= prefix_min[j]:\n                stack.pop()\n\n            if stack and stack[-1] < nums[j]:\n                return True\n\n            stack.append(nums[j])\n\n        return False\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var t=i(96540);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);