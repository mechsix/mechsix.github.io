"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[92514],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return g}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=l(t),p=o,g=d["".concat(u,".").concat(p)]||d[p]||m[p]||i;return t?r.createElement(g,a(a({ref:n},s),{},{components:t})):r.createElement(g,a({ref:n},s))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c[d]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},83687:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l}});var r=t(83117),o=(t(67294),t(3905));const i={title:"1351. Count Negative Numbers in a Sorted Matrix",sidebar_label:"1351. Count Negative Numbers in a Sorted Matrix",tags:["Leetcode Easy","Matrix","Go","Rust"]},a=void 0,c={unversionedId:"leetcode/1001-1500/count_negative_num_in_a_sorted_matrix",id:"leetcode/1001-1500/count_negative_num_in_a_sorted_matrix",title:"1351. Count Negative Numbers in a Sorted Matrix",description:"https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/",source:"@site/docs/leetcode/1001-1500/1351_count_negative_num_in_a_sorted_matrix.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/count_negative_num_in_a_sorted_matrix",permalink:"/docs/leetcode/1001-1500/count_negative_num_in_a_sorted_matrix",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1001-1500/1351_count_negative_num_in_a_sorted_matrix.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Matrix",permalink:"/docs/tags/matrix"},{label:"Go",permalink:"/docs/tags/go"},{label:"Rust",permalink:"/docs/tags/rust"}],version:"current",sidebarPosition:1351,frontMatter:{title:"1351. Count Negative Numbers in a Sorted Matrix",sidebar_label:"1351. Count Negative Numbers in a Sorted Matrix",tags:["Leetcode Easy","Matrix","Go","Rust"]},sidebar:"docSidebar",previous:{title:"1346. Check If N and Its Double Exist",permalink:"/docs/leetcode/1001-1500/check_n_and_its_double_in_arr"},next:{title:"1372. Longest ZigZag Path in a Binary Tree",permalink:"/docs/leetcode/1001-1500/longest_zigzag_path_in_binary_tree"}},u={},l=[{value:"Python",id:"python",level:2},{value:"Go",id:"go",level:2},{value:"Rust",id:"rust",level:2}],s={toc:l};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/"},"https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution(object):\n    def countNegatives(self, grid):\n        m, n = len(grid), len(grid[0])\n\n        count = 0\n        for i in range(m):\n            if grid[i][0] < 0:\n                count += (m-i)*n\n                break\n\n            for j in range(n):\n                if grid[i][j] < 0:\n                    count += n-j\n                    break\n\n        return count\n")),(0,o.kt)("h2",{id:"go"},"Go"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"class Solution(object):\n    def countNegatives(self, grid):\n        m, n = len(grid), len(grid[0])\n\n        count = 0\n        for i in range(m):\n            if grid[i][0] < 0:\n                count += (m-i)*n\n                break\n\n            for j in range(n):\n                if grid[i][j] < 0:\n                    count += n-j\n                    break\n\n        return count\n")),(0,o.kt)("h2",{id:"rust"},"Rust"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"impl Solution {\n    pub fn count_negatives(grid: Vec<Vec<i32>>) -> i32 {\n        let m = grid.len();\n        let n = grid[0].len();\n\n        let mut count = 0;\n        for i in 0..m {\n            if grid[i][0] < 0 {\n                count += ((m-i) * n) as i32;\n                break;\n            }\n            for j in 0..n {\n                if grid[i][j] < 0 {\n                    count += (n-j) as i32;\n                    break;\n                }\n            }\n        }\n        count\n    }\n}\n")))}d.isMDXComponent=!0}}]);