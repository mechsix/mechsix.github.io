"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[36977],{83706:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(74848),o=r(28453);const a={title:"543. Diameter of Binary Tree",sidebar_label:"543. Diameter of Binary Tree",tags:["Leetcode Easy","Binary Tree"]},i=void 0,s={id:"leetcode/501-1000/diameter_of_binary_tree",title:"543. Diameter of Binary Tree",description:"https://leetcode.com/problems/diameter-of-binary-tree/",source:"@site/docs/leetcode/501-1000/543_diameter_of_binary_tree.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/diameter_of_binary_tree",permalink:"/docs/leetcode/501-1000/diameter_of_binary_tree",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Binary Tree",permalink:"/docs/tags/binary-tree"}],version:"current",sidebarPosition:543,frontMatter:{title:"543. Diameter of Binary Tree",sidebar_label:"543. Diameter of Binary Tree",tags:["Leetcode Easy","Binary Tree"]},sidebar:"docSidebar",previous:{title:"540. Single Element in a Sorted Array",permalink:"/docs/leetcode/501-1000/single_elm_in_sotrted_array"},next:{title:"560. Subarray Sum Equals K",permalink:"/docs/leetcode/501-1000/subarray_sum_equals_k"}},d={},l=[{value:"Python",id:"python",level:2},{value:"DFS",id:"dfs",level:3}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://leetcode.com/problems/diameter-of-binary-tree/",children:"https://leetcode.com/problems/diameter-of-binary-tree/"})}),"\n",(0,n.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,n.jsx)(t.h3,{id:"dfs",children:"DFS"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        ans = 0\n        def dfs(node):\n            if not node:\n                return 0\n            nonlocal ans\n            left_depth = dfs(node.left)\n            right_depth = dfs(node.right)\n            ans = max(ans, left_depth+right_depth)\n            return 1 + max(left_depth, right_depth)\n\n        dfs(root)\n\n        return ans\n"})})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var n=r(96540);const o={},a=n.createContext(o);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);