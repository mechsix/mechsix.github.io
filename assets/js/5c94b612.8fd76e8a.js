"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[48613],{28738:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>a,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"leetcode/1-500/max_sum_of_rectangle_no_larger_than_k","title":"363. Max Sum of Rectangle No Larger Than K","description":"Python","source":"@site/docs/leetcode/1-500/363_max_sum_of_rectangle_no_larger_than_k.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/max_sum_of_rectangle_no_larger_than_k","permalink":"/docs/leetcode/1-500/max_sum_of_rectangle_no_larger_than_k","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Hard","permalink":"/docs/tags/leetcode-hard"},{"inline":true,"label":"Prefix Sum","permalink":"/docs/tags/prefix-sum"},{"inline":true,"label":"Binary Search","permalink":"/docs/tags/binary-search"}],"version":"current","sidebarPosition":363,"frontMatter":{"title":"363. Max Sum of Rectangle No Larger Than K","sidebar_label":"363. Max Sum of Rectangle No Larger Than K","tags":["Leetcode Hard","Prefix Sum","Binary Search"]},"sidebar":"docSidebar","previous":{"title":"359. Logger Rate Limiter","permalink":"/docs/leetcode/1-500/logger_rate_limiter"},"next":{"title":"371. Sum of Two Integers","permalink":"/docs/leetcode/1-500/sum_of_two_integer"}}');var i=r(74848),o=r(28453);const a={title:"363. Max Sum of Rectangle No Larger Than K",sidebar_label:"363. Max Sum of Rectangle No Larger Than K",tags:["Leetcode Hard","Prefix Sum","Binary Search"]},s=void 0,l={},m=[{value:"Python",id:"python",level:2}];function c(e){const n={code:"code",h2:"h2",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from math import inf\nfrom bisect import insort, bisect_right\n\n\nclass Solution:\n    def maxSumSubmatrix(self, matrix: List[List[int]], k: int) -> int:\n        m, n = len(matrix), len(matrix[0])\n        prefix = self.build_prefix(matrix)\n\n        # Binary Search code refer to\n        # https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/discuss/2490502/Clean-Python3-W-Comments-or-Prefix-Sum-and-Bisect-or-Faster-than-97\n        max_sum_lk = float('-inf')\n        for row1 in range(m):\n            for row2 in range(row1, m):\n                left_sums = [0]\n                for end_col in range(n):\n                    sum_here = prefix[row2][end_col] - prefix[row1 - 1][end_col]\n\n                    pivot = bisect_right(left_sums, sum_here - k)\n                    if pivot > 0 and left_sums[pivot-1] == sum_here - k:\n                        return k\n                    elif pivot <= end_col:\n                        max_sum_lk = max(max_sum_lk, sum_here - left_sums[pivot])\n\n                    insort(left_sums, sum_here)\n\n        return max_sum_lk\n\n    @staticmethod\n    def build_prefix(matrix):\n        m, n = len(matrix), len(matrix[0])\n        prefix = [[0]*(n+1) for _ in range(m+1)]\n\n        for i in range(m):\n            for j in range(n):\n                if j-1 >= 0 and i-1 >= 0:\n                    prefix[i][j] = prefix[i-1][j] + prefix[i][j-1] - prefix[i-1][j-1] \\\n                                 + matrix[i][j]\n                elif i-1 >= 0:\n                    prefix[i][j] = prefix[i-1][j] + matrix[i][j]\n                elif j-1 >= 0:\n                    prefix[i][j] = prefix[i][j-1] + matrix[i][j]\n                else:\n                    prefix[i][j] = matrix[i][j]\n        return prefix\n"})})]})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(96540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);