"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[55460],{14921:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var o=n(74848),s=n(28453);const r={title:"347. Top K Frequent Elements",sidebar_label:"347. Top K Frequent Elements",tags:["Leetcode Medium","Heap"]},c=void 0,i={id:"leetcode/1-500/top_k_frequent_elms",title:"347. Top K Frequent Elements",description:"https://leetcode.com/problems/top-k-frequent-elements/",source:"@site/docs/leetcode/1-500/347_top_k_frequent_elms.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/top_k_frequent_elms",permalink:"/docs/leetcode/1-500/top_k_frequent_elms",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Heap",permalink:"/docs/tags/heap"}],version:"current",sidebarPosition:347,frontMatter:{title:"347. Top K Frequent Elements",sidebar_label:"347. Top K Frequent Elements",tags:["Leetcode Medium","Heap"]},sidebar:"docSidebar",previous:{title:"374. Guess Number Higher or Lower",permalink:"/docs/leetcode/1-500/guess_num_higher_or_lower"},next:{title:"349. Intersection of Two Arrays",permalink:"/docs/leetcode/1-500/intersection_of_two_arrays"}},l={},u=[{value:"Python",id:"python",level:2},{value:"Count and sort",id:"count-and-sort",level:3},{value:"Heap",id:"heap",level:3}];function a(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.com/problems/top-k-frequent-elements/",children:"https://leetcode.com/problems/top-k-frequent-elements/"})}),"\n",(0,o.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(t.h3,{id:"count-and-sort",children:"Count and sort"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"from collections import Counter\n\n\nclass Solution:\n    def topKFrequent(self, nums: List[int], k: int) -> List[int]:\n        counts = [(num, count) for num, count in Counter(nums).items()]\n        counts.sort(key=lambda item: item[1], reverse=True)\n\n        return [count[0] for count in counts[:k]]\n"})}),"\n",(0,o.jsx)(t.h3,{id:"heap",children:"Heap"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"import heapq\nfrom collections import Counter\n\n\nclass Solution:\n    def topKFrequent(self, nums: List[int], k: int) -> List[int]:\n        counts = Counter(nums)\n\n        return heapq.nlargest(k, counts.keys(), key=counts.get)\n"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var o=n(96540);const s={},r=o.createContext(s);function c(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);