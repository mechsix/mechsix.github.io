"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[44111],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>h});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),i=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=i(e.components);return n.createElement(u.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,c=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=i(t),y=a,h=p["".concat(u,".").concat(y)]||p[y]||d[y]||c;return t?n.createElement(h,o(o({ref:r},s),{},{components:t})):n.createElement(h,o({ref:r},s))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var c=t.length,o=new Array(c);o[0]=y;var l={};for(var u in r)hasOwnProperty.call(r,u)&&(l[u]=r[u]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var i=2;i<c;i++)o[i]=t[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},83238:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>l,toc:()=>i});var n=t(87462),a=(t(67294),t(3905));const c={title:"2677. Chunk Array",sidebar_label:"2677. Chunk Array",tags:["Leetcode Easy","JS 30 Days Challenge"]},o=void 0,l={unversionedId:"leetcode/2000/chunk_array",id:"leetcode/2000/chunk_array",title:"2677. Chunk Array",description:"https://leetcode.com/problems/chunk-array/",source:"@site/docs/leetcode/2000/2677_chunk_array.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/chunk_array",permalink:"/docs/leetcode/2000/chunk_array",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/2000/2677_chunk_array.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"JS 30 Days Challenge",permalink:"/docs/tags/js-30-days-challenge"}],version:"current",sidebarPosition:2677,frontMatter:{title:"2677. Chunk Array",sidebar_label:"2677. Chunk Array",tags:["Leetcode Easy","JS 30 Days Challenge"]},sidebar:"docSidebar",previous:{title:"2676. Throttle",permalink:"/docs/leetcode/2000/throttle"},next:{title:"2693. Call Function with Custom Context",permalink:"/docs/leetcode/2000/call_function_with_custom_context"}},u={},i=[{value:"Javascript",id:"javascript",level:2},{value:"Typescript",id:"typescript",level:2}],s={toc:i},p="wrapper";function d(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/chunk-array/"},"https://leetcode.com/problems/chunk-array/")),(0,a.kt)("h2",{id:"javascript"},"Javascript"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var chunk = function(arr, size) {\n    const result = []\n    arr.reduce((accu, value, index) => {\n        let  current\n        if (index % size === 0) {\n            current = []\n            accu.push(current)\n        } else {\n            current = accu[accu.length-1]\n        }\n\n        current.push(value)\n        return accu\n    }, result)\n    return result\n}\n")),(0,a.kt)("h2",{id:"typescript"},"Typescript"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"function chunk(arr: any[], size: number): any[][] {\n    const result = []\n    arr.reduce((accu, value, index) => {\n        let current: any[]\n        if (index % size === 0) {\n            current = []\n            accu.push(current)\n        } else {\n            current = accu[accu.length-1]\n        }\n\n        current.push(value)\n        return accu\n    }, result)\n    return result\n};\n")))}d.isMDXComponent=!0}}]);