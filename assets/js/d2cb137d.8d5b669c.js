"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[3347],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),u=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(a.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=u(t),d=o,m=f["".concat(a,".").concat(d)]||f[d]||s[d]||i;return t?r.createElement(m,l(l({ref:n},p),{},{components:t})):r.createElement(m,l({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=f;var c={};for(var a in n)hasOwnProperty.call(n,a)&&(c[a]=n[a]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var u=2;u<i;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9520:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return a},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),l=["components"],c={title:"509. Fibonacci Number",sidebar_label:"509. Fibonacci Number",tags:["Leetcode Easy","DP"]},a=void 0,u={unversionedId:"leetcode/501-1000/fibonacci_number",id:"leetcode/501-1000/fibonacci_number",title:"509. Fibonacci Number",description:"Python",source:"@site/docs/leetcode/501-1000/509_fibonacci_number.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/fibonacci_number",permalink:"/docs/leetcode/501-1000/fibonacci_number",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/509_fibonacci_number.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"DP",permalink:"/docs/tags/dp"}],version:"current",sidebarPosition:509,frontMatter:{title:"509. Fibonacci Number",sidebar_label:"509. Fibonacci Number",tags:["Leetcode Easy","DP"]},sidebar:"docSidebar",previous:{title:"456. 132 Pattern",permalink:"/docs/leetcode/1-500/456_132_pattern"},next:{title:"520. Detect Capital",permalink:"/docs/leetcode/501-1000/detect_capital"}},p=[{value:"Python",id:"python",children:[{value:"Dict Memory",id:"dict-memory",children:[],level:3},{value:"Python functools cache",id:"python-functools-cache",children:[],level:3},{value:"DP table",id:"dp-table",children:[],level:3},{value:"DP",id:"dp",children:[],level:3}],level:2}],s={toc:p};function f(e){var n=e.components,t=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("h3",{id:"dict-memory"},"Dict Memory"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Top-down DP")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def __init__(self):\n        self.memory = dict()\n\n    def fib(self, n: int) -> int:\n        if n < 2:\n            return n\n\n        if n in self.memory:\n            return self.memory[n]\n\n        self.memory[n] = self.fib(n-1) + self.fib(n-2)\n\n        return self.memory[n]\n")),(0,i.kt)("h3",{id:"python-functools-cache"},"Python functools cache"),(0,i.kt)("p",null,"Top-down DP"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Time: O(N)"),(0,i.kt)("li",{parentName:"ul"},"Space: O(N)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from functools import cache\n\nclass Solution:\n    @cache\n    def fib(self, n: int) -> int:\n        if n < 2:\n            return n\n\n        return self.fib(n-1) + self.fib(n-2)\n")),(0,i.kt)("h3",{id:"dp-table"},"DP table"),(0,i.kt)("p",null,"Bottom-up DP"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Time: O(N)"),(0,i.kt)("li",{parentName:"ul"},"Space: O(N)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def fib(self, n: int) -> int:\n        if n == 0:\n            return 0\n\n        dp = [None] * (n+1)\n        dp[0], dp[1] = 0, 1\n\n        for i in range(2, n+1):\n            dp[i] = dp[i-1] + dp[i-2]\n\n        return dp[n]\n")),(0,i.kt)("h3",{id:"dp"},"DP"),(0,i.kt)("p",null,"Bottom-up DP"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Time: O(N)"),(0,i.kt)("li",{parentName:"ul"},"Space: O(1)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def fib(self, n: int) -> int:\n        if n < 2:\n            return n\n\n        pre_2, pre_1 = 0, 1\n\n        for i in range(2, n+1):\n            current = pre_1 + pre_2\n            pre_2, pre_1  = pre_1, current\n\n        return pre_1\n")))}f.isMDXComponent=!0}}]);