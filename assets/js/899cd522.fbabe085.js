"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[70835],{19869:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var o=t(74848),s=t(28453);const a={title:"1249. Minimum Remove to Make Valid Parentheses",sidebar_label:"1249. Minimum Remove to Make Valid Parentheses",tags:["Leetcode Medium","Stack"]},i=void 0,r={id:"leetcode/1001-1500/min_remove_to_make_valid_parentheses",title:"1249. Minimum Remove to Make Valid Parentheses",description:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/",source:"@site/docs/leetcode/1001-1500/1249_min_remove_to_make_valid_parentheses.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/min_remove_to_make_valid_parentheses",permalink:"/docs/leetcode/1001-1500/min_remove_to_make_valid_parentheses",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Stack",permalink:"/docs/tags/stack"}],version:"current",sidebarPosition:1249,frontMatter:{title:"1249. Minimum Remove to Make Valid Parentheses",sidebar_label:"1249. Minimum Remove to Make Valid Parentheses",tags:["Leetcode Medium","Stack"]},sidebar:"docSidebar",previous:{title:"1239. Maximum Length of a Concatenated String with Unique Characters",permalink:"/docs/leetcode/1001-1500/max_length_of_concatenated_string_with_unique_chars"},next:{title:"1254. Number of Closed Islands",permalink:"/docs/leetcode/1001-1500/number_of_closed_islands"}},c={},l=[{value:"Python",id:"python",level:2}];function m(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/",children:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/"})}),"\n",(0,o.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Time: O(2N)"}),"\n",(0,o.jsx)(n.li,{children:"Space: O(k)  # k stands for removal item's number"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def minRemoveToMakeValid(self, s: str) -> str:\n        stack = []\n        chars = list(s)\n\n        removal = set()\n\n        for index, char in enumerate(chars):\n            if char == '(':\n                stack.append(index)\n            elif char == ')':\n                if not stack:\n                    removal.add(index)\n                else:\n                    stack.pop()\n\n        removal ^= set(stack)\n        result = []\n        for index, char in enumerate(chars):\n            if index in removal:\n                continue\n            result.append(char)\n\n        return ''.join(result)\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var o=t(96540);const s={},a=o.createContext(s);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);