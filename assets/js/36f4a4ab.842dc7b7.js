"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[68692],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),l=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=l(e.components);return o.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return n?o.createElement(f,a(a({ref:t},s),{},{components:n})):o.createElement(f,a({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},91474:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s}});var o=n(87462),r=n(63366),i=(n(67294),n(3905)),a=["components"],c={title:"1220. Count Vowels Permutation",sidebar_label:"1220. Count Vowels Permutation",tags:["Leetcode Hard","DP"]},u=void 0,l={unversionedId:"leetcode/1001-1500/count_vowels_permutation",id:"leetcode/1001-1500/count_vowels_permutation",title:"1220. Count Vowels Permutation",description:"https://leetcode.com/problems/count-vowels-permutation/",source:"@site/docs/leetcode/1001-1500/1220_count_vowels_permutation.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/count_vowels_permutation",permalink:"/docs/leetcode/1001-1500/count_vowels_permutation",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1001-1500/1220_count_vowels_permutation.md",tags:[{label:"Leetcode Hard",permalink:"/docs/tags/leetcode-hard"},{label:"DP",permalink:"/docs/tags/dp"}],version:"current",sidebarPosition:1220,frontMatter:{title:"1220. Count Vowels Permutation",sidebar_label:"1220. Count Vowels Permutation",tags:["Leetcode Hard","DP"]},sidebar:"docSidebar",previous:{title:"1217. Min Cost Move to Same Pos",permalink:"/docs/leetcode/1001-1500/min_cost_move_chips_to_same_pos"},next:{title:"1239. Maximum Length of a Concatenated String with Unique Characters",permalink:"/docs/leetcode/1001-1500/max_length_of_concatenated_string_with_unique_chars"}},s=[{value:"Python",id:"python",children:[{value:"Top Down DP",id:"top-down-dp",children:[],level:3}],level:2}],p={toc:s};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/count-vowels-permutation/"},"https://leetcode.com/problems/count-vowels-permutation/")),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("h3",{id:"top-down-dp"},"Top Down DP"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u771f\u5be6\u4e16\u754c\u5728\u5beb\u7684\u8a71\uff0c\u7528\u4f86\u7576\u958b\u982d\u7684",(0,i.kt)("inlineCode",{parentName:"li"},"#"),"\u8981\u5c0f\u5fc3\u53e6\u5916\u8655\u7406")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from functools import cache\n\n\nclass Solution:\n    def countVowelPermutation(self, n: int) -> int:\n        rules = {\n            '#': 'aeiou',\n            'a': 'eiu',\n            'e': 'ai',\n            'i': 'eo',\n            'o': 'i',\n            'u': 'io',\n        }\n\n        @cache\n        def dp(lead, remains):\n            if remains == 0:\n                return 1\n\n            if lead not in rules:\n                return 0\n\n            count = 0\n            for vow in rules[lead]:\n                count += dp(vow, remains-1)\n            return count\n\n        return dp('#', n) % ((10**9)+7)\n")))}d.isMDXComponent=!0}}]);