"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[11474],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=o,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},59851:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={title:"371. Sum of Two Integers",sidebar_label:"371. Sum of Two Integers",tags:["Leetcode Medium","Bit Manipulation"]},i=void 0,l={unversionedId:"leetcode/1-500/sum_of_two_integer",id:"leetcode/1-500/sum_of_two_integer",title:"371. Sum of Two Integers",description:"https://leetcode.com/problems/sum-of-two-integers/",source:"@site/docs/leetcode/1-500/371_sum_of_two_integer.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/sum_of_two_integer",permalink:"/docs/leetcode/1-500/sum_of_two_integer",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/371_sum_of_two_integer.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Bit Manipulation",permalink:"/docs/tags/bit-manipulation"}],version:"current",sidebarPosition:371,frontMatter:{title:"371. Sum of Two Integers",sidebar_label:"371. Sum of Two Integers",tags:["Leetcode Medium","Bit Manipulation"]},sidebar:"docSidebar",previous:{title:"363. Max Sum of Rectangle No Larger Than K",permalink:"/docs/leetcode/1-500/max_sum_of_rectangle_no_larger_than_k"},next:{title:"376. Wiggle Subsequence",permalink:"/docs/leetcode/1-500/wiggle_subsequence"}},c={},s=[{value:"Python",id:"python",level:2},{value:"Javascript",id:"javascript",level:2}],u={toc:s},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/sum-of-two-integers/"},"https://leetcode.com/problems/sum-of-two-integers/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use operator module for better understand")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from operator import xor, invert, and_\n\n\nclass Solution:\n    def getSum(self, a: int, b: int) -> int:\n        x, y = abs(a), abs(b)\n\n        # Ensure x >= y\n        if x < y:\n            return self.getSum(b, a)\n\n        sign = 1 if a > 0 else -1\n\n        if a * b >= 0:\n            # a and b are possitive integers\n            while y:\n                x, y = xor(x, y), and_(x, y) << 1\n        else:\n            while y:\n                x, y = xor(x, y), and_(invert(x), y) << 1\n\n        return sign * x\n")),(0,o.kt)("h2",{id:"javascript"},"Javascript"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"var getSum = function(a, b) {\n    while (b != 0){\n        const c = a & b;\n        a = a^b;\n        b = c << 1;\n    }\n    return a;\n};\n")))}m.isMDXComponent=!0}}]);