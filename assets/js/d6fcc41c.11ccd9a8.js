"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[1559],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=i(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var i=2;i<o;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2595:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return p}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),l=["components"],s={title:"32. Longest Valid Parentheses",sidebar_label:"32. Longest Valid Parentheses",tags:["Leetcode Hard","Stack"]},c=void 0,i={unversionedId:"leetcode/1-500/longest_valid_parentheses",id:"leetcode/1-500/longest_valid_parentheses",title:"32. Longest Valid Parentheses",description:"https://leetcode.com/problems/longest-valid-parentheses/",source:"@site/docs/leetcode/1-500/32_longest_valid_parentheses.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/longest_valid_parentheses",permalink:"/docs/leetcode/1-500/longest_valid_parentheses",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/32_longest_valid_parentheses.md",tags:[{label:"Leetcode Hard",permalink:"/docs/tags/leetcode-hard"},{label:"Stack",permalink:"/docs/tags/stack"}],version:"current",sidebarPosition:32,frontMatter:{title:"32. Longest Valid Parentheses",sidebar_label:"32. Longest Valid Parentheses",tags:["Leetcode Hard","Stack"]},sidebar:"docSidebar",previous:{title:"31. Next Permutation",permalink:"/docs/leetcode/1-500/next_permutation"},next:{title:"35. Search Insert Position",permalink:"/docs/leetcode/1-500/search_insert_pos"}},p=[{value:"Python",id:"python",children:[{value:"Stack",id:"stack",children:[],level:3}],level:2}],u={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/longest-valid-parentheses/"},"https://leetcode.com/problems/longest-valid-parentheses/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"stack"},"Stack"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Time: O(N)"),(0,o.kt)("li",{parentName:"ul"},"Space: O(N)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def longestValidParentheses(self, s: str) -> int:\n        max_length = 0\n\n        stack = []\n        stack.append((-1, ')'))\n\n        for i, char in enumerate(s):\n            if char == ')' and stack[-1][1] == '(':\n                stack.pop()\n                max_length = max(max_length, i-stack[-1][0])\n            else:\n                stack.append((i, char))\n\n        return max_length\n")))}d.isMDXComponent=!0}}]);