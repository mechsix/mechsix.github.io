"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[73549],{59333:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var o=r(74848),n=r(28453);const s={title:"108. Convert Sorted Array to Binary Search Tree",slidebar_label:"108. Convert Sorted Array to Binary Search Tree",tags:["Leetcode Easy","Binary Tree","BST"]},a=void 0,c={id:"leetcode/1-500/convert_sorted_array_to_bst",title:"108. Convert Sorted Array to Binary Search Tree",description:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/",source:"@site/docs/leetcode/1-500/108_convert_sorted_array_to_bst.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/convert_sorted_array_to_bst",permalink:"/docs/leetcode/1-500/convert_sorted_array_to_bst",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Binary Tree",permalink:"/docs/tags/binary-tree"},{label:"BST",permalink:"/docs/tags/bst"}],version:"current",sidebarPosition:108,frontMatter:{title:"108. Convert Sorted Array to Binary Search Tree",slidebar_label:"108. Convert Sorted Array to Binary Search Tree",tags:["Leetcode Easy","Binary Tree","BST"]},sidebar:"docSidebar",previous:{title:"106. Construct Binary Tree from Inorder and Postorder Traversal",permalink:"/docs/leetcode/1-500/construct_bin_tree_from_inorder_postorder_traversal"},next:{title:"109. Convert Sorted List to Binary Search Tree",permalink:"/docs/leetcode/1-500/convert_sorted_list_to_hight_balanced_bst"}},i={},l=[{value:"Python",id:"python",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/",children:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/"})}),"\n",(0,o.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def sortedArrayToBST(self, nums: List[int]) -> Optional[TreeNode]:\n        return self._build(nums, 0, len(nums)-1)\n\n    def _build(self, nums, left, right):\n        if left > right:\n            return\n\n        pivot = (left + right) // 2\n\n        return TreeNode(\n            val=nums[pivot],\n            left=self._build(nums, left, pivot-1),\n            right=self._build(nums, pivot+1, right)\n        )\n"})})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>c});var o=r(96540);const n={},s=o.createContext(n);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);