"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[76592],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return p}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=l(n),p=a,h=d["".concat(u,".").concat(p)]||d[p]||m[p]||o;return n?r.createElement(h,i(i({ref:t},s),{},{components:n})):r.createElement(h,i({ref:t},s))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},32637:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],c={title:"1239. Maximum Length of a Concatenated String with Unique Characters",sidebar_label:"1239. Maximum Length of a Concatenated String with Unique Characters",tags:["Leetcode Medium"]},u=void 0,l={unversionedId:"leetcode/1001-1500/max_length_of_concatenated_string_with_unique_chars",id:"leetcode/1001-1500/max_length_of_concatenated_string_with_unique_chars",title:"1239. Maximum Length of a Concatenated String with Unique Characters",description:"https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/",source:"@site/docs/leetcode/1001-1500/1239_max_length_of_concatenated_string_with_unique_chars.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/max_length_of_concatenated_string_with_unique_chars",permalink:"/docs/leetcode/1001-1500/max_length_of_concatenated_string_with_unique_chars",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1001-1500/1239_max_length_of_concatenated_string_with_unique_chars.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"}],version:"current",sidebarPosition:1239,frontMatter:{title:"1239. Maximum Length of a Concatenated String with Unique Characters",sidebar_label:"1239. Maximum Length of a Concatenated String with Unique Characters",tags:["Leetcode Medium"]},sidebar:"docSidebar",previous:{title:"1220. Count Vowels Permutation",permalink:"/docs/leetcode/1001-1500/count_vowels_permutation"},next:{title:"1249. Minimum Remove to Make Valid Parentheses",permalink:"/docs/leetcode/1001-1500/min_remove_to_make_valid_parentheses"}},s=[{value:"Python",id:"python",children:[{value:"Compare duplicate with set length",id:"compare-duplicate-with-set-length",children:[],level:3}],level:2}],m={toc:s};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/"},"https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"compare-duplicate-with-set-length"},"Compare duplicate with set length"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def maxLength(self, arr: List[str]) -> int:\n        results = [""]\n        ans = 0\n        for word in arr:\n            for i in range(len(results)):\n                new_result = word + results[i]\n                if len(new_result) != len(set(new_result)):\n                    continue\n                results.append(new_result)\n                ans = max(ans, len(new_result))\n        return ans\n')))}d.isMDXComponent=!0}}]);