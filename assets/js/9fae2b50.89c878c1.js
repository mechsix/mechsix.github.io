"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[22899],{59853:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var n=s(74848),i=s(28453);const r={title:"787. Cheapest Flights Within K Stops",sidebar_label:"787. Cheapest Flights Within K Stops",tags:["Leetcode Medium","Graph","DP","Dijkstra","TODO"]},o=void 0,c={id:"leetcode/501-1000/cheapest_flights_within_k_stops",title:"787. Cheapest Flights Within K Stops",description:"https://leetcode.com/problems/cheapest-flights-within-k-stops",source:"@site/docs/leetcode/501-1000/787_cheapest_flights_within_k_stops.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/cheapest_flights_within_k_stops",permalink:"/docs/leetcode/501-1000/cheapest_flights_within_k_stops",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Graph",permalink:"/docs/tags/graph"},{label:"DP",permalink:"/docs/tags/dp"},{label:"Dijkstra",permalink:"/docs/tags/dijkstra"},{label:"TODO",permalink:"/docs/tags/todo"}],version:"current",sidebarPosition:787,frontMatter:{title:"787. Cheapest Flights Within K Stops",sidebar_label:"787. Cheapest Flights Within K Stops",tags:["Leetcode Medium","Graph","DP","Dijkstra","TODO"]},sidebar:"docSidebar",previous:{title:"785. Is Graph Bipartite?",permalink:"/docs/leetcode/501-1000/is_graph_bipartite"},next:{title:"792. Number of Matching Subsequences",permalink:"/docs/leetcode/501-1000/number_of_matching_subsequences"}},a={},d=[{value:"Python",id:"python",level:2},{value:"BFS DP",id:"bfs-dp",level:3},{value:"Dijkstra",id:"dijkstra",level:3}];function p(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",children:"https://leetcode.com/problems/cheapest-flights-within-k-stops"})}),"\n",(0,n.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,n.jsx)(t.h3,{id:"bfs-dp",children:"BFS DP"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"from math import inf\nfrom collections import deque, defaultdict\n\n\nclass Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:\n        mapper = defaultdict(lambda: defaultdict(lambda: inf))\n\n        for source, dest, price in flights:\n            mapper[source][dest] = min(price, mapper[source][dest])\n\n        dp = [inf for _ in range(n)]\n        dp[src] = 0\n\n        queue = deque([(0, src, 0)])\n\n        path = set([src])\n        while queue:\n            cost, current, stops = queue.popleft()\n            dp[current] = min(dp[current], cost)\n            for cand_dst in mapper[current]:\n                if stops > k:\n                    continue\n                if dp[current] + mapper[current][cand_dst] < dp[cand_dst]:\n                    queue.append(\n                        (dp[current]+mapper[current][cand_dst], cand_dst, stops+1)\n                    )\n\n        return dp[dst] if dp[dst] != inf else -1\n"})}),"\n",(0,n.jsx)(t.h3,{id:"dijkstra",children:"Dijkstra"}),"\n",(0,n.jsx)(t.p,{children:"(TODO)"})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var n=s(96540);const i={},r=n.createContext(i);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);