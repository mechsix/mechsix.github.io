"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[7281],{94319:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>m});var t=o(74848),n=o(28453);const s={title:"1502. Can Make Arithmetic Progression From Sequence",sidebar_label:"1502. Can Make Arithmetic Progression From Sequence",tags:["Leetcode Easy","Array"]},a=void 0,i={id:"leetcode/1501-2000/can_make_arithmetic_progression_from_sequence",title:"1502. Can Make Arithmetic Progression From Sequence",description:"https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/",source:"@site/docs/leetcode/1501-2000/1502_can_make_arithmetic_progression_from_sequence.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/can_make_arithmetic_progression_from_sequence",permalink:"/docs/leetcode/1501-2000/can_make_arithmetic_progression_from_sequence",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Array",permalink:"/docs/tags/array"}],version:"current",sidebarPosition:1502,frontMatter:{title:"1502. Can Make Arithmetic Progression From Sequence",sidebar_label:"1502. Can Make Arithmetic Progression From Sequence",tags:["Leetcode Easy","Array"]},sidebar:"docSidebar",previous:{title:"1423. Maximum Points You Can Obtain from Cards",permalink:"/docs/leetcode/1501-2000/max_points_you_can_obtain_from_cards"},next:{title:"1512. Number of Good Pairs",permalink:"/docs/leetcode/1501-2000/number_of_good_pairs"}},c={},m=[{value:"Python",id:"python",level:2}];function l(e){const r={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/",children:"https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/"})}),"\n",(0,t.jsx)(r.h2,{id:"python",children:"Python"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class Solution:\n    def canMakeArithmeticProgression(self, arr: List[int]) -> bool:\n        arr.sort()\n        diff = arr[1] - arr[0]\n\n        for i in range(2, len(arr)):\n            if arr[i] - arr[i-1] != diff:\n                return False\n        return True\n"})})]})}function d(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,r,o)=>{o.d(r,{R:()=>a,x:()=>i});var t=o(96540);const n={},s=t.createContext(n);function a(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);