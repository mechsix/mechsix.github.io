"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[6938],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),a=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=a(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),d=a(t),m=o,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return t?r.createElement(f,c(c({ref:n},l),{},{components:t})):r.createElement(f,c({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=d;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u.mdxType="string"==typeof e?e:o,c[1]=u;for(var a=2;a<i;a++)c[a]=t[a];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},33891:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return a},toc:function(){return l},default:function(){return d}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),c=["components"],u={title:"283. Move Zeroes",sidebar_label:"283. Move Zeroes",tags:["Leetcode Easy","Two Pointer"]},s=void 0,a={unversionedId:"leetcode/1-500/move_zeros",id:"leetcode/1-500/move_zeros",title:"283. Move Zeroes",description:"Python",source:"@site/docs/leetcode/1-500/283_move_zeros.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/move_zeros",permalink:"/docs/leetcode/1-500/move_zeros",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/283_move_zeros.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Two Pointer",permalink:"/docs/tags/two-pointer"}],version:"current",sidebarPosition:283,frontMatter:{title:"283. Move Zeroes",sidebar_label:"283. Move Zeroes",tags:["Leetcode Easy","Two Pointer"]},sidebar:"docSidebar",previous:{title:"260. Single Number III",permalink:"/docs/leetcode/1-500/single_number_iii"},next:{title:"328. Odd Even Linked List",permalink:"/docs/leetcode/1-500/odd_even_linklist"}},l=[{value:"Python",id:"python",children:[],level:2}],p={toc:l};function d(e){var n=e.components,t=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        """\n        Input: nums = [0,1,0,3,12]\n        Output: [1,3,12,0,0]\n\n        """\n        if len(nums) < 2:\n            return\n\n        cur, r = 0, 0\n\n        while r < len(nums):\n            if nums[cur] != 0:\n                cur += 1\n                r = cur\n                continue\n\n            if nums[r] == 0:\n                r += 1\n                continue\n\n            nums[cur], nums[r] = nums[r], nums[cur]\n            cur += 1\n')))}d.isMDXComponent=!0}}]);