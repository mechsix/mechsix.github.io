"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[18148],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>f});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),i=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},d=function(e){var r=i(e.components);return n.createElement(l.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=i(t),m=o,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return t?n.createElement(f,s(s({ref:r},d),{},{components:t})):n.createElement(f,s({ref:r},d))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[u]="string"==typeof e?e:o,s[1]=c;for(var i=2;i<a;i++)s[i]=t[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},10355:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var n=t(87462),o=(t(67294),t(3905));const a={title:"183. Customers Who Never Order",sidebar_label:"183. Customers Who Never Order",tags:["Leetcode Easy","Pandas","SQL"]},s=void 0,c={unversionedId:"leetcode/1-500/customers_who_never_order",id:"leetcode/1-500/customers_who_never_order",title:"183. Customers Who Never Order",description:"Pandas",source:"@site/docs/leetcode/1-500/183_customers_who_never_order.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/customers_who_never_order",permalink:"/docs/leetcode/1-500/customers_who_never_order",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/183_customers_who_never_order.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Pandas",permalink:"/docs/tags/pandas"},{label:"SQL",permalink:"/docs/tags/sql"}],version:"current",sidebarPosition:183,frontMatter:{title:"183. Customers Who Never Order",sidebar_label:"183. Customers Who Never Order",tags:["Leetcode Easy","Pandas","SQL"]},sidebar:"docSidebar",previous:{title:"173. Binary Search Tree Iterator",permalink:"/docs/leetcode/1-500/bst_iterator"},next:{title:"187. Repeated DNA Sequences",permalink:"/docs/leetcode/1-500/repeated_dna_sequences"}},l={},i=[{value:"Pandas",id:"pandas",level:2},{value:"SQL",id:"sql",level:2}],d={toc:i},u="wrapper";function p(e){let{components:r,...t}=e;return(0,o.kt)(u,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"pandas"},"Pandas"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import pandas as pd\n\n\ndef find_customers(customers: pd.DataFrame, orders: pd.DataFrame) -> pd.DataFrame:\n    result = pd.DataFrame()\n    result['Customers'] =  customers[~customers.id.isin(\n        orders.customerId\n    )]['name']\n    return result\n")),(0,o.kt)("h2",{id:"sql"},"SQL"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    Customers.name AS Customers\nFROM Customers\nWHERE id NOT IN (\n    SELECT DISTINCT customerId\n    FROM Orders\n)\n")))}p.isMDXComponent=!0}}]);