"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[49193],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>y});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(y,i(i({ref:t},s),{},{components:r})):n.createElement(y,i({ref:t},s))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},51332:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const o={title:"852. Peak Index in a Mountain Array",sidebar_label:"852. Peak Index in a Mountain Array",tags:["Leetcode Medium","Binary Search"]},i=void 0,c={unversionedId:"leetcode/501-1000/peak_index_in_a_mountain_array",id:"leetcode/501-1000/peak_index_in_a_mountain_array",title:"852. Peak Index in a Mountain Array",description:"https://leetcode.com/problems/peak-index-in-a-mountain-array/",source:"@site/docs/leetcode/501-1000/852_peak_index_in_a_mountain_array.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/peak_index_in_a_mountain_array",permalink:"/docs/leetcode/501-1000/peak_index_in_a_mountain_array",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/852_peak_index_in_a_mountain_array.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Binary Search",permalink:"/docs/tags/binary-search"}],version:"current",sidebarPosition:852,frontMatter:{title:"852. Peak Index in a Mountain Array",sidebar_label:"852. Peak Index in a Mountain Array",tags:["Leetcode Medium","Binary Search"]},sidebar:"docSidebar",previous:{title:"844. Backspace String Compare",permalink:"/docs/leetcode/501-1000/backspacce_string_compare"},next:{title:"858. Mirror Reflection",permalink:"/docs/leetcode/501-1000/mirror_reflection"}},l={},p=[{value:"Python",id:"python",level:2}],s={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/peak-index-in-a-mountain-array/"},"https://leetcode.com/problems/peak-index-in-a-mountain-array/")),(0,a.kt)("h2",{id:"python"},"Python"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def peakIndexInMountainArray(self, arr: List[int]) -> int:\n        left, right = 0, len(arr)-1\n\n        while left <= right:\n            pivot = (left+right) >> 1\n\n            if arr[pivot+1] < arr[pivot] and arr[pivot-1] < arr[pivot]:\n                return pivot\n            \n            if arr[pivot+1] > arr[pivot]:\n                left = pivot + 1\n            else:\n                right = pivot\n")))}d.isMDXComponent=!0}}]);