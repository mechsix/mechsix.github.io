"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[80047],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=l(n),p=o,b=m["".concat(s,".").concat(p)]||m[p]||d[p]||a;return n?r.createElement(b,i(i({ref:t},u),{},{components:n})):r.createElement(b,i({ref:t},u))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[m]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},26143:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={title:"39. Combination Sum",sidebar_label:"39. Combination Sum",tags:["Leetcode Medium","Combinations"]},i=void 0,c={unversionedId:"leetcode/1-500/combinations_sum",id:"leetcode/1-500/combinations_sum",title:"39. Combination Sum",description:"https://leetcode.com/problems/combination-sum/",source:"@site/docs/leetcode/1-500/39_combinations_sum.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/combinations_sum",permalink:"/docs/leetcode/1-500/combinations_sum",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/39_combinations_sum.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Combinations",permalink:"/docs/tags/combinations"}],version:"current",sidebarPosition:39,frontMatter:{title:"39. Combination Sum",sidebar_label:"39. Combination Sum",tags:["Leetcode Medium","Combinations"]},sidebar:"docSidebar",previous:{title:"36. Valid Sudoku",permalink:"/docs/leetcode/1-500/valid_sudoku"},next:{title:"42. Trapping Rain Water",permalink:"/docs/leetcode/1-500/trapping_rain_water"}},s={},l=[{value:"Python",id:"python",level:2},{value:"Recursive",id:"recursive",level:3},{value:"Javascript",id:"javascript",level:2}],u={toc:l},m="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/combination-sum/"},"https://leetcode.com/problems/combination-sum/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"recursive"},"Recursive"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Remember seem combs with a tuple set")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def __init__(self):\n        self.seem = set()\n\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        return self._travel(candidates, target, [], [])\n\n    def _travel(self, cands, target, wip, combs):\n        total = sum(wip)\n        if total == target:\n            key = tuple(sorted(wip))\n            if key not in self.seem:\n                self.seem.add(key)\n                combs.append(wip)\n            return\n\n        if total > target:\n            return\n\n        for cand in cands:\n            self._travel(cands, target, wip+[cand], combs)\n        return combs\n")),(0,o.kt)("h2",{id:"javascript"},"Javascript"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"var combinationSum = function(candidates, target) {\n  var result = [];\n  var backtrack = function(start, target, record = []) {\n    if (target === 0) {\n      result.push(record.slice(0))\n      return;\n    }\n    if (target < 0) return;\n\n    for (let i = start; i < candidates.length; i++) {\n      const reminder = target - candidates[i];\n      if (reminder >= 0) {\n        record.push(candidates[i]);\n        backtrack(i, reminder, record);\n        record.pop();\n      }\n    }\n  }\n\n  backtrack(0, target);\n  return result;\n};\n")))}d.isMDXComponent=!0}}]);