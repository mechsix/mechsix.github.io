"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[29516],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>p});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=t.createContext({}),c=function(e){var n=t.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=c(e.components);return t.createElement(d.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(r),f=o,p=u["".concat(d,".").concat(f)]||u[f]||m[f]||a;return r?t.createElement(p,i(i({ref:n},s),{},{components:r})):t.createElement(p,i({ref:n},s))}));function p(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},79310:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=r(87462),o=(r(67294),r(3905));const a={title:"2007. Find Original Array From Doubled Array",sidebar_label:"2007. Find Original Array From Doubled Array",tags:["Leetcode Medium","Sort"]},i=void 0,l={unversionedId:"leetcode/1501-2000/find_original_array_from_doubled_array",id:"leetcode/1501-2000/find_original_array_from_doubled_array",title:"2007. Find Original Array From Doubled Array",description:"https://leetcode.com/problems/find-original-array-from-doubled-array/",source:"@site/docs/leetcode/1501-2000/2007_find_original_array_from_doubled_array.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/find_original_array_from_doubled_array",permalink:"/docs/leetcode/1501-2000/find_original_array_from_doubled_array",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1501-2000/2007_find_original_array_from_doubled_array.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Sort",permalink:"/docs/tags/sort"}],version:"current",sidebarPosition:2007,frontMatter:{title:"2007. Find Original Array From Doubled Array",sidebar_label:"2007. Find Original Array From Doubled Array",tags:["Leetcode Medium","Sort"]},sidebar:"docSidebar",previous:{title:"1996. The Number of Weak Characters in the Game",permalink:"/docs/leetcode/1501-2000/number_of_weak_character_in_the_game"},next:{title:"2038. Remove Colored Pieces if Both Neighbors are the Same Color",permalink:"/docs/leetcode/2000/remove_colored_pieces_if_both_neighbors_are_the_same"}},d={},c=[{value:"Python",id:"python",level:2},{value:"Straightforward solution (Time limit exceed)",id:"straightforward-solution-time-limit-exceed",level:3},{value:"Solution from <code>tanmaysankhe</code>",id:"solution-from-tanmaysankhe",level:3}],s={toc:c},u="wrapper";function m(e){let{components:n,...r}=e;return(0,o.kt)(u,(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/find-original-array-from-doubled-array/"},"https://leetcode.com/problems/find-original-array-from-doubled-array/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"straightforward-solution-time-limit-exceed"},"Straightforward solution (Time limit exceed)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def findOriginalArray(self, changed: List[int]) -> List[int]:\n        changed.sort()\n        origin, cand = [], []\n        temp = []\n\n        # Odd number can't possible be the doubled, filter them and early return\n        for num in changed:\n            if num % 2 == 0:\n                cand.append(num)\n            else:\n                origin.append(num)\n\n        for num in origin:\n            if cand and num*2 in cand:\n                cand.pop(cand.index(num*2))\n            else:\n                return []\n\n        # Process the remains\n        for i in range(len(cand)):\n            num = cand[i]\n            if num == -1:\n                continue\n            elif num != -1:\n                cand[i] = -1\n                if num*2 in cand:\n                    origin.append(num)\n                    cand[cand.index(num*2)] = -1\n                else:\n                    return []\n            else:\n                return []\n\n        cand = [n for n in cand if n != -1]\n        return [] if cand else origin\n")),(0,o.kt)("h3",{id:"solution-from-tanmaysankhe"},"Solution from ",(0,o.kt)("inlineCode",{parentName:"h3"},"tanmaysankhe")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/find-original-array-from-doubled-array/discuss/2580362/Python3-Easy-with-comments"},"https://leetcode.com/problems/find-original-array-from-doubled-array/discuss/2580362/Python3-Easy-with-comments")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def findOriginalArray(self, changed: List[int]) -> List[int]:\n        #sorting the input array\n        changed.sort()\n        i = 0\n        ans = []\n        #dict for maintaining double of current element\n        doubled = collections.defaultdict(int)\n        while i < len(changed):\n            #checking if the current element is double of other element, if yes then skipping the element\n            if doubled[changed[i]] > 0:\n                    doubled[changed[i]] -= 1\n                    i += 1\n                    continue\n            #adding element to ans and it's double in the dictionary\n            ans.append(changed[i])\n            doubled[changed[i]*2] += 1\n            i += 1\n\n        #if dictionary have values other than 0 means there were someelements whose double were not in the changed list\n        for i in doubled.values():\n            if i != 0:\n                return []\n        return(ans)\n")))}m.isMDXComponent=!0}}]);