"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[79542],{9350:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"leetcode/1-500/find_the_difference","title":"389. Find the Difference","description":"https://leetcode.com/problems/find-the-difference/submissions/","source":"@site/docs/leetcode/1-500/389_find_the_difference.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/find_the_difference","permalink":"/docs/leetcode/1-500/find_the_difference","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"},{"inline":true,"label":"Go","permalink":"/docs/tags/go"}],"version":"current","sidebarPosition":389,"frontMatter":{"title":"389. Find the Difference","sidebar_label":"389. Find the Difference","tags":["Leetcode Easy","Go"]},"sidebar":"docSidebar","previous":{"title":"387. First Unique Character in a String","permalink":"/docs/leetcode/1-500/first_unique_char_in_string"},"next":{"title":"392. Is Subsequence","permalink":"/docs/leetcode/1-500/is_subsequence"}}');var r=t(74848),i=t(28453);const o={title:"389. Find the Difference",sidebar_label:"389. Find the Difference",tags:["Leetcode Easy","Go"]},c=void 0,a={},d=[{value:"Python",id:"python",level:2},{value:"Go",id:"go",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/find-the-difference/submissions/",children:"https://leetcode.com/problems/find-the-difference/submissions/"})}),"\n",(0,r.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def findTheDifference(self, s: str, t: str) -> str:\n        chars_s = list(s)\n        chars_t = list(t)\n\n        chars_s.sort()\n        chars_t.sort()\n\n        for i in range(len(chars_s)):\n            if chars_s[i] != chars_t[i]:\n                return chars_t[i]\n        return chars_t[-1]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"go",children:"Go"}),"\n",(0,r.jsxs)(n.p,{children:["Sorting of rune reference ",(0,r.jsx)(n.a,{href:"https://stackoverflow.com/questions/22688651/golang-how-to-sort-string-or-byte",children:"here"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"type sortRunes []rune\n\nfunc (s sortRunes) Less(i, j int) bool {\n    return s[i] < s[j]\n}\n\nfunc (s sortRunes) Swap(i, j int) {\n    s[i], s[j] = s[j], s[i]\n}\n\nfunc (s sortRunes) Len() int {\n    return len(s)\n}\n\nfunc findTheDifference(s string, t string) byte {\n    chars_s := []rune(s)\n    chars_t := []rune(t)\n\n    sort.Sort(sortRunes(chars_s))\n    sort.Sort(sortRunes(chars_t))\n\n    for i, char := range(chars_s) {\n        if char != chars_t[i] {\n            return byte(chars_t[i])\n        }\n    }\n    return byte(chars_t[len(chars_t)-1])\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(96540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);