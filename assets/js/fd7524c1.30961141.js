"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[76653],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>h});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=s(r),u=i,h=p["".concat(l,".").concat(u)]||p[u]||d[u]||o;return r?n.createElement(h,a(a({ref:t},m),{},{components:r})):n.createElement(h,a({ref:t},m))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},78285:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=r(87462),i=(r(67294),r(3905));const o={title:"1870. Minimum Speed to Arrive on Time",sidebar_label:"1870. Minimum Speed to Arrive on Time",tags:["Leetcode Medium","Binary Search"]},a=void 0,c={unversionedId:"leetcode/1501-2000/min_speed_to_arrive_on_time",id:"leetcode/1501-2000/min_speed_to_arrive_on_time",title:"1870. Minimum Speed to Arrive on Time",description:"https://leetcode.com/problems/minimum-speed-to-arrive-on-time/",source:"@site/docs/leetcode/1501-2000/1870_min_speed_to_arrive_on_time.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/min_speed_to_arrive_on_time",permalink:"/docs/leetcode/1501-2000/min_speed_to_arrive_on_time",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1501-2000/1870_min_speed_to_arrive_on_time.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Binary Search",permalink:"/docs/tags/binary-search"}],version:"current",sidebarPosition:1870,frontMatter:{title:"1870. Minimum Speed to Arrive on Time",sidebar_label:"1870. Minimum Speed to Arrive on Time",tags:["Leetcode Medium","Binary Search"]},sidebar:"docSidebar",previous:{title:"1857. Largest Color Value in a Directed Graph",permalink:"/docs/leetcode/1501-2000/largest_color_value_in_a_directed_graph"},next:{title:"1911. Maximum Alternating Subsequence Sum",permalink:"/docs/leetcode/1501-2000/maximum_alternating_subsequence_sum"}},l={},s=[{value:"Python",id:"python",level:2},{value:"Binary Search",id:"binary-search",level:3}],m={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/minimum-speed-to-arrive-on-time/"},"https://leetcode.com/problems/minimum-speed-to-arrive-on-time/")),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("h3",{id:"binary-search"},"Binary Search"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def minSpeedOnTime(self, dist: List[int], hour: float) -> int:\n        def can_reach(speed):\n            return sum([ceil(dst/speed) for dst in dist[:-1]], 0) + dist[-1] / speed <= hour\n\n        low, high = 1, 10**7\n        min_speed = -1\n        while low <= high:\n            speed = (high - low) // 2 + low\n            if can_reach(speed):\n                min_speed = speed\n                high = speed - 1\n            else:\n                low = speed + 1\n        return min_speed\n")))}d.isMDXComponent=!0}}]);