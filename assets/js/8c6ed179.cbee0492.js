"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[44969],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>y});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),s=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(a.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(r),f=o,y=p["".concat(a,".").concat(f)]||p[f]||u[f]||i;return r?n.createElement(y,l(l({ref:t},d),{},{components:r})):n.createElement(y,l({ref:t},d))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=f;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c[p]="string"==typeof e?e:o,l[1]=c;for(var s=2;s<i;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},43361:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const i={title:"Linked List"},l=void 0,c={unversionedId:"leetcode_note/linked_list",id:"leetcode_note/linked_list",title:"Linked List",description:"Cycle Detection",source:"@site/docs/leetcode_note/linked_list.md",sourceDirName:"leetcode_note",slug:"/leetcode_note/linked_list",permalink:"/docs/leetcode_note/linked_list",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode_note/linked_list.md",tags:[],version:"current",frontMatter:{title:"Linked List"},sidebar:"docSidebar",previous:{title:"Heap",permalink:"/docs/leetcode_note/heap"},next:{title:"1. Two Sum",permalink:"/docs/leetcode/1-500/two_sum"}},a={},s=[{value:"Cycle Detection",id:"cycle-detection",level:2},{value:"Floyd&#39;s Tortoise and Hare",id:"floyds-tortoise-and-hare",level:3}],d={toc:s},p="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"cycle-detection"},"Cycle Detection"),(0,o.kt)("h3",{id:"floyds-tortoise-and-hare"},"Floyd's Tortoise and Hare"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Cycle_detection#Floyd's_tortoise_and_hare"},"\u9f9c\u5154\u8cfd\u8dd1\u7b97\u6cd5"),"\uff0cslow\u548cfast\u90fd\u5f9ehead\u958b\u59cb"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Tortoise (slow pointer)\u4e00\u6b21\u524d\u90321"),(0,o.kt)("li",{parentName:"ul"},"Hare (fast pointer)\u4e00\u6b21\u524d\u90322")),(0,o.kt)("p",null,"\u5982\u679cLinked List\u5167\u5b58\u5728Cycle\uff0cslow\u8ddffast\u5fc5\u5b9a\u6703\u76f8\u9047"))}u.isMDXComponent=!0}}]);