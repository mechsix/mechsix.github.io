"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[84856],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},41435:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],l={title:"240. Search a 2D Matrix II",sidebar_label:"240. Search a 2D Matrix II",tags:["Leetcode Medium","Binary Search","Matrix"]},c=void 0,s={unversionedId:"leetcode/1-500/search_2d_matrix_ii",id:"leetcode/1-500/search_2d_matrix_ii",title:"240. Search a 2D Matrix II",description:"https://leetcode.com/problems/search-a-2d-matrix-ii/",source:"@site/docs/leetcode/1-500/240_search_2d_matrix_ii.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/search_2d_matrix_ii",permalink:"/docs/leetcode/1-500/search_2d_matrix_ii",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/240_search_2d_matrix_ii.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Binary Search",permalink:"/docs/tags/binary-search"},{label:"Matrix",permalink:"/docs/tags/matrix"}],version:"current",sidebarPosition:240,frontMatter:{title:"240. Search a 2D Matrix II",sidebar_label:"240. Search a 2D Matrix II",tags:["Leetcode Medium","Binary Search","Matrix"]},sidebar:"docSidebar",previous:{title:"238. Product of Array Except Self",permalink:"/docs/leetcode/1-500/product_array_except_self"},next:{title:"242. Valid Anagram",permalink:"/docs/leetcode/1-500/valid_anagram"}},u=[{value:"Python",id:"python",children:[{value:"Binary Search on cols",id:"binary-search-on-cols",children:[],level:3},{value:"Divide and Conquer",id:"divide-and-conquer",children:[],level:3}],level:2}],d={toc:u};function p(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/search-a-2d-matrix-ii/"},"https://leetcode.com/problems/search-a-2d-matrix-ii/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"binary-search-on-cols"},"Binary Search on cols"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Time: O(logm * logn)"),(0,o.kt)("li",{parentName:"ul"},"Space: O(1)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        n = len(matrix)\n        m = len(matrix[0])\n\n        for col in range(m):\n            top, down = 0, n-1\n            while top <= down:\n                cur = (top+down)//2\n                if matrix[cur][col] == target:\n                    return True\n                elif matrix[cur][col] < target:\n                    top = cur + 1\n                else:\n                    down = cur - 1\n\n        return False\n")),(0,o.kt)("h3",{id:"divide-and-conquer"},"Divide and Conquer"),(0,o.kt)("p",null,"Start from top right, and:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"If target > value, target not possible in the next rows of the column"),(0,o.kt)("li",{parentName:"ol"},"If target < value, target not possible in the right of the row")),(0,o.kt)("p",null,"(Can also start from the bottom left field)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        n = len(matrix)\n        m = len(matrix[0])\n\n        # row: 0 ~ n-1\n        # col: m-1 ~ 0\n        row, col = 0, m-1\n\n        while row < n and col >= 0:\n            if matrix[row][col] == target:\n                return True\n            elif matrix[row][col] > target:\n                col -= 1\n            else:\n                row += 1\n        return False\n")))}p.isMDXComponent=!0}}]);