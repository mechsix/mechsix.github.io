"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[56672],{90662:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"leetcode/1501-2000/max_num_of_k_sum_pairs","title":"1679. Max Number of K-Sum Pairs","description":"https://leetcode.com/problems/max-number-of-k-sum-pairs/","source":"@site/docs/leetcode/1501-2000/1679_max_num_of_k_sum_pairs.md","sourceDirName":"leetcode/1501-2000","slug":"/leetcode/1501-2000/max_num_of_k_sum_pairs","permalink":"/docs/leetcode/1501-2000/max_num_of_k_sum_pairs","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Prefix Sum","permalink":"/docs/tags/prefix-sum"}],"version":"current","sidebarPosition":1679,"frontMatter":{"title":"1679. Max Number of K-Sum Pairs","sidebar_label":"1679. Max Number of K-Sum Pairs","tags":["Leetcode Medium","Prefix Sum"]},"sidebar":"docSidebar","previous":{"title":"1672. Richest Customer Wealth","permalink":"/docs/leetcode/1501-2000/richest_customer_wealth"},"next":{"title":"1680. Concatenation of Consecutive Binary Numbers","permalink":"/docs/leetcode/1501-2000/concatenation_of_consecutive_bin_nums"}}');var i=t(74848),r=t(28453);const o={title:"1679. Max Number of K-Sum Pairs",sidebar_label:"1679. Max Number of K-Sum Pairs",tags:["Leetcode Medium","Prefix Sum"]},a=void 0,u={},m=[{value:"Python",id:"python",level:2},{value:"Prefix Sum",id:"prefix-sum",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/max-number-of-k-sum-pairs/",children:"https://leetcode.com/problems/max-number-of-k-sum-pairs/"})}),"\n",(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h3,{id:"prefix-sum",children:"Prefix Sum"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from collections import defaultdict\n\n\nclass Solution:\n    def maxOperations(self, nums: List[int], k: int) -> int:\n        if len(nums) < 2:\n            return 0\n\n        mapper = defaultdict(int)\n        for i, num in enumerate(nums):\n            mapper[num] += 1\n\n        used = set()\n        ans = 0\n        for num, count in mapper.items():\n            if num in used:\n                continue\n\n            remains = k - num\n            if remains == num:\n                ans += count // 2\n                used.add(num)\n            elif remains in mapper:\n                ans += min(count, mapper[remains])\n                used.add(remains)\n\n        return ans\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);