"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[43014],{32737:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"leetcode/1-500/combination_sum_iii","title":"216. Combination Sum III","description":"https://leetcode.com/problems/combination-sum-iii/","source":"@site/docs/leetcode/1-500/216_combination_sum_iii.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/combination_sum_iii","permalink":"/docs/leetcode/1-500/combination_sum_iii","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Combinations","permalink":"/docs/tags/combinations"},{"inline":true,"label":"Backtracking","permalink":"/docs/tags/backtracking"}],"version":"current","sidebarPosition":216,"frontMatter":{"title":"216. Combination Sum III","sidebar_label":"216. Combination Sum III","tags":["Leetcode Medium","Combinations","Backtracking"]},"sidebar":"docSidebar","previous":{"title":"215. Kth Largest Element in an Array","permalink":"/docs/leetcode/1-500/kth_largest_elm_in_array"},"next":{"title":"217. Contains Duplicate","permalink":"/docs/leetcode/1-500/containers_duplicate"}}');var o=t(74848),c=t(28453);const a={title:"216. Combination Sum III",sidebar_label:"216. Combination Sum III",tags:["Leetcode Medium","Combinations","Backtracking"]},r=void 0,s={},l=[{value:"Python",id:"python",level:2},{value:"Backtracking",id:"backtracking",level:3}];function u(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,c.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://leetcode.com/problems/combination-sum-iii/",children:"https://leetcode.com/problems/combination-sum-iii/"})}),"\n",(0,o.jsx)(e.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(e.h3,{id:"backtracking",children:"Backtracking"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def combinationSum3(self, k: int, n: int) -> List[List[int]]:\n        options = [num for num in range(1, 10)]\n        result = set()\n\n        def backtrack(track: set):\n            if len(track) == k:\n                if sum(track) == n:\n                    result.add(tuple(sorted(list(track))))\n                return\n\n            current_total = sum(track)\n\n            for option in options:\n                if option in track:\n                    continue\n\n                if current_total + option > n:\n                    continue\n\n                track.add(option)\n                backtrack(track)\n                track.remove(option)\n\n        backtrack(set())\n\n        return list(result)\n"})})]})}function m(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>r});var i=t(96540);const o={},c=i.createContext(o);function a(n){const e=i.useContext(c);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),i.createElement(c.Provider,{value:e},n.children)}}}]);