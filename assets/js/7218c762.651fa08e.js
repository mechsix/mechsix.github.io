"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[8943],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65616:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return a},default:function(){return u},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l}});var r=n(83117),o=(n(67294),n(3905));const i={title:"783. Minimum Distance Between BST Nodes",sidebar_label:"783. Minimum Distance Between BST Nodes",tags:["Leetcode Easy","BST"]},a=void 0,c={unversionedId:"leetcode/501-1000/min_distance_btw_bst_nodes",id:"leetcode/501-1000/min_distance_btw_bst_nodes",title:"783. Minimum Distance Between BST Nodes",description:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",source:"@site/docs/leetcode/501-1000/783_min_distance_btw_bst_nodes.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/min_distance_btw_bst_nodes",permalink:"/docs/leetcode/501-1000/min_distance_btw_bst_nodes",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/783_min_distance_btw_bst_nodes.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"BST",permalink:"/docs/tags/bst"}],version:"current",sidebarPosition:783,frontMatter:{title:"783. Minimum Distance Between BST Nodes",sidebar_label:"783. Minimum Distance Between BST Nodes",tags:["Leetcode Easy","BST"]},sidebar:"docSidebar",previous:{title:"779. K-th Symbol in Grammar",permalink:"/docs/leetcode/501-1000/kth_symbol_in_grammar"},next:{title:"785. Is Graph Bipartite?",permalink:"/docs/leetcode/501-1000/is_graph_bipartite"}},s={},l=[{value:"Python",id:"python",level:2},{value:"In-Order Travel",id:"in-order-travel",level:3}],d={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes"},"https://leetcode.com/problems/minimum-distance-between-bst-nodes")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"in-order-travel"},"In-Order Travel"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from math import inf\nfrom typing import Optional\n\n\nclass Solution:\n    def minDiffInBST(self, root: Optional[TreeNode]) -> int:\n        result = inf\n        pre = None\n\n        def inorder(node: Optional[TreeNode]):\n            if not node:\n                return\n\n            nonlocal pre\n            nonlocal result\n\n            inorder(node.left)\n            if pre is not None:\n                result = min(result, node.val-pre)\n\n            pre = node.val\n            inorder(node.right)\n\n        inorder(root)\n\n        return result\n")))}u.isMDXComponent=!0}}]);