"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[57877],{68038:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"leetcode/1-500/reverse_nodes_in_k_group","title":"25. Reverse Nodes in k-Group","description":"https://leetcode.com/problems/reverse-nodes-in-k-group/","source":"@site/docs/leetcode/1-500/25_reverse_nodes_in_k_group.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/reverse_nodes_in_k_group","permalink":"/docs/leetcode/1-500/reverse_nodes_in_k_group","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Hard","permalink":"/docs/tags/leetcode-hard"},{"inline":true,"label":"Linked List","permalink":"/docs/tags/linked-list"},{"inline":true,"label":"Stack","permalink":"/docs/tags/stack"}],"version":"current","sidebarPosition":25,"frontMatter":{"title":"25. Reverse Nodes in k-Group","sidebar_label":"25. Reverse Nodes in k-Group","tags":["Leetcode Hard","Linked List","Stack"]},"sidebar":"docSidebar","previous":{"title":"24. Swap Nodes in Pairs","permalink":"/docs/leetcode/1-500/swap_nodes_in_pairs"},"next":{"title":"26. Remove Duplicates from Sorted Array","permalink":"/docs/leetcode/1-500/rm_duplicate_from_sorted_array"}}');var o=t(74848),s=t(28453);const i={title:"25. Reverse Nodes in k-Group",sidebar_label:"25. Reverse Nodes in k-Group",tags:["Leetcode Hard","Linked List","Stack"]},d=void 0,c={},a=[{value:"Python",id:"python",level:2},{value:"Stack and detect length",id:"stack-and-detect-length",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/reverse-nodes-in-k-group/",children:"https://leetcode.com/problems/reverse-nodes-in-k-group/"})}),"\n",(0,o.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(n.h3,{id:"stack-and-detect-length",children:"Stack and detect length"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Time: O(N+k)"}),"\n",(0,o.jsx)(n.li,{children:"Space: O(k)  # Used on the stack"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class Solution:\n    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:\n        if k < 2:\n            # If k == 1, nothing to be changed\n            return head\n\n        stack = []\n        dummy = ListNode(next=head)\n\n        # gpre stands for group pervious pointer\n        gpre, cur = dummy, head\n\n        while cur:\n            stack.append(cur)\n\n            if len(stack) % k == 0:\n                # Nodes in stack is ready to be reversed\n                origin_next = cur.next\n                print("Reversing {} -> {} -> {}:".format(\n                    gpre.val,\n                    [node.val for node in stack],\n                    cur.next.val if cur.next else None\n                ))\n\n                # Dummy head of the reversing part\n                rhead = ListNode()\n                rcur = rhead\n                while stack:\n                    rcur.next = stack.pop()\n                    rcur = rcur.next\n                    rcur.next = None # To prevent loop, add back after while\n\n                # The rcur now point to the new end of the reversed linked list\n                # Maintain the pointers\n                rcur.next = origin_next\n                gpre.next = rhead.next\n                gpre = rcur\n                cur = rcur.next\n            else:\n                cur = cur.next\n\n        return dummy.next\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var r=t(96540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);