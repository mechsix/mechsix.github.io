"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[89984],{55577:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var o=r(74848),n=r(28453);const s={title:"26. Remove Duplicates from Sorted Array",sidebar_label:"26. Remove Duplicates from Sorted Array",tags:["Leetcode Easy","TODO","In Place","Two Pointer"]},a=void 0,c={id:"leetcode/1-500/rm_duplicate_from_sorted_array",title:"26. Remove Duplicates from Sorted Array",description:"https://leetcode.com/problems/remove-duplicates-from-sorted-array",source:"@site/docs/leetcode/1-500/26_rm_duplicate_from_sorted_array.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/rm_duplicate_from_sorted_array",permalink:"/docs/leetcode/1-500/rm_duplicate_from_sorted_array",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"TODO",permalink:"/docs/tags/todo"},{label:"In Place",permalink:"/docs/tags/in-place"},{label:"Two Pointer",permalink:"/docs/tags/two-pointer"}],version:"current",sidebarPosition:26,frontMatter:{title:"26. Remove Duplicates from Sorted Array",sidebar_label:"26. Remove Duplicates from Sorted Array",tags:["Leetcode Easy","TODO","In Place","Two Pointer"]},sidebar:"docSidebar",previous:{title:"25. Reverse Nodes in k-Group",permalink:"/docs/leetcode/1-500/reverse_nodes_in_k_group"},next:{title:"27. Remove Element",permalink:"/docs/leetcode/1-500/remove_element"}},l={},i=[{value:"Python",id:"python",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.com/problems/remove-duplicates-from-sorted-array",children:"https://leetcode.com/problems/remove-duplicates-from-sorted-array"})}),"\n",(0,o.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        if length := len(nums) < 2:\n            return length\n\n        cur, after = 0, 1\n\n        while after < len(nums):\n            if nums[cur] != nums[after]:\n                cur += 1\n                nums[cur], nums[after] = nums[after], nums[cur]\n            after += 1\n        return cur + 1\n"})})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>c});var o=r(96540);const n={},s=o.createContext(n);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);