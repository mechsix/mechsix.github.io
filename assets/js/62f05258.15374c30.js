"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[62547],{84937:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"leetcode/1-500/russian_doll_envelopes","title":"354. Russian Doll Envelopes","description":"https://leetcode.com/problems/russian-doll-envelopes/","source":"@site/docs/leetcode/1-500/354_russian_doll_envelopes.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/russian_doll_envelopes","permalink":"/docs/leetcode/1-500/russian_doll_envelopes","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Hard","permalink":"/docs/tags/leetcode-hard"},{"inline":true,"label":"Binary Search","permalink":"/docs/tags/binary-search"},{"inline":true,"label":"DP","permalink":"/docs/tags/dp"}],"version":"current","sidebarPosition":354,"frontMatter":{"title":"354. Russian Doll Envelopes","sidebar_label":"354. Russian Doll Envelopes","tags":["Leetcode Hard","Binary Search","DP"]},"sidebar":"docSidebar","previous":{"title":"350. Intersection of Two Arrays II","permalink":"/docs/leetcode/1-500/intersection_of_two_arrays_ii"},"next":{"title":"359. Logger Rate Limiter","permalink":"/docs/leetcode/1-500/logger_rate_limiter"}}');var i=t(74848),o=t(28453);const l={title:"354. Russian Doll Envelopes",sidebar_label:"354. Russian Doll Envelopes",tags:["Leetcode Hard","Binary Search","DP"]},r=void 0,a={},c=[{value:"Python",id:"python",level:2},{value:"DP with Binary Search (Bisect)",id:"dp-with-binary-search-bisect",level:3},{value:"Javascript",id:"javascript",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/russian-doll-envelopes/",children:"https://leetcode.com/problems/russian-doll-envelopes/"})}),"\n",(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h3,{id:"dp-with-binary-search-bisect",children:"DP with Binary Search (Bisect)"}),"\n",(0,i.jsx)(n.p,{children:"(Offical solution)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from bisect import bisect_left\n\n\nclass Solution:\n    def maxEnvelopes(self, envelopes: List[List[int]]) -> int:\n        # On the same width, since we can only choose 'one' envelop\n        # Reverse sort on the height to get select the max height envelop if they're in the same width\n        envelopes.sort(key=lambda wh: (wh[0], -wh[1]))\n\n        dp = []\n        for i, (width, height) in enumerate(envelopes):\n            # Binary Search the posistion to pick from the sequence of envelops\n            pos = bisect_left(dp, height)\n            if pos == len(dp):\n                dp.append(height)\n            else:\n                dp[pos] = height\n\n        return len(dp)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"javascript",children:"Javascript"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"var maxEnvelopes = function(envelopes) {\n    \n    envelopes.sort(([aW, aH], [bW, bH]) => {\n        if (aW === bW) return bH - aH;\n        return aW - bW;\n    })\n    \n    const dp = [];\n    for (let i = 0; i < envelopes.length; i++) {\n        const h = envelopes[i][1];\n        let left = 0;\n        let right = dp.length;\n        \n        while (left < right) {\n            let mid = (left + right) >> 1;\n            if (dp[mid] < h) left = mid + 1;\n            else right = mid;\n        }    \n        dp[left] = h;\n    }\n    \n    \n    return dp.length;\n};\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(96540);const i={},o=s.createContext(i);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);