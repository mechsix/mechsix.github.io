"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[1597],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),a=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=a(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=a(n),p=i,f=d["".concat(l,".").concat(p)]||d[p]||m[p]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,s[1]=c;for(var a=2;a<o;a++)s[a]=n[a];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},84537:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return a},toc:function(){return u}});var r=n(87462),i=n(63366),o=(n(67294),n(3905)),s=["components"],c={title:"712. Minimum ASCII Delete Sum for Two Strings",sidebar_label:"712. Minimum ASCII Delete Sum for Two Strings",tags:["Leetcode Medium","DP"]},l=void 0,a={unversionedId:"leetcode/501-1000/minimum-ascii-delete-sum-for-two-strings",id:"leetcode/501-1000/minimum-ascii-delete-sum-for-two-strings",title:"712. Minimum ASCII Delete Sum for Two Strings",description:"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/",source:"@site/docs/leetcode/501-1000/712_minimum-ascii-delete-sum-for-two-strings.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/minimum-ascii-delete-sum-for-two-strings",permalink:"/docs/leetcode/501-1000/minimum-ascii-delete-sum-for-two-strings",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/712_minimum-ascii-delete-sum-for-two-strings.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"DP",permalink:"/docs/tags/dp"}],version:"current",sidebarPosition:712,frontMatter:{title:"712. Minimum ASCII Delete Sum for Two Strings",sidebar_label:"712. Minimum ASCII Delete Sum for Two Strings",tags:["Leetcode Medium","DP"]},sidebar:"docSidebar",previous:{title:"707. Design Linked List",permalink:"/docs/leetcode/501-1000/design_linked_list"},next:{title:"723. Candy Crush",permalink:"/docs/leetcode/501-1000/candy_crush"}},u=[{value:"Python",id:"python",children:[],level:2},{value:"JS",id:"js",children:[],level:2}],m={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/"},"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h2",{id:"js"},"JS"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'var minimumDeleteSum = function(s1, s2) {\n    const dp = [...new Array(s2.length + 1)].map(() => new Array(s1.length + 1).fill(0));\n    \n    for (let i = 1; i <= s2.length; i++) {\n        dp[i][0] = dp[i - 1][0] + s2[i - 1].charCodeAt(0)\n    }\n    \n    for (let j = 1; j <= s1.length; j++) {\n        dp[0][j] = dp[0][j - 1] + s1[j - 1].charCodeAt(0)\n    }\n    // console.log(dp)\n    \n    for (let i = 1; i <= s2.length; i++) {\n        for (let j = 1; j <= s1.length; j++) {\n            if (s2[i - 1] !== s1[j - 1]) {\n                dp[i][j] = Math.min(\n                    dp[i - 1][j] + s2[i - 1].charCodeAt(0), \n                    dp[i][j - 1] + s1[j - 1].charCodeAt(0)\n                );\n            } else {\n                dp[i][j] = dp[i - 1][j - 1];\n            }\n        }\n    }\n    // console.log(dp)\n    return dp[s2.length][s1.length]\n};\n\n/**\n *\n *     "   s   e   a\n * "   0 115 216 313\n * e 101 216 115 212\n * a 198 313 212 115  \n * t 314 429     231\n *\n * sea, e  -> ["sea", ""] + e or ["se", "e"] + a -> [313 + 116] or [115 + 97]\n * sea, ea -> ["se", "e"] -> 115\n */\n\n// e: 101, a: 97, t: 116, s: 115\n')))}d.isMDXComponent=!0}}]);