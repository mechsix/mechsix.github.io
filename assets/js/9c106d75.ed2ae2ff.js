"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[28950],{83989:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=o(74848),r=o(28453);const s={title:"1644. Lowest Common Ancestor of a Binary Tree II",sidebar_label:"1644. Lowest Common Ancestor of a Binary Tree II",tags:["Leetcode Medium","Binary Tree"]},i=void 0,a={id:"leetcode/1501-2000/lowest_common_ancestor_of_bt_ii",title:"1644. Lowest Common Ancestor of a Binary Tree II",description:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii/",source:"@site/docs/leetcode/1501-2000/1644_lowest_common_ancestor_of_bt_ii.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/lowest_common_ancestor_of_bt_ii",permalink:"/docs/leetcode/1501-2000/lowest_common_ancestor_of_bt_ii",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Binary Tree",permalink:"/docs/tags/binary-tree"}],version:"current",sidebarPosition:1644,frontMatter:{title:"1644. Lowest Common Ancestor of a Binary Tree II",sidebar_label:"1644. Lowest Common Ancestor of a Binary Tree II",tags:["Leetcode Medium","Binary Tree"]},sidebar:"docSidebar",previous:{title:"1642. Furthest Building You Can Reach",permalink:"/docs/leetcode/1501-2000/furtuest_building_can_reach"},next:{title:"1647. Minimum Deletions to Make Character Frequencies Unique",permalink:"/docs/leetcode/1501-2000/mini_deletions_make_character_frequencies_unique"}},l={},c=[{value:"Python",id:"python",level:2},{value:"Postorder Traversal",id:"postorder-traversal",level:3},{value:"Javascript",id:"javascript",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii/",children:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii/"})}),"\n",(0,t.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,t.jsx)(n.h3,{id:"postorder-traversal",children:"Postorder Traversal"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n\n        def post_order(node):\n            if not node:\n                return None, 0\n\n            r_node, r_hits = post_order(node.right)\n            l_node, l_hits = post_order(node.left)\n\n            if node.val == p.val or node.val == q.val:\n                return node, 1 + r_hits + l_hits\n\n            if l_node and r_node:\n                return node, r_hits + l_hits\n\n            return (l_node, l_hits) if l_node else (r_node, r_hits)\n\n        target_node, hits = post_order(root)\n\n        return target_node if hits == 2 else None\n"})}),"\n",(0,t.jsx)(n.h2,{id:"javascript",children:"Javascript"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"var lowestCommonAncestor = function(root, p, q) {\n    if (!p || !q) return null;\n    let res = null;\n    const recursive = (node) => {\n        if (!node) return null;\n        let isLeft = recursive(node.left);\n        let isRight = recursive(node.right);\n        let isMid = node.val === p.val || node.val === q.val;\n        if ((isMid && isRight) || (isMid && isLeft) || (isLeft && isRight)) {\n            res = node;\n        }\n        return isLeft || isRight || isMid;\n    }\n    recursive(root);\n    return res;\n};\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(96540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);