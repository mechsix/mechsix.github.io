"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[70508],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},79864:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={title:"383. Ransom Note",sidebar_label:"383. Ransom Note",tags:["Leetcode Easy"]},i=void 0,l={unversionedId:"leetcode/1-500/ransom_note",id:"leetcode/1-500/ransom_note",title:"383. Ransom Note",description:"https://leetcode.com/problems/ransom-note/",source:"@site/docs/leetcode/1-500/383_ransom_note.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/ransom_note",permalink:"/docs/leetcode/1-500/ransom_note",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/383_ransom_note.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"}],version:"current",sidebarPosition:383,frontMatter:{title:"383. Ransom Note",sidebar_label:"383. Ransom Note",tags:["Leetcode Easy"]},sidebar:"docSidebar",previous:{title:"382. Linked List Random Node",permalink:"/docs/leetcode/1-500/linked_list_rand_node"},next:{title:"387. First Unique Character in a String",permalink:"/docs/leetcode/1-500/first_unique_char_in_string"}},s={},c=[{value:"Python",id:"python",level:2},{value:"Mapped by 26 letter list",id:"mapped-by-26-letter-list",level:3},{value:"Built-in Counter",id:"built-in-counter",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/ransom-note/"},"https://leetcode.com/problems/ransom-note/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"mapped-by-26-letter-list"},"Mapped by 26 letter list"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def canConstruct(self, ransomNote: str, magazine: str) -> bool:\n        used = list(magazine)\n\n        for char in ransomNote:\n            if char not in used:\n                return False\n            used[used.index(char)] = None\n\n        return True\n")),(0,o.kt)("h3",{id:"built-in-counter"},"Built-in Counter"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from collections import Counter\n\n\nclass Solution:\n    def canConstruct(self, ransomNote: str, magazine: str) -> bool:\n        counts = Counter(magazine)\n\n        for letter in ransomNote:\n            if letter not in counts or counts[letter]-1 < 0:\n                return False\n            counts[letter] -= 1\n\n        return True\n")))}d.isMDXComponent=!0}}]);