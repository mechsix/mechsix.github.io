"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[61205],{3905:function(e,t,n){n.d(t,{Zo:function(){return a},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},a=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,a=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=o,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||c;return n?r.createElement(m,u(u({ref:t},a),{},{components:n})):r.createElement(m,u({ref:t},a))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,u=new Array(c);u[0]=f;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:o,u[1]=s;for(var l=2;l<c;l++)u[l]=n[l];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},68751:function(e,t,n){n.r(t),n.d(t,{assets:function(){return i},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return l}});var r=n(83117),o=(n(67294),n(3905));const c={title:"392. Is Subsequence",sidebar_label:"392. Is Subsequence",tags:["Leetcode Easy"]},u=void 0,s={unversionedId:"leetcode/1-500/is_subsequence",id:"leetcode/1-500/is_subsequence",title:"392. Is Subsequence",description:"https://leetcode.com/problems/is-subsequence/",source:"@site/docs/leetcode/1-500/392_is_subsequence.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/is_subsequence",permalink:"/docs/leetcode/1-500/is_subsequence",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/392_is_subsequence.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"}],version:"current",sidebarPosition:392,frontMatter:{title:"392. Is Subsequence",sidebar_label:"392. Is Subsequence",tags:["Leetcode Easy"]},sidebar:"docSidebar",previous:{title:"389. Find the Difference",permalink:"/docs/leetcode/1-500/find_the_difference"},next:{title:"394. Decode String",permalink:"/docs/leetcode/1-500/decode_string"}},i={},l=[{value:"Python",id:"python",level:2},{value:"Queue Pop",id:"queue-pop",level:3},{value:"Pointer",id:"pointer",level:3}],a={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/is-subsequence/"},"https://leetcode.com/problems/is-subsequence/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"queue-pop"},"Queue Pop"),(0,o.kt)("p",null,"N = len(s), M = len(t)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Time: O(M)"),(0,o.kt)("li",{parentName:"ul"},"Space: O(N)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from collections import deque\n\n\nclass Solution:\n    def isSubsequence(self, s: str, t: str) -> bool:\n        checks = deque(s)\n        for char in t:\n            if not checks:\n                return True\n\n            if checks[0] == char:\n                checks.popleft()\n\n        return not bool(checks)\n")),(0,o.kt)("h3",{id:"pointer"},"Pointer"),(0,o.kt)("p",null,"N = len(s), M = len(t)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Time: O(M)"),(0,o.kt)("li",{parentName:"ul"},"Space: O(1)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def isSubsequence(self, s: str, t: str) -> bool:\n        if not s:\n            return True\n\n        i = 0\n        for letter in t:\n            if i == len(s):\n                return True\n            if s[i] == letter:\n                i += 1\n\n        return i == len(s)\n")))}p.isMDXComponent=!0}}]);