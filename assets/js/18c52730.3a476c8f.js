"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[71555],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),f=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=f(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=f(r),u=o,m=d["".concat(s,".").concat(u)]||d[u]||p[u]||a;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:o,i[1]=c;for(var f=2;f<a;f++)i[f]=r[f];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},43447:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>f});var n=r(87462),o=(r(67294),r(3905));const a={title:"2215. Find the Difference of Two Arrays",sidebar_label:"2215. Find the Difference of Two Arrays",tags:["Leetcode Easy","Hash"]},i=void 0,c={unversionedId:"leetcode/2000/find_the_difference_of_two_arrays",id:"leetcode/2000/find_the_difference_of_two_arrays",title:"2215. Find the Difference of Two Arrays",description:"https://leetcode.com/problems/find-the-difference-of-two-arrays/",source:"@site/docs/leetcode/2000/2215_find_the_difference_of_two_arrays.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/find_the_difference_of_two_arrays",permalink:"/docs/leetcode/2000/find_the_difference_of_two_arrays",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/2000/2215_find_the_difference_of_two_arrays.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Hash",permalink:"/docs/tags/hash"}],version:"current",sidebarPosition:2215,frontMatter:{title:"2215. Find the Difference of Two Arrays",sidebar_label:"2215. Find the Difference of Two Arrays",tags:["Leetcode Easy","Hash"]},sidebar:"docSidebar",previous:{title:"2141. Maximum Running Time of N Computers",permalink:"/docs/leetcode/2000/max_running_time_of_n_computers"},next:{title:"2246. Longest Path With Different Adjacent Characters",permalink:"/docs/leetcode/2000/longest_path_with_different_adjacent_chars"}},s={},f=[{value:"Python",id:"python",level:2}],l={toc:f},d="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/find-the-difference-of-two-arrays/"},"https://leetcode.com/problems/find-the-difference-of-two-arrays/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def findDifference(self, nums1: List[int], nums2: List[int]) -> List[List[int]]:\n        return [\n            list(set(nums1)-set(nums2)),\n            list(set(nums2)-set(nums1))\n        ]\n")))}p.isMDXComponent=!0}}]);