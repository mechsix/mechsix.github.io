"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[44328],{31534:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=n(74848),o=n(28453);const r={title:"653. Two Sum IV - Input is a BST",sidebar_label:"653. Two Sum IV - Input is a BST",tags:["Leetcode Easy","Number Sum","DFS","BFS","BST"]},i=void 0,a={id:"leetcode/501-1000/two_sum_4_bst_input",title:"653. Two Sum IV - Input is a BST",description:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst/",source:"@site/docs/leetcode/501-1000/653_two_sum_4_bst_input.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/two_sum_4_bst_input",permalink:"/docs/leetcode/501-1000/two_sum_4_bst_input",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Number Sum",permalink:"/docs/tags/number-sum"},{label:"DFS",permalink:"/docs/tags/dfs"},{label:"BFS",permalink:"/docs/tags/bfs"},{label:"BST",permalink:"/docs/tags/bst"}],version:"current",sidebarPosition:653,frontMatter:{title:"653. Two Sum IV - Input is a BST",sidebar_label:"653. Two Sum IV - Input is a BST",tags:["Leetcode Easy","Number Sum","DFS","BFS","BST"]},sidebar:"docSidebar",previous:{title:"652. Find Duplicate Subtrees",permalink:"/docs/leetcode/501-1000/find_duplicate_subtrees"},next:{title:"654. Maximum Binary Tree",permalink:"/docs/leetcode/501-1000/max_binary_tree"}},l={},d=[{value:"Python",id:"python",level:2},{value:"DFS",id:"dfs",level:3}];function u(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst/",children:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst/"})}),"\n",(0,s.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(t.h3,{id:"dfs",children:"DFS"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Remember the path and do postorder traversal"}),"\n",(0,s.jsx)(t.li,{children:"Did NOT use the advantage from BST..."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def findTarget(self, root: Optional[TreeNode], k: int) -> bool:\n        def dfs(node, targets: set):\n            if not node:\n                return False\n            if node.val in targets:\n                return True\n\n            targets.add(k-node.val)\n\n            return dfs(node.left, targets) or dfs(node.right, targets)\n\n        return dfs(root, set())\n"})})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(96540);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);