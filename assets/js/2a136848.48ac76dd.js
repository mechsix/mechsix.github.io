"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[49114],{83997:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"leetcode/2000/optimal_partition_of_string","title":"2405. Optimal Partition of String","description":"Python","source":"@site/docs/leetcode/2000/2405_optimal_partition_of_string.md","sourceDirName":"leetcode/2000","slug":"/leetcode/2000/optimal_partition_of_string","permalink":"/docs/leetcode/2000/optimal_partition_of_string","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Hash","permalink":"/docs/tags/hash"},{"inline":true,"label":"Greedy","permalink":"/docs/tags/greedy"}],"version":"current","sidebarPosition":2405,"frontMatter":{"title":"2405. Optimal Partition of String","sidebar_label":"2405. Optimal Partition of String","tags":["Leetcode Medium","Hash","Greedy"]},"sidebar":"docSidebar","previous":{"title":"2348. Number of Zero-Filled Subarrays","permalink":"/docs/leetcode/2000/num_of_zero_filled_subarrays"},"next":{"title":"2439. Minimize Maximum of Array","permalink":"/docs/leetcode/2000/min_max_of_array"}}');var r=n(74848),o=n(28453);const a={title:"2405. Optimal Partition of String",sidebar_label:"2405. Optimal Partition of String",tags:["Leetcode Medium","Hash","Greedy"]},s=void 0,l={},c=[{value:"Python",id:"python",level:2},{value:"Greedy",id:"greedy",level:3}];function d(e){const t={code:"code",h2:"h2",h3:"h3",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(t.h3,{id:"greedy",children:"Greedy"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def partitionString(self, s: str) -> int:\n        if len(s) == 1:\n            return 1\n\n        partition = set()\n\n        counter = 1\n        for letter in s:\n            if letter in partition:\n                partition = set()\n                counter += 1\n            partition.add(letter)\n\n        return counter\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(96540);const r={},o=i.createContext(r);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);