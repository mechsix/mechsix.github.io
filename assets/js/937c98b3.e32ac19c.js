"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[54527],{66168:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>a,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(74848),s=t(28453);const o={title:"7. Reverse Integer",sidebar_label:"7. Reverse Integer",tags:["Leetcode Medium"]},i=void 0,l={id:"leetcode/1-500/reverse_int",title:"7. Reverse Integer",description:"https://leetcode.com/problems/reverse-integer/",source:"@site/docs/leetcode/1-500/7_reverse_int.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/reverse_int",permalink:"/docs/leetcode/1-500/reverse_int",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"}],version:"current",sidebarPosition:7,frontMatter:{title:"7. Reverse Integer",sidebar_label:"7. Reverse Integer",tags:["Leetcode Medium"]},sidebar:"docSidebar",previous:{title:"6. Zigzag Conversion",permalink:"/docs/leetcode/1-500/zigzag_conversion"},next:{title:"8. String to Integer (atoi)",permalink:"/docs/leetcode/1-500/atoi"}},u={},c=[{value:"Python",id:"python",level:2},{value:"Forces Bust",id:"forces-bust",level:3},{value:"Queue",id:"queue",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/reverse-integer/",children:"https://leetcode.com/problems/reverse-integer/"})}),"\n",(0,r.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.h3,{id:"forces-bust",children:"Forces Bust"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def reverse(self, x: int) -> int:\n        digits = str(x)[::-1]\n        \n        \n        if digits[-1] == '-':\n            result = -int(digits[:-1])\n        else:\n            result = int(digits)\n            \n        return result if result > 1-2**31 and result < 2**31-1 else 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"queue",children:"Queue"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from collections import deque\n\n\nclass Solution:\n    def reverse(self, x: int) -> int:\n        queue = deque()\n        \n        # Check is native or not\n        if x < 0:\n            is_native = True\n            x = abs(x)\n        else:\n            is_native = False\n        \n        # Push to queue\n        while x // 10 > 0:\n            queue.append(x % 10)\n            x //= 10\n        queue.append(x)\n        \n        # Pop from queue and accumulate to the reversed num\n        power = len(queue) - 1\n        result = 0\n        while queue:\n            result += queue.popleft() * (10 ** power)\n            power -= 1\n            \n        if is_native:\n            result = -result\n\n        return result if result > 1-2**31 and result < 2**31-1 else 0\n"})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var r=t(96540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);