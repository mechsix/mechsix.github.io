"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[4450],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),l=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),m=n,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return r?o.createElement(f,a(a({ref:t},p),{},{components:r})):o.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:n,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},74578:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=r(87462),n=(r(67294),r(3905));const i={title:"692. Top K Frequent Words",sidebar_label:"692. Top K Frequent Words",tags:["Leetcode Medium","Sort"]},a=void 0,c={unversionedId:"leetcode/501-1000/top_k_frequent_words",id:"leetcode/501-1000/top_k_frequent_words",title:"692. Top K Frequent Words",description:"https://leetcode.com/problems/top-k-frequent-words/",source:"@site/docs/leetcode/501-1000/692_top_k_frequent_words.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/top_k_frequent_words",permalink:"/docs/leetcode/501-1000/top_k_frequent_words",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/692_top_k_frequent_words.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Sort",permalink:"/docs/tags/sort"}],version:"current",sidebarPosition:692,frontMatter:{title:"692. Top K Frequent Words",sidebar_label:"692. Top K Frequent Words",tags:["Leetcode Medium","Sort"]},sidebar:"docSidebar",previous:{title:"688. Knight Probability in Chessboard",permalink:"/docs/leetcode/501-1000/knight_probability_in_chessboard"},next:{title:"695. Max Area of Island",permalink:"/docs/leetcode/501-1000/max_area_of_islands"}},s={},l=[{value:"Python",id:"python",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/top-k-frequent-words/"},"https://leetcode.com/problems/top-k-frequent-words/")),(0,n.kt)("h2",{id:"python"},"Python"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Time: O(N)"),(0,n.kt)("li",{parentName:"ul"},"Space: O(N)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from collections import Counter, defaultdict\n\n\nclass Solution:\n    def topKFrequent(self, words: List[str], k: int) -> List[str]:\n        counts = [(-item[1], item[0]) for item in Counter(words).items()]\n        counts.sort()\n        \n        return [item[1] for item in counts[:k]]\n")))}d.isMDXComponent=!0}}]);