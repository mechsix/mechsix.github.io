"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[53753],{39050:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=i(74848),n=i(28453);const s={title:"2966. Divide Array Into Arrays With Max Difference",sidebar_label:"2966. Divide Array Into Arrays With Max Difference",tags:["Leetcode Medium","Greedy"]},a=void 0,o={id:"leetcode/2000/divide_array_into_arrays_with_max_difference",title:"2966. Divide Array Into Arrays With Max Difference",description:"https://leetcode.com/problems/divide-array-into-arrays-with-max-difference",source:"@site/docs/leetcode/2000/2966_divide_array_into_arrays_with_max_difference.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/divide_array_into_arrays_with_max_difference",permalink:"/docs/leetcode/2000/divide_array_into_arrays_with_max_difference",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Greedy",permalink:"/docs/tags/greedy"}],version:"current",sidebarPosition:2966,frontMatter:{title:"2966. Divide Array Into Arrays With Max Difference",sidebar_label:"2966. Divide Array Into Arrays With Max Difference",tags:["Leetcode Medium","Greedy"]},sidebar:"docSidebar",previous:{title:"2694. Event Emitter",permalink:"/docs/leetcode/2000/event_emitter"},next:{title:"6204. Largest Positive Integer That Exists With Its Negative",permalink:"/docs/leetcode/2000/largest_positive_int_that_exists_with_its_negative"}},d={},c=[{value:"Python",id:"python",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://leetcode.com/problems/divide-array-into-arrays-with-max-difference",children:"https://leetcode.com/problems/divide-array-into-arrays-with-max-difference"})}),"\n",(0,r.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def divideArray(self, nums: List[int], k: int) -> List[List[int]]:\n        nums.sort()\n        result = []\n        for i in range(1, len(nums), 3):\n            if  nums[i]-nums[i-1] <= k \\\n            and nums[i+1]-nums[i] <= k \\\n            and nums[i+1]-nums[i-1] <= k:\n                result.append([nums[i-1], nums[i], nums[i+1]])\n            else:\n                return []\n\n        return result\n"})})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>o});var r=i(96540);const n={},s=r.createContext(n);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);