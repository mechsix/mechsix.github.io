"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[82348],{40576:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var i=t(74848),o=t(28453);const a={title:"131. Palindrome Partitioning",sidebar_label:"131. Palindrome Partitioning",tags:["Leetcode Medium","Backtracking"]},r=void 0,c={id:"leetcode/1-500/palindrome_partitioning",title:"131. Palindrome Partitioning",description:"https://leetcode.com/problems/palindrome-partitioning",source:"@site/docs/leetcode/1-500/131_palindrome_partitioning.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/palindrome_partitioning",permalink:"/docs/leetcode/1-500/palindrome_partitioning",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Backtracking",permalink:"/docs/tags/backtracking"}],version:"current",sidebarPosition:131,frontMatter:{title:"131. Palindrome Partitioning",sidebar_label:"131. Palindrome Partitioning",tags:["Leetcode Medium","Backtracking"]},sidebar:"docSidebar",previous:{title:"130. Surrounded Regions",permalink:"/docs/leetcode/1-500/surrounded_regions"},next:{title:"133. Clone Graph",permalink:"/docs/leetcode/1-500/clone_graph"}},s={},d=[{value:"Python",id:"python",level:2},{value:"Backtracking",id:"backtracking",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/palindrome-partitioning",children:"https://leetcode.com/problems/palindrome-partitioning"})}),"\n",(0,i.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h3,{id:"backtracking",children:"Backtracking"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        ans = []\n\n        def backtracking(start: int, stack: list):\n            if start == len(s):\n                nonlocal ans\n                ans.append(stack[:])\n                return\n\n            for end in range(start+1, len(s)+1):\n                cand = s[start:end]\n                if cand != cand[::-1]:\n                    continue\n                stack.append(cand)\n                backtracking(end, stack)\n                stack.pop()\n\n        backtracking(0, [])\n\n        return list(ans)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(96540);const o={},a=i.createContext(o);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);