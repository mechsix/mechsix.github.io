"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[54969],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),i=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(r),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var i=2;i<l;i++)a[i]=r[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6060:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>i});var n=r(87462),o=(r(67294),r(3905));const l={title:"2676. Throttle",sidebar_label:"2676. Throttle",tags:["Leetcode Medium","JS 30 Days Challenge"]},a=void 0,c={unversionedId:"leetcode/2000/throttle",id:"leetcode/2000/throttle",title:"2676. Throttle",description:"https://leetcode.com/problems/throttle/",source:"@site/docs/leetcode/2000/2676_throttle.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/throttle",permalink:"/docs/leetcode/2000/throttle",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/2000/2676_throttle.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"JS 30 Days Challenge",permalink:"/docs/tags/js-30-days-challenge"}],version:"current",sidebarPosition:2676,frontMatter:{title:"2676. Throttle",sidebar_label:"2676. Throttle",tags:["Leetcode Medium","JS 30 Days Challenge"]},sidebar:"docSidebar",previous:{title:"2675. Array of Objects to Matrix",permalink:"/docs/leetcode/2000/array_of_objects_to_matrix"},next:{title:"2677. Chunk Array",permalink:"/docs/leetcode/2000/chunk_array"}},s={},i=[{value:"Javascript",id:"javascript",level:2},{value:"Typescript",id:"typescript",level:2}],u={toc:i},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/throttle/"},"https://leetcode.com/problems/throttle/")),(0,o.kt)("h2",{id:"javascript"},"Javascript"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'var throttle = function(fn, t) {\n    let lastArgs = null\n    let isBlocked = false\n\n    const executor = () => {\n        if (lastArgs === null) {\n            isBlocked = false\n            return\n        }\n\n        fn(...lastArgs)\n        lastArgs = null\n        setTimeout(executor, t)\n    }\n\n    return function(...args) {\n        if (isBlocked) {\n            lastArgs = args\n            return\n        }\n\n        fn(...args)\n        isBlocked = true\n        setTimeout(executor, t)\n    }\n};\n\n/**\n * const throttled = throttle(console.log, 100);\n * throttled("log"); // logged immediately.\n * throttled("log"); // logged at t=100ms.\n */\n')),(0,o.kt)("h2",{id:"typescript"},"Typescript"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type F = (...args: any[]) => void\n\nfunction throttle(fn: F, t: number): F {\n    let lastArgs: any | null = null\n    let isBlocked: Boolean = false\n\n    const executor = () => {\n        if (lastArgs === null) {\n            isBlocked = false \n            return\n        }\n\n        fn(...lastArgs)\n        lastArgs = null\n        setTimeout(executor, t)\n    }\n    \n    return function (...args) {\n        if (isBlocked) {\n            lastArgs = args\n            return\n        }\n\n        fn(...args)\n        isBlocked = true\n        setTimeout(executor, t)\n    }\n};\n\n")))}d.isMDXComponent=!0}}]);