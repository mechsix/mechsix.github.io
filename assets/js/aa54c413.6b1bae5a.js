"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[6162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},78700:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const s={title:"1667. Fix Names in a Table",sidebar_label:"1667. Fix Names in a Table",tags:["Leetcode Easy","Pandas","SQL"]},i=void 0,o={unversionedId:"leetcode/1501-2000/fix_names_in_a_table",id:"leetcode/1501-2000/fix_names_in_a_table",title:"1667. Fix Names in a Table",description:"Pandas",source:"@site/docs/leetcode/1501-2000/1667_fix_names_in_a_table.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/fix_names_in_a_table",permalink:"/docs/leetcode/1501-2000/fix_names_in_a_table",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1501-2000/1667_fix_names_in_a_table.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Pandas",permalink:"/docs/tags/pandas"},{label:"SQL",permalink:"/docs/tags/sql"}],version:"current",sidebarPosition:1667,frontMatter:{title:"1667. Fix Names in a Table",sidebar_label:"1667. Fix Names in a Table",tags:["Leetcode Easy","Pandas","SQL"]},sidebar:"docSidebar",previous:{title:"1662. Check If Two String Arrays are Equivalent",permalink:"/docs/leetcode/1501-2000/check_if_two_string_arrays_are_equivalent"},next:{title:"1672. Richest Customer Wealth",permalink:"/docs/leetcode/1501-2000/richest_customer_wealth"}},l={},c=[{value:"Pandas",id:"pandas",level:2},{value:"SQL",id:"sql",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"pandas"},"Pandas"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import pandas as pd\n\n\ndef fix_names(users: pd.DataFrame) -> pd.DataFrame:\n    # Use title wont enough, it transfer \"meCH tSai\" to \"Mech Tsai\"\n    # But the problem wants only the first char be upper, to \"Mech tsai\"\n    # users['name'] = users['name'].str.title()\n\n    users['name'] = users['name'].str.capitalize()\n\n    return users.sort_values(by='user_id')\n")),(0,a.kt)("h2",{id:"sql"},"SQL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    user_id,\n    CONCAT (\n        upper(substring(name,1,1)),\n        lower(right(name,length(name)-1))\n    ) AS name\nFROM Users\nORDER BY user_id ASC\n")))}d.isMDXComponent=!0}}]);