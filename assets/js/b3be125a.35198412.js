"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[7915],{3905:function(e,n,t){t.d(n,{Zo:function(){return a},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},a=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,a=u(e,["components","mdxType","originalType","parentName"]),d=l(t),m=o,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||c;return t?r.createElement(f,i(i({ref:n},a),{},{components:t})):r.createElement(f,i({ref:n},a))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,i=new Array(c);i[0]=d;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var l=2;l<c;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},20289:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return a}});var r=t(87462),o=t(63366),c=(t(67294),t(3905)),i=["components"],u={title:"128. Longest Consecutive Sequence",sidebar_label:"128. Longest Consecutive Sequence",tags:["Leetcode Medium"]},s=void 0,l={unversionedId:"leetcode/1-500/longest_consecutive_sequence",id:"leetcode/1-500/longest_consecutive_sequence",title:"128. Longest Consecutive Sequence",description:"https://leetcode.com/problems/longest-consecutive-sequence/",source:"@site/docs/leetcode/1-500/128_longest_consecutive_sequence.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/longest_consecutive_sequence",permalink:"/docs/leetcode/1-500/longest_consecutive_sequence",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/128_longest_consecutive_sequence.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"}],version:"current",sidebarPosition:128,frontMatter:{title:"128. Longest Consecutive Sequence",sidebar_label:"128. Longest Consecutive Sequence",tags:["Leetcode Medium"]},sidebar:"docSidebar",previous:{title:"127. Word Ladder",permalink:"/docs/leetcode/1-500/word_ladder"},next:{title:"130. Surrounded Regions",permalink:"/docs/leetcode/1-500/surrounded_regions"}},a=[{value:"Python",id:"python",children:[],level:2}],p={toc:a};function d(e){var n=e.components,t=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/longest-consecutive-sequence/"},"https://leetcode.com/problems/longest-consecutive-sequence/")),(0,c.kt)("h2",{id:"python"},"Python"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"\nclass Solution:\n    def longestConsecutive(self, nums: List[int]) -> int:\n        ans = 0\n        mapper = set(nums)\n        \n        for num in nums:\n            if num-1 in mapper:\n                continue\n            \n            current = num\n            length = 1\n            while current+1 in mapper:\n                current += 1\n                length += 1\n            ans = max(ans, length)\n\n        return ans\n")))}d.isMDXComponent=!0}}]);