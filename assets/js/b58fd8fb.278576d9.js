"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[1602],{46938:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"leetcode/501-1000/find_k_closest_elements","title":"658. Find K Closest Elements","description":"https://leetcode.com/problems/find-k-closest-elements/","source":"@site/docs/leetcode/501-1000/658_find_k_closest_elements.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/find_k_closest_elements","permalink":"/docs/leetcode/501-1000/find_k_closest_elements","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Sort","permalink":"/docs/tags/sort"},{"inline":true,"label":"Binary Search","permalink":"/docs/tags/binary-search"}],"version":"current","sidebarPosition":658,"frontMatter":{"title":"658. Find K Closest Elements","sidebar_label":"658. Find K Closest Elements","tags":["Leetcode Medium","Sort","Binary Search"]},"sidebar":"docSidebar","previous":{"title":"654. Maximum Binary Tree","permalink":"/docs/leetcode/501-1000/max_binary_tree"},"next":{"title":"659. Split Array into Consecutive Subsequences","permalink":"/docs/leetcode/501-1000/split_array_into_consecutive_subsequences"}}');var i=n(74848),r=n(28453);const l={title:"658. Find K Closest Elements",sidebar_label:"658. Find K Closest Elements",tags:["Leetcode Medium","Sort","Binary Search"]},o=void 0,c={},a=[{value:"Python",id:"python",level:2},{value:"Custom Sort",id:"custom-sort",level:3},{value:"Binary Search",id:"binary-search",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/find-k-closest-elements/",children:"https://leetcode.com/problems/find-k-closest-elements/"})}),"\n",(0,i.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(t.h3,{id:"custom-sort",children:"Custom Sort"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\u5229\u7528",(0,i.jsx)(t.code,{children:"abs(x-num)"}),"\u6703\u627e\u51fa\u8207x\u7684\u8ddd\u96e2\u7684\u7279\u6027"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def findClosestElements(self, arr: List[int], k: int, x: int) -> List[int]:\n        nums = sorted(arr, key=lambda num: abs(x-num))\n        return sorted(nums[:k]) # Sort it back to ascending order\n"})}),"\n",(0,i.jsx)(t.h3,{id:"binary-search",children:"Binary Search"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"\u5b98\u65b9solution\uff0c\u5f88\u6709\u8da3\u7684\u505a\u6cd5"}),"\n",(0,i.jsx)(t.li,{children:"\u6539\u8b8aBinary search\u7684\u53f3\u754c\uff0c\u85c9\u4ee5\u9650\u5236\u5176\u627e\u51fa\u4f86\u7684\u5de6\u754c\u4e0d\u6703\u9020\u6210\u53f3\u754c\u51f8\u51fa\u53bb"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def findClosestElements(self, arr: List[int], k: int, x: int) -> List[int]:\n        left, right = 0, len(arr)-k\n\n        while left < right:\n            pivot = (left+right) >> 1\n            if x-arr[pivot] > arr[pivot+k]-x:\n                left = pivot + 1\n            else:\n                right = pivot\n\n        return arr[left:left+k]\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var s=n(96540);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);