"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[31337],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return m}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),d=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=d(e.components);return n.createElement(l.Provider,{value:r},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=d(t),p=o,m=s["".concat(l,".").concat(p)]||s[p]||f[p]||a;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[s]="string"==typeof e?e:o,i[1]=c;for(var d=2;d<a;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},72131:function(e,r,t){t.r(r),t.d(r,{assets:function(){return l},contentTitle:function(){return i},default:function(){return s},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return d}});var n=t(83117),o=(t(67294),t(3905));const a={title:"989. Add to Array-Form of Integer",sidebar_label:"989. Add to Array-Form of Integer",tags:["Leetcode Easy","Array"]},i=void 0,c={unversionedId:"leetcode/501-1000/add_to_array_form_of_integer",id:"leetcode/501-1000/add_to_array_form_of_integer",title:"989. Add to Array-Form of Integer",description:"https://leetcode.com/problems/add-to-array-form-of-integer/",source:"@site/docs/leetcode/501-1000/989_add_to_array_form_of_integer.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/add_to_array_form_of_integer",permalink:"/docs/leetcode/501-1000/add_to_array_form_of_integer",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/989_add_to_array_form_of_integer.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Array",permalink:"/docs/tags/array"}],version:"current",sidebarPosition:989,frontMatter:{title:"989. Add to Array-Form of Integer",sidebar_label:"989. Add to Array-Form of Integer",tags:["Leetcode Easy","Array"]},sidebar:"docSidebar",previous:{title:"987. Vertical Order Traversal of a Binary Tree",permalink:"/docs/leetcode/501-1000/vertical_order_traversal_of_a_binary_tree"},next:{title:"997. Find the Town Judge",permalink:"/docs/leetcode/501-1000/find_the_town_judge"}},l={},d=[{value:"Python",id:"python",level:2}],u={toc:d};function s(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/add-to-array-form-of-integer/"},"https://leetcode.com/problems/add-to-array-form-of-integer/")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        pow = 0\n        while num:\n            k += num.pop() * (10**pow)\n            pow += 1\n\n        return [int(char) for char in str(k)]\n")))}s.isMDXComponent=!0}}]);