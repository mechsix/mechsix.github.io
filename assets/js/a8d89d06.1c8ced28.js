"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[45554],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),c=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(a.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,p=u["".concat(a,".").concat(m)]||u[m]||f[m]||i;return t?r.createElement(p,s(s({ref:n},d),{},{components:t})):r.createElement(p,s({ref:n},d))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=m;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l[u]="string"==typeof e?e:o,s[1]=l;for(var c=2;c<i;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},63865:function(e,n,t){t.r(n),t.d(n,{assets:function(){return a},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c}});var r=t(83117),o=(t(67294),t(3905));const i={title:"1254. Number of Closed Islands",sidebar_label:"1254. Number of Closed Islands",tags:["Leetcode Medium","DFS"]},s=void 0,l={unversionedId:"leetcode/1001-1500/number_of_closed_islands",id:"leetcode/1001-1500/number_of_closed_islands",title:"1254. Number of Closed Islands",description:"https://leetcode.com/problems/number-of-closed-islands",source:"@site/docs/leetcode/1001-1500/1254_number_of_closed_islands.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/number_of_closed_islands",permalink:"/docs/leetcode/1001-1500/number_of_closed_islands",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1001-1500/1254_number_of_closed_islands.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"DFS",permalink:"/docs/tags/dfs"}],version:"current",sidebarPosition:1254,frontMatter:{title:"1254. Number of Closed Islands",sidebar_label:"1254. Number of Closed Islands",tags:["Leetcode Medium","DFS"]},sidebar:"docSidebar",previous:{title:"1249. Minimum Remove to Make Valid Parentheses",permalink:"/docs/leetcode/1001-1500/min_remove_to_make_valid_parentheses"},next:{title:"1260. Shift 2D Grid",permalink:"/docs/leetcode/1001-1500/shift_2d_grid"}},a={},c=[{value:"Python",id:"python",level:2},{value:"DFS",id:"dfs",level:3}],d={toc:c};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/number-of-closed-islands"},"https://leetcode.com/problems/number-of-closed-islands")),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("h3",{id:"dfs"},"DFS"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def closedIsland(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n\n        # 0: Not visited island block\n        # 1: Water\n        # 2: Visited island block\n        def dfs(i: int, j: int) -> bool:\n            if i < 0 or j < 0 or i >= m or j >= n:\n                return True\n\n            if grid[i][j] > 0:\n                return False\n\n            grid[i][j] = 2\n\n            return any([\n                dfs(i+rx, j+cx)\n                for rx, cx\n                in [(-1, 0), (1, 0), (0, -1), (0, 1)]\n            ])\n\n        ans = 0\n        for i in range(m):\n            for j in range(n):\n                if grid[i][j] == 0 and not dfs(i, j):\n                    ans += 1\n\n        return ans\n")))}u.isMDXComponent=!0}}]);