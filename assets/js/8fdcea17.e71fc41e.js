"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[27712],{95752:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"leetcode/1-500/word_ladder_ii","title":"126. Word Ladder II","description":"https://leetcode.com/problems/word-ladder-ii/","source":"@site/docs/leetcode/1-500/126_word_ladder_ii.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/word_ladder_ii","permalink":"/docs/leetcode/1-500/word_ladder_ii","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Hard","permalink":"/docs/tags/leetcode-hard"},{"inline":true,"label":"Backtracking","permalink":"/docs/tags/backtracking"}],"version":"current","sidebarPosition":126,"frontMatter":{"title":"126. Word Ladder II","sidebar_label":"126. Word Ladder II","tags":["Leetcode Hard","Backtracking"]},"sidebar":"docSidebar","previous":{"title":"125. Valid Palindrome","permalink":"/docs/leetcode/1-500/valid_palindrome"},"next":{"title":"127. Word Ladder","permalink":"/docs/leetcode/1-500/word_ladder"}}');var d=t(74848),i=t(28453);const o={title:"126. Word Ladder II",sidebar_label:"126. Word Ladder II",tags:["Leetcode Hard","Backtracking"]},a=void 0,c={},s=[{value:"Python",id:"python",level:2},{value:"Backtracking (Timelimit Exceed)",id:"backtracking-timelimit-exceed",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://leetcode.com/problems/word-ladder-ii/",children:"https://leetcode.com/problems/word-ladder-ii/"})}),"\n",(0,d.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,d.jsx)(n.h3,{id:"backtracking-timelimit-exceed",children:"Backtracking (Timelimit Exceed)"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"\u984c\u76ee\u53ea\u60f3\u8981\u6c42shortest transformation sequences\uff0c\u4f46\u9019\u500bbacktrack\u6703\u627e\u51fa\u6240\u6709\u53ef\u80fd\u7684\u8def\u5f91"}),"\n",(0,d.jsx)(n.li,{children:"\u81ea\u5df1\u5beb\u7684\u7559\u500b\u7d00\u9304"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"from collections import defaultdict\nfrom string import ascii_lowercase\n\n\nclass Solution:\n    def findLadders(self, beginWord: str, endWord: str, wordList: List[str]) -> List[List[str]]:\n        if endWord not in wordList:\n            return []\n\n        word_set = set(wordList)\n\n        mapper = defaultdict(set)\n        for word in word_set | set([beginWord]):\n            for i in range(len(word)):\n                for char in ascii_lowercase:\n                    new_word = word[:i] + char + word[i+1:]\n                    if char != word[i] and new_word in word_set:\n                        mapper[word].add(new_word)\n\n        def backtrack(path, result):\n            last = path[-1]\n\n            if last == endWord:\n                result.append(path[:])\n                return\n\n            for word in mapper[last]:\n                if word in path:\n                    continue\n                path.append(word)\n                backtrack(path, result)\n                path.pop()\n\n        candidates = []\n        backtrack([beginWord], candidates)\n\n        if not candidates:\n            return []\n\n        result = dict()\n        for cand in candidates:\n            if len(cand) not in result:\n                result[len(cand)] = []\n            result[len(cand)].append(cand)\n\n        return result[min(result.keys())]\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const d={},i=r.createContext(d);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);