"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[93746],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),s=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(r),p=n,f=d["".concat(l,".").concat(p)]||d[p]||m[p]||a;return r?o.createElement(f,i(i({ref:t},u),{},{components:r})):o.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:n,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}p.displayName="MDXCreateElement"},56905:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var o=r(87462),n=(r(67294),r(3905));const a={title:"80. Remove Duplicates from Sorted Array II",sidebar_label:"80. Remove Duplicates from Sorted Array II",tags:["Leetcode Medium","In Place","Two Pointer"]},i=void 0,c={unversionedId:"leetcode/1-500/remove_duplicates_from_sorted_array_ii",id:"leetcode/1-500/remove_duplicates_from_sorted_array_ii",title:"80. Remove Duplicates from Sorted Array II",description:"https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/",source:"@site/docs/leetcode/1-500/80_remove_duplicates_from_sorted_array_ii.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/remove_duplicates_from_sorted_array_ii",permalink:"/docs/leetcode/1-500/remove_duplicates_from_sorted_array_ii",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/80_remove_duplicates_from_sorted_array_ii.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"In Place",permalink:"/docs/tags/in-place"},{label:"Two Pointer",permalink:"/docs/tags/two-pointer"}],version:"current",sidebarPosition:80,frontMatter:{title:"80. Remove Duplicates from Sorted Array II",sidebar_label:"80. Remove Duplicates from Sorted Array II",tags:["Leetcode Medium","In Place","Two Pointer"]},sidebar:"docSidebar",previous:{title:"79. Word Search",permalink:"/docs/leetcode/1-500/word_search"},next:{title:"82. Remove Duplicates from Sorted List II",permalink:"/docs/leetcode/1-500/remove_duplicates_from_sorted_list_ii"}},l={},s=[{value:"Python",id:"python",level:2}],u={toc:s},d="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/"},"https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/")),(0,n.kt)("h2",{id:"python"},"Python"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Time: O(n)"),(0,n.kt)("li",{parentName:"ul"},"Space: O(logn)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from collections import defaultdict\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        cur, end = 0, len(nums)-1\n\n        counter = defaultdict(int)\n\n        while cur <= end:\n            num = nums[cur]\n            counter[num] += 1\n\n            if counter[num] > 2:\n                nums.pop(cur)\n                end -= 1\n                continue\n            cur += 1\n\n        return end+1\n")))}m.isMDXComponent=!0}}]);