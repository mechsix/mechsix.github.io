"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[99938],{51284:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(74848),i=n(28453);const r={title:"1751. Maximum Number of Events That Can Be Attended II",sidebar_label:"1751. Maximum Number of Events That Can Be Attended II",tags:["Leetcode Hard","DP","Binary Search"]},o=void 0,s={id:"leetcode/1501-2000/max_number_of_events_that_can_be_attended_ii",title:"1751. Maximum Number of Events That Can Be Attended II",description:"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii/",source:"@site/docs/leetcode/1501-2000/1751_max_number_of_events_that_can_be_attended_ii.md",sourceDirName:"leetcode/1501-2000",slug:"/leetcode/1501-2000/max_number_of_events_that_can_be_attended_ii",permalink:"/docs/leetcode/1501-2000/max_number_of_events_that_can_be_attended_ii",draft:!1,unlisted:!1,tags:[{label:"Leetcode Hard",permalink:"/docs/tags/leetcode-hard"},{label:"DP",permalink:"/docs/tags/dp"},{label:"Binary Search",permalink:"/docs/tags/binary-search"}],version:"current",sidebarPosition:1751,frontMatter:{title:"1751. Maximum Number of Events That Can Be Attended II",sidebar_label:"1751. Maximum Number of Events That Can Be Attended II",tags:["Leetcode Hard","DP","Binary Search"]},sidebar:"docSidebar",previous:{title:"1732. Find the Highest Altitude",permalink:"/docs/leetcode/1501-2000/find_highest_altitude"},next:{title:"1757. Recyclable and Low Fat Products",permalink:"/docs/leetcode/1501-2000/recyclable_and_low_fat_products"}},c={},d=[{value:"Python",id:"python",level:2},{value:"DP with Binary Search",id:"dp-with-binary-search",level:3}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii/",children:"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii/"})}),"\n",(0,a.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,a.jsx)(t.h3,{id:"dp-with-binary-search",children:"DP with Binary Search"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"from functools import cache\nfrom math import inf\nfrom bisect import bisect_right\n\n\nclass Solution:\n    def maxValue(self, events: List[List[int]], k: int) -> int:\n        n = len(events)\n        events.sort(key=lambda event: (event[0], event[1], event[2]))\n\n        @cache\n        def dp(i, remain):\n            if not remain or i >= n:\n                return 0\n            \n            right, value = events[i][1], events[i][2]\n            j = bisect_right(events, [right, inf, inf])\n            \n            return max(\n                dp(i+1, remain),\n                dp(j, remain-1) + value\n            )\n\n        return dp(0, k)\n"})})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var a=n(96540);const i={},r=a.createContext(i);function o(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);