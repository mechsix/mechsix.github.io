"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[53141],{74416:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"leetcode/1-500/sort_colors","title":"75. Sort Colors","description":"https://leetcode.com/problems/sort-colors/","source":"@site/docs/leetcode/1-500/75_sort_colors.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/sort_colors","permalink":"/docs/leetcode/1-500/sort_colors","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"},{"inline":true,"label":"Sort","permalink":"/docs/tags/sort"},{"inline":true,"label":"Two Pointer","permalink":"/docs/tags/two-pointer"}],"version":"current","sidebarPosition":75,"frontMatter":{"title":"75. Sort Colors","sidebar_label":"75. Sort Colors","tags":["Leetcode Easy","Sort","Two Pointer"]},"sidebar":"docSidebar","previous":{"title":"74. Search a 2D Matrix","permalink":"/docs/leetcode/1-500/search_2d_matrix"},"next":{"title":"77. Combinations","permalink":"/docs/leetcode/1-500/combinations"}}');var s=o(74848),r=o(28453);const l={title:"75. Sort Colors",sidebar_label:"75. Sort Colors",tags:["Leetcode Easy","Sort","Two Pointer"]},i=void 0,c={},a=[{value:"Python",id:"python",level:2},{value:"Bubble Sort",id:"bubble-sort",level:3},{value:"Two Pointer",id:"two-pointer",level:3}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/sort-colors/",children:"https://leetcode.com/problems/sort-colors/"})}),"\n",(0,s.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(n.h3,{id:"bubble-sort",children:"Bubble Sort"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Time: O(N^2)"}),"\n",(0,s.jsx)(n.li,{children:"Space: O(1)"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def sortColors(self, nums: List[int]) -> None:\n        for i in range(len(nums)):\n            for j in range(len(nums)):\n                if nums[i] < nums[j]:\n                    nums[i], nums[j] = nums[j], nums[i]                    \n"})}),"\n",(0,s.jsx)(n.h3,{id:"two-pointer",children:"Two Pointer"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Time: O(N)"}),"\n",(0,s.jsx)(n.li,{children:"Space: O(1)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Since the only possible value in nums are 0, 1, 2\nExhaustive the values with one-pass loop"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def sortColors(self, nums: List[int]) -> None:\n        p0, p1, p2 = 0, 0, len(nums)-1\n        \n        while p1 <= p2:\n            # print(p0, p1, p2, nums)\n            if nums[p1] == 0:\n                nums[p0], nums[p1] = nums[p1], nums[p0]\n                p0 += 1\n                p1 += 1  # Prevnt infinity loop\n                continue\n            \n            if nums[p1] == 2:\n                nums[p1], nums[p2] = nums[p2], nums[p1]\n                p2 -= 1\n                continue\n\n            # nums[p1] == 1\n            p1 += 1\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>i});var t=o(96540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);