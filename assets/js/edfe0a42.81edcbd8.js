"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[33524],{3367:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"leetcode/1-500/delete_bst_node","title":"450. Delete Node in a BST","description":"https://leetcode.com/problems/delete-node-in-a-bst","source":"@site/docs/leetcode/1-500/450_delete_bst_node.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/delete_bst_node","permalink":"/docs/leetcode/1-500/delete_bst_node","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"BST","permalink":"/docs/tags/bst"}],"version":"current","sidebarPosition":450,"frontMatter":{"title":"450. Delete Node in a BST","sidebar_label":"450. Delete Node in a BST","tags":["Leetcode Medium","BST"]},"sidebar":"docSidebar","previous":{"title":"448. Find All Numbers Disappeared in an Array","permalink":"/docs/leetcode/1-500/find_all_nums_disappeared_in_array"},"next":{"title":"451. Sort Characters By Frequency","permalink":"/docs/leetcode/1-500/sort_char_by_frequency"}}');var r=n(74848),l=n(28453);const i={title:"450. Delete Node in a BST",sidebar_label:"450. Delete Node in a BST",tags:["Leetcode Medium","BST"]},d=void 0,s={},a=[{value:"Python",id:"python",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://leetcode.com/problems/delete-node-in-a-bst",children:"https://leetcode.com/problems/delete-node-in-a-bst"})}),"\n",(0,r.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(t.p,{children:"Steps"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Find the target node"}),"\n",(0,r.jsx)(t.li,{children:"If target node at leaf, delete it"}),"\n",(0,r.jsx)(t.li,{children:"If target node has children, replace it with the Max(left) or Min(right)"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:'title="Replace with Min Right"',children:"class Solution:\n    def deleteNode(self, root: Optional[TreeNode], key: int) -> Optional[TreeNode]:\n        if not root:\n            return\n\n        if root.val == key:\n            if not root.left:\n                return root.right\n            if not root.right:\n                return root.left\n\n            min_node = self.find_min(root.right)\n            root.right = self.deleteNode(root.right, min_node.val)\n\n            min_node.left = root.left\n            min_node.right = root.right\n\n            root = min_node\n\n        elif root.val > key:\n            root.left = self.deleteNode(root.left, key)\n\n        elif root.val < key:\n            root.right = self.deleteNode(root.right, key)\n\n        return root\n\n\n    def find_min(self, node):\n        if not node:\n            return\n        cur = node\n        while cur.left:\n            cur = cur.left\n        return cur\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:'title="Replace with Max Left"',children:"class Solution:\n    def deleteNode(self, root: Optional[TreeNode], key: int) -> Optional[TreeNode]:\n        if not root:\n            return\n\n        if root.val == key:\n            if not root.left:\n                return root.right\n            if not root.right:\n                return root.left\n\n            max_node = self.find_max(root.left)\n            root.left = self.deleteNode(root.left, max_node.val)\n\n            max_node.left = root.left\n            max_node.right = root.right\n\n            root = max_node\n\n        elif root.val > key:\n            root.left = self.deleteNode(root.left, key)\n\n        elif root.val < key:\n            root.right = self.deleteNode(root.right, key)\n\n        return root\n\n    def find_max(self, node):\n        if not node:\n            return\n        cur = node\n        while cur.right:\n            cur = cur.right\n\n        return cur\n"})})]})}function f(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var o=n(96540);const r={},l=o.createContext(r);function i(e){const t=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(l.Provider,{value:t},e.children)}}}]);