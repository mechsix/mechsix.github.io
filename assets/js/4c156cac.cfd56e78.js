"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[54991],{56733:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>m,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"leetcode/1-500/median_two_sorted_array","title":"4. Median of Two Sorted Arrays","description":"https://leetcode.com/problems/median-of-two-sorted-arrays/","source":"@site/docs/leetcode/1-500/4_median_two_sorted_array.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/median_two_sorted_array","permalink":"/docs/leetcode/1-500/median_two_sorted_array","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Hard","permalink":"/docs/tags/leetcode-hard"}],"version":"current","sidebarPosition":4,"frontMatter":{"title":"4. Median of Two Sorted Arrays","sidebar_label":"4. Median of Two Sorted Arrays","tags":["Leetcode Hard"]},"sidebar":"docSidebar","previous":{"title":"3. Longest Substring Without Repeating Characters","permalink":"/docs/leetcode/1-500/longest_no_repeat_substring"},"next":{"title":"5. Longest Palindromic Substring","permalink":"/docs/leetcode/1-500/longest_palindromic_substring"}}');var o=t(74848),s=t(28453);const d={title:"4. Median of Two Sorted Arrays",sidebar_label:"4. Median of Two Sorted Arrays",tags:["Leetcode Hard"]},i=void 0,a={},l=[{value:"Python",id:"python",level:2},{value:"Merge and Sort",id:"merge-and-sort",level:3},{value:"Use the sorted advantage",id:"use-the-sorted-advantage",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/median-of-two-sorted-arrays/",children:"https://leetcode.com/problems/median-of-two-sorted-arrays/"})}),"\n",(0,o.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(n.h3,{id:"merge-and-sort",children:"Merge and Sort"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Time: O((M+N)log(M+N))  # For the sorting"}),"\n",(0,o.jsx)(n.li,{children:"Space: O(M+N)"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n        merged = sorted(nums1 + nums2)\n\n        mid = len(merged) >> 1\n        if len(merged) % 2 == 1:\n            return merged[mid]\n        else:\n            return (merged[mid] + merged[mid-1]) / 2\n"})}),"\n",(0,o.jsx)(n.h3,{id:"use-the-sorted-advantage",children:"Use the sorted advantage"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Time: O(M+N)"}),"\n",(0,o.jsx)(n.li,{children:"Space: O(M+N)"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from collections import deque\n\nclass Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n        merged = deque()\n\n        # Merge and keep it sorted\n        while nums1 or nums2:\n            if not nums1:\n                merged.appendleft(nums2.pop())\n            elif not nums2:\n                merged.appendleft(nums1.pop())\n            else:\n                if nums1[-1] > nums2[-1]:\n                    merged.appendleft(nums1.pop())\n                else:\n                    merged.appendleft(nums2.pop())\n\n        mid = len(merged) >> 1\n        if len(merged) % 2 == 1:\n            return merged[mid]\n        else:\n            return (merged[mid] + merged[mid-1]) / 2\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var r=t(96540);const o={},s=r.createContext(o);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);