"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[59135],{39982:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"leetcode/1001-1500/smallest_string_with_swaps","title":"1202. Smallest String With Swaps","description":"https://leetcode.com/problems/smallest-string-with-swaps/","source":"@site/docs/leetcode/1001-1500/1202_smallest_string_with_swaps.md","sourceDirName":"leetcode/1001-1500","slug":"/leetcode/1001-1500/smallest_string_with_swaps","permalink":"/docs/leetcode/1001-1500/smallest_string_with_swaps","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Graph","permalink":"/docs/tags/graph"},{"inline":true,"label":"DFS","permalink":"/docs/tags/dfs"}],"version":"current","sidebarPosition":1202,"frontMatter":{"title":"1202. Smallest String With Swaps","sidebar_label":"1202. Smallest String With Swaps","tags":["Leetcode Medium","Graph","DFS"]},"sidebar":"docSidebar","previous":{"title":"1200. Mini Abs Difference","permalink":"/docs/leetcode/1001-1500/min_abs_difference"},"next":{"title":"1209. Remove All Adjacent Duplicates in String II","permalink":"/docs/leetcode/1001-1500/remove_all_adjacent_duplicates_in_string_ii"}}');var i=n(74848),o=n(28453);const l={title:"1202. Smallest String With Swaps",sidebar_label:"1202. Smallest String With Swaps",tags:["Leetcode Medium","Graph","DFS"]},a=void 0,r={},d=[{value:"Python",id:"python",level:2},{value:"DFS",id:"dfs",level:3}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/smallest-string-with-swaps/",children:"https://leetcode.com/problems/smallest-string-with-swaps/"})}),"\n",(0,i.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(t.h3,{id:"dfs",children:"DFS"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"from collections import defaultdict\n\n\nclass Solution:\n    def smallestStringWithSwaps(self, s: str, pairs: List[List[int]]) -> str:\n        chars = list(s)\n        visited = set()\n\n        edges = defaultdict(list)\n        for source, dist in pairs:\n            edges[source].append(dist)\n            edges[dist].append(source)\n\n        def dfs(node, result):\n            if node not in edges:\n                return\n\n            result.append(node)\n\n            dests = edges.pop(node)  # while loop end point\n            for dest in dests:\n                dfs(dest, result)\n\n        while edges:\n            node = next(iter(edges))  # Start from whatever node of edges\n\n            # 1. Find all connected nodes which is on of the sub-graph\n            connected_nodes = []\n            dfs(node, connected_nodes)\n\n            # 2. Get the origin values of all the nodes in sub-graph\n            swapped_values = [s[i] for i in connected_nodes]\n\n            # 3. Sort both of them, then the data in these lists will be the\n            #    mini swapped values of the sub-graph\n            connected_nodes.sort()\n            swapped_values.sort()\n\n            # 4. Update the value of sub-graph in place\n            for i, new_value in enumerate(swapped_values):\n                target_index = connected_nodes[i]\n                chars[target_index] = new_value\n\n        return ''.join(chars)\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var s=n(96540);const i={},o=s.createContext(i);function l(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);