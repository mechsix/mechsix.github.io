"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[89481],{20956:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"leetcode/501-1000/min_cost_climbing_stairs","title":"746. Min Cost Climbing Stairs","description":"https://leetcode.com/problems/min-cost-climbing-stairs/","source":"@site/docs/leetcode/501-1000/746_min_cost_climbing_stairs.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/min_cost_climbing_stairs","permalink":"/docs/leetcode/501-1000/min_cost_climbing_stairs","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"},{"inline":true,"label":"DP","permalink":"/docs/tags/dp"}],"version":"current","sidebarPosition":746,"frontMatter":{"title":"746. Min Cost Climbing Stairs","sidebar_label":"746. Min Cost Climbing Stairs","tags":["Leetcode Easy","DP"]},"sidebar":"docSidebar","previous":{"title":"745. Prefix and Suffix Search","permalink":"/docs/leetcode/501-1000/prefix_and_suffix_search"},"next":{"title":"763. Partition Labels","permalink":"/docs/leetcode/501-1000/partition_labels"}}');var s=n(74848),o=n(28453);const c={title:"746. Min Cost Climbing Stairs",sidebar_label:"746. Min Cost Climbing Stairs",tags:["Leetcode Easy","DP"]},r=void 0,l={},a=[{value:"Python",id:"python",level:2},{value:"Bottom-up DP",id:"bottom-up-dp",level:3},{value:"Top-down DP",id:"top-down-dp",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://leetcode.com/problems/min-cost-climbing-stairs/",children:"https://leetcode.com/problems/min-cost-climbing-stairs/"})}),"\n",(0,s.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(t.h3,{id:"bottom-up-dp",children:"Bottom-up DP"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        if len(cost) < 3:\n            return min(cost)\n\n        dp = [0] * (len(cost)+1)\n\n        for i in range(2, len(cost)+1):\n            take_one = dp[i-1] + cost[i-1]\n            take_two = dp[i-2] + cost[i-2]\n            dp[i] = min(take_one, take_two)\n\n        return dp[-1]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"top-down-dp",children:"Top-down DP"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"from functools import cache\n\n\nclass Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        if len(cost) < 3:\n            return min(cost)\n\n        @cache\n        def dp(stair: int) -> int:\n            if stair < 2:\n                return 0\n            down_1 = cost[stair-1] + dp(stair-1)\n            down_2 = cost[stair-2] + dp(stair-2)\n            return min(down_1, down_2)\n\n        return dp(len(cost))\n\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var i=n(96540);const s={},o=i.createContext(s);function c(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);