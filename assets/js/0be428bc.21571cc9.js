"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[87553],{85152:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=i(74848),n=i(28453);const o={title:"785. Is Graph Bipartite?",sidebar_label:"785. Is Graph Bipartite?",tags:["Leetcode Medium","Graph","Bipartite"]},s=void 0,a={id:"leetcode/501-1000/is_graph_bipartite",title:"785. Is Graph Bipartite?",description:"https://leetcode.com/problems/is-graph-bipartite/",source:"@site/docs/leetcode/501-1000/785_is_graph_bipartite.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/is_graph_bipartite",permalink:"/docs/leetcode/501-1000/is_graph_bipartite",draft:!1,unlisted:!1,tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Graph",permalink:"/docs/tags/graph"},{label:"Bipartite",permalink:"/docs/tags/bipartite"}],version:"current",sidebarPosition:785,frontMatter:{title:"785. Is Graph Bipartite?",sidebar_label:"785. Is Graph Bipartite?",tags:["Leetcode Medium","Graph","Bipartite"]},sidebar:"docSidebar",previous:{title:"783. Minimum Distance Between BST Nodes",permalink:"/docs/leetcode/501-1000/min_distance_btw_bst_nodes"},next:{title:"787. Cheapest Flights Within K Stops",permalink:"/docs/leetcode/501-1000/cheapest_flights_within_k_stops"}},c={},l=[{value:"Python",id:"python",level:2},{value:"Color by DFS",id:"color-by-dfs",level:3}];function p(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://leetcode.com/problems/is-graph-bipartite/",children:"https://leetcode.com/problems/is-graph-bipartite/"})}),"\n",(0,r.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,r.jsx)(t.h3,{id:"color-by-dfs",children:"Color by DFS"}),"\n",(0,r.jsx)(t.p,{children:"\u4e8c\u5206\u5716(Bipartite)\u7d93\u5178\u984c\u76ee"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Time: O(N+E)  # N: nodes count; E: edges count"}),"\n",(0,r.jsx)(t.li,{children:"Space: O(N) # color mapper"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def isBipartite(self, graph):\n        color = {}\n        for node in range(len(graph)):\n            if node in color:\n                continue\n\n            stack = [node]\n            color[node] = 0\n\n            while stack:\n                start = stack.pop()\n                for target in graph[start]:\n                    if target not in color:\n                        stack.append(target)\n                        color[target] = 0 if color[start] == 1 else 1\n                    elif color[target] == color[start]:\n                        return False\n        return True\n"})})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var r=i(96540);const n={},o=r.createContext(n);function s(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);