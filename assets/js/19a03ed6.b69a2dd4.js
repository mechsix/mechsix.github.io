"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[48274],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var m=n.createContext({}),c=function(e){var t=n.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(m.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,m=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(r),d=i,f=s["".concat(m,".").concat(d)]||s[d]||p[d]||o;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[s]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},20316:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const o={title:"2439. Minimize Maximum of Array",sidebar_label:"2439. Minimize Maximum of Array",tags:["Leetcode Medium","Greedy"]},a=void 0,l={unversionedId:"leetcode/2000/min_max_of_array",id:"leetcode/2000/min_max_of_array",title:"2439. Minimize Maximum of Array",description:"https://leetcode.com/problems/minimize-maximum-of-array",source:"@site/docs/leetcode/2000/2439_min_max_of_array.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/min_max_of_array",permalink:"/docs/leetcode/2000/min_max_of_array",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/2000/2439_min_max_of_array.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Greedy",permalink:"/docs/tags/greedy"}],version:"current",sidebarPosition:2439,frontMatter:{title:"2439. Minimize Maximum of Array",sidebar_label:"2439. Minimize Maximum of Array",tags:["Leetcode Medium","Greedy"]},sidebar:"docSidebar",previous:{title:"2405. Optimal Partition of String",permalink:"/docs/leetcode/2000/optimal_partition_of_string"},next:{title:"2477. Minimum Fuel Cost to Report to the Capital",permalink:"/docs/leetcode/2000/min_fuel_cost_to_report_to_the_capital"}},m={},c=[{value:"Python",id:"python",level:2},{value:"Greedy",id:"greedy",level:3}],u={toc:c},s="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(s,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/minimize-maximum-of-array"},"https://leetcode.com/problems/minimize-maximum-of-array")),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("h3",{id:"greedy"},"Greedy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u52a0\u8207\u6e1b\u8981\u540c\u6642\u767c\u751f\uff0c\u6240\u4ee5\u6574\u500barray\u7684\u7e3d\u548c\u4e0d\u8b8a"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nums[0]"),"\u7121\u6cd5\u88ab\u6e1b\uff0c\u56e0\u6b64\u7b54\u6848\u53ea\u6703\u5927\u65bc\u6216\u7b49\u65bc",(0,i.kt)("inlineCode",{parentName:"li"},"nums[0]"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from math import ceil\n\n\nclass Solution:\n    def minimizeArrayValue(self, nums: List[int]) -> int:\n        total = nums[0]\n        n = len(nums)\n\n        ans, i = 0, 1\n\n        while i < n:\n            till_now = ceil(total/i)\n\n            total += nums[i]\n            i += 1\n\n            current = ceil(total/i)\n            ans = max(till_now, current, ans)\n\n        return ans\n")))}p.isMDXComponent=!0}}]);