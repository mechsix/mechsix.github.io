"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[8650],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},c=Object.keys(e);for(o=0;o<c.length;o++)r=c[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)r=c[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),a=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=a(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=a(r),d=n,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||c;return r?o.createElement(f,l(l({ref:t},u),{},{components:r})):o.createElement(f,l({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,l=new Array(c);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var a=2;a<c;a++)l[a]=r[a];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},27617:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return a},toc:function(){return u},default:function(){return m}});var o=r(87462),n=r(63366),c=(r(67294),r(3905)),l=["components"],i={title:"75. Sort Colors",sidebar_label:"75. Sort Colors",tags:["Leetcode Easy","Sort"]},s=void 0,a={unversionedId:"leetcode/1-500/sort_colors",id:"leetcode/1-500/sort_colors",title:"75. Sort Colors",description:"https://leetcode.com/problems/sort-colors/",source:"@site/docs/leetcode/1-500/75_sort_colors.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/sort_colors",permalink:"/docs/leetcode/1-500/sort_colors",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/75_sort_colors.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Sort",permalink:"/docs/tags/sort"}],version:"current",sidebarPosition:75,frontMatter:{title:"75. Sort Colors",sidebar_label:"75. Sort Colors",tags:["Leetcode Easy","Sort"]},sidebar:"docSidebar",previous:{title:"74. Search a 2D Matrix",permalink:"/docs/leetcode/1-500/search_2d_matrix"},next:{title:"77. Combinations",permalink:"/docs/leetcode/1-500/combinations"}},u=[{value:"Python",id:"python",children:[{value:"Bubble Sort",id:"bubble-sort",children:[],level:3}],level:2}],p={toc:u};function m(e){var t=e.components,r=(0,n.Z)(e,l);return(0,c.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/sort-colors/"},"https://leetcode.com/problems/sort-colors/")),(0,c.kt)("h2",{id:"python"},"Python"),(0,c.kt)("h3",{id:"bubble-sort"},"Bubble Sort"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"Time: O(N^2)"),(0,c.kt)("li",{parentName:"ul"},"Space: O(1)")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def sortColors(self, nums: List[int]) -> None:\n        for i in range(len(nums)):\n            for j in range(len(nums)):\n                if nums[i] < nums[j]:\n                    nums[i], nums[j] = nums[j], nums[i]                    \n")))}m.isMDXComponent=!0}}]);