"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[91992],{32076:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"leetcode/1-500/reverse_linked_list_ii","title":"92. Reverse Linked List II","description":"https://leetcode.com/problems/reverse-linked-list-ii/","source":"@site/docs/leetcode/1-500/92_reverse_linked_list_ii.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/reverse_linked_list_ii","permalink":"/docs/leetcode/1-500/reverse_linked_list_ii","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Linked List","permalink":"/docs/tags/linked-list"}],"version":"current","sidebarPosition":92,"frontMatter":{"title":"92. Reverse Linked List II","slidebar_label":"92. Reverse Linked List II","tags":["Leetcode Medium","Linked List"]},"sidebar":"docSidebar","previous":{"title":"91. Decode Ways","permalink":"/docs/leetcode/1-500/decode_ways"},"next":{"title":"93. Restore IP Addresses","permalink":"/docs/leetcode/1-500/restore_ip_addresses"}}');var s=n(74848),r=n(28453);const o={title:"92. Reverse Linked List II",slidebar_label:"92. Reverse Linked List II",tags:["Leetcode Medium","Linked List"]},d=void 0,l={},c=[{value:"Python",id:"python",level:2}];function a(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://leetcode.com/problems/reverse-linked-list-ii/",children:"https://leetcode.com/problems/reverse-linked-list-ii/"})}),"\n",(0,s.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:\n        stack = []\n\n        dummy = ListNode(next=head)\n        cur = dummy\n\n        pre, tail = None, None\n        for i in range(right+1):\n            if i == left-1:\n                pre = cur\n            if i == right:\n                tail = cur.next\n            if i >= left and i <= right:\n                stack.append(cur)\n            cur = cur.next\n\n        cur = None\n        while stack:\n            cur = stack.pop()\n            pre.next = cur\n            pre = cur\n        cur.next = tail\n\n        return dummy.next\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var i=n(96540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);