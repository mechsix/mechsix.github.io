"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[753],{59175:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"leetcode/501-1000/partition_labels","title":"763. Partition Labels","description":"https://leetcode.com/problems/partition-labels/","source":"@site/docs/leetcode/501-1000/763_partition_labels.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/partition_labels","permalink":"/docs/leetcode/501-1000/partition_labels","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Greedy","permalink":"/docs/tags/greedy"}],"version":"current","sidebarPosition":763,"frontMatter":{"title":"763. Partition Labels","sidebar_label":"763. Partition Labels","tags":["Leetcode Medium","Greedy"]},"sidebar":"docSidebar","previous":{"title":"746. Min Cost Climbing Stairs","permalink":"/docs/leetcode/501-1000/min_cost_climbing_stairs"},"next":{"title":"766. Toeplitz Matrix","permalink":"/docs/leetcode/501-1000/toeplitz_matrix"}}');var s=t(74848),r=t(28453);const a={title:"763. Partition Labels",sidebar_label:"763. Partition Labels",tags:["Leetcode Medium","Greedy"]},o=void 0,l={},d=[{value:"Python",id:"python",level:2},{value:"Greedy",id:"greedy",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/partition-labels/",children:"https://leetcode.com/problems/partition-labels/"})}),"\n",(0,s.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(n.h3,{id:"greedy",children:"Greedy"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Time: O(N)"}),"\n",(0,s.jsx)(n.li,{children:"Space: O(N)"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def partitionLabels(self, s: str) -> List[int]:\n        last_seem = {char: index for index, char in enumerate(s)}\n\n        start, end = 0, 0\n\n        ans = []\n        for index, char in enumerate(s):\n            end = max(end, last_seem[char])\n            if index == end:\n                ans.append(end+1 - start)\n                start = index + 1\n\n        return ans\n"})}),"\n",(0,s.jsx)(n.p,{children:"Or, you'd like to see what those partitions are"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def partitionLabels(self, s: str) -> List[int]:\n        last_seem = {char: index for index, char in enumerate(s)}\n\n        start, end = 0, 0\n        partitions = []\n        for index, char in enumerate(s):\n            end = max(end, last_seem[char])\n            if index == end:\n                partitions.append(s[start:end+1])\n                start = index + 1\n\n        return [len(part) for part in partitions]\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);