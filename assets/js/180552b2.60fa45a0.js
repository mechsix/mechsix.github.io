"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[80208],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),a=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=a(e.components);return o.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),m=a(n),u=r,f=m["".concat(s,".").concat(u)]||m[u]||p[u]||i;return n?o.createElement(f,l(l({ref:t},c),{},{components:n})):o.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[m]="string"==typeof e?e:r,l[1]=d;for(var a=2;a<i;a++)l[a]=n[a];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},55727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var o=n(87462),r=(n(67294),n(3905));const i={title:"2095. Delete the Middle Node of a Linked List",sidebar_label:"2095. Delete the Middle Node of a Linked List",tags:["Leetcode Medium","Linked List"]},l=void 0,d={unversionedId:"leetcode/2000/delete_the_middle_of_linked_list",id:"leetcode/2000/delete_the_middle_of_linked_list",title:"2095. Delete the Middle Node of a Linked List",description:"https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/submissions/",source:"@site/docs/leetcode/2000/2095_delete_the_middle_of_linked_list.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/delete_the_middle_of_linked_list",permalink:"/docs/leetcode/2000/delete_the_middle_of_linked_list",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/2000/2095_delete_the_middle_of_linked_list.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Linked List",permalink:"/docs/tags/linked-list"}],version:"current",sidebarPosition:2095,frontMatter:{title:"2095. Delete the Middle Node of a Linked List",sidebar_label:"2095. Delete the Middle Node of a Linked List",tags:["Leetcode Medium","Linked List"]},sidebar:"docSidebar",previous:{title:"2038. Remove Colored Pieces if Both Neighbors are the Same Color",permalink:"/docs/leetcode/2000/remove_colored_pieces_if_both_neighbors_are_the_same"},next:{title:"2131. Longest Palindrome by Concatenating Two Letter Words",permalink:"/docs/leetcode/2000/longest_palindrome_by_concatenating_two_letter_words"}},s={},a=[{value:"Python",id:"python",level:2}],c={toc:a},m="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/submissions/"},"https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/submissions/")),(0,r.kt)("h2",{id:"python"},"Python"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        dummy = ListNode(next=head)\n        length = 1\n\n        slow, fast = dummy, head\n\n        while fast.next:\n            length += 1\n            fast = fast.next\n            if length % 2 == 0:\n                slow = slow.next\n\n        slow.next = slow.next.next\n\n        return dummy.next\n")))}p.isMDXComponent=!0}}]);