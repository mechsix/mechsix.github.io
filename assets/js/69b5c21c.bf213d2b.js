"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[26060],{71358:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>a,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"leetcode/1-500/queue_reconstruction_by_height","title":"406. Queue Reconstruction by Height","description":"https://leetcode.com/problems/queue-reconstruction-by-height/solution/","source":"@site/docs/leetcode/1-500/406_queue_reconstruction_by_height.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/queue_reconstruction_by_height","permalink":"/docs/leetcode/1-500/queue_reconstruction_by_height","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Greedy","permalink":"/docs/tags/greedy"}],"version":"current","sidebarPosition":406,"frontMatter":{"title":"406. Queue Reconstruction by Height","sidebar_label":"406. Queue Reconstruction by Height","tags":["Leetcode Medium","Greedy"]},"sidebar":"docSidebar","previous":{"title":"404. Sum of Left Leaf","permalink":"/docs/leetcode/1-500/left_leaf_sum"},"next":{"title":"409. Longest Palindrome","permalink":"/docs/leetcode/1-500/longest_palindrome"}}');var i=n(74848),s=n(28453);const c={title:"406. Queue Reconstruction by Height",sidebar_label:"406. Queue Reconstruction by Height",tags:["Leetcode Medium","Greedy"]},r=void 0,u={},l=[{value:"Python",id:"python",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/queue-reconstruction-by-height/solution/",children:"https://leetcode.com/problems/queue-reconstruction-by-height/solution/"})}),"\n",(0,i.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:\n        people.sort(key=lambda p: (-p[0], p[1]))\n\n        queue = []\n        for p in people:\n            queue.insert(p[1], p)\n        return queue\n"})})]})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var o=n(96540);const i={},s=o.createContext(i);function c(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);