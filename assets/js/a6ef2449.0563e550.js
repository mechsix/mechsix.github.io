"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[7036],{89395:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"leetcode/1-500/meeting_room_ii","title":"253. Meeting Rooms II","description":"https://leetcode.com/problems/meeting-rooms-ii/","source":"@site/docs/leetcode/1-500/253_meeting_room_ii.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/meeting_room_ii","permalink":"/docs/leetcode/1-500/meeting_room_ii","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Interval","permalink":"/docs/tags/interval"},{"inline":true,"label":"Heap","permalink":"/docs/tags/heap"}],"version":"current","sidebarPosition":253,"frontMatter":{"title":"253. Meeting Rooms II","sidebar_label":"253. Meeting Rooms II","tags":["Leetcode Medium","Interval","Heap"]},"sidebar":"docSidebar","previous":{"title":"252. Meeting Rooms","permalink":"/docs/leetcode/1-500/meeting_rooms"},"next":{"title":"Binary Tree Paths","permalink":"/docs/leetcode/1-500/binary-tree-paths"}}');var o=n(74848),r=n(28453);const s={title:"253. Meeting Rooms II",sidebar_label:"253. Meeting Rooms II",tags:["Leetcode Medium","Interval","Heap"]},a=void 0,l={},c=[{value:"Python",id:"python",level:2},{value:"Priority Queue",id:"priority-queue",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.com/problems/meeting-rooms-ii/",children:"https://leetcode.com/problems/meeting-rooms-ii/"})}),"\n",(0,o.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(t.h3,{id:"priority-queue",children:"Priority Queue"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"import heapq\n\n\nclass Solution:\n    def minMeetingRooms(self, intervals: List[List[int]]) -> int:\n        if not intervals:\n            return 0\n\n        intervals.sort(key=lambda interval: interval[0])\n\n        heap = []\n        heapq.heappush(heap, intervals[0][1])\n\n        for interval in intervals[1:]:\n            start, end = interval\n\n            if heap[0] <= start:\n                heapq.heappop(heap)\n            heapq.heappush(heap, end)\n\n        return len(heap)\n"})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(96540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);