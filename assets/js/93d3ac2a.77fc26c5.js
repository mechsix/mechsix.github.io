"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[37295],{17460:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"leetcode/501-1000/recordered_power_of_2","title":"869. Reordered Power of 2","description":"https://leetcode.com/problems/reordered-power-of-2/","source":"@site/docs/leetcode/501-1000/869_recordered_power_of_2.md","sourceDirName":"leetcode/501-1000","slug":"/leetcode/501-1000/recordered_power_of_2","permalink":"/docs/leetcode/501-1000/recordered_power_of_2","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Bit Manipulation","permalink":"/docs/tags/bit-manipulation"}],"version":"current","sidebarPosition":869,"frontMatter":{"title":"869. Reordered Power of 2","sidebar_label":"869. Reordered Power of 2","tags":["Leetcode Medium","Bit Manipulation"]},"sidebar":"docSidebar","previous":{"title":"867. Transpose Matrix","permalink":"/docs/leetcode/501-1000/transpose_matrix"},"next":{"title":"871. Minimum Number of Refueling Stops","permalink":"/docs/leetcode/501-1000/minimum_number_of_refueling_stops"}}');var n=t(74848),i=t(28453);const s={title:"869. Reordered Power of 2",sidebar_label:"869. Reordered Power of 2",tags:["Leetcode Medium","Bit Manipulation"]},d=void 0,c={},l=[{value:"Python",id:"python",level:2}];function a(e){const o={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.p,{children:(0,n.jsx)(o.a,{href:"https://leetcode.com/problems/reordered-power-of-2/",children:"https://leetcode.com/problems/reordered-power-of-2/"})}),"\n",(0,n.jsx)(o.h2,{id:"python",children:"Python"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-python",children:"from collections import Counter\nfrom itertools import permutations\n\n\nclass Solution:\n    def reorderedPowerOf2(self, n: int) -> bool:\n        nums = [int(''.join(cand)) for cand in permutations(str(n)) if cand[0] != '0']\n        return any(self.is_power_4(num) for num in nums)\n\n    @staticmethod\n    def is_power_4(num: int):\n        return bin(num).count('1') == 1\n"})})]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>d});var r=t(96540);const n={},i=r.createContext(n);function s(e){const o=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:o},e.children)}}}]);