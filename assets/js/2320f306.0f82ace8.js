"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[44111],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return y}});var n=t(67294);function c(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){c(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,n,c=function(e,r){if(null==e)return{};var t,n,c={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(c[t]=e[t]);return c}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var l=n.createContext({}),i=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=i(e.components);return n.createElement(l.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,c=e.mdxType,a=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=i(t),f=c,y=p["".concat(l,".").concat(f)]||p[f]||d[f]||a;return t?n.createElement(y,o(o({ref:r},s),{},{components:t})):n.createElement(y,o({ref:r},s))}));function y(e,r){var t=arguments,c=r&&r.mdxType;if("string"==typeof e||c){var a=t.length,o=new Array(a);o[0]=f;var u={};for(var l in r)hasOwnProperty.call(r,l)&&(u[l]=r[l]);u.originalType=e,u[p]="string"==typeof e?e:c,o[1]=u;for(var i=2;i<a;i++)o[i]=t[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},83238:function(e,r,t){t.r(r),t.d(r,{assets:function(){return l},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return i}});var n=t(83117),c=(t(67294),t(3905));const a={title:"2677. Chunk Array",sidebar_label:"2677. Chunk Array",tags:["Leetcode Easy","JS 30 Days Challenge"]},o=void 0,u={unversionedId:"leetcode/2000/chunk_array",id:"leetcode/2000/chunk_array",title:"2677. Chunk Array",description:"https://leetcode.com/problems/chunk-array/",source:"@site/docs/leetcode/2000/2677_chunk_array.md",sourceDirName:"leetcode/2000",slug:"/leetcode/2000/chunk_array",permalink:"/docs/leetcode/2000/chunk_array",draft:!1,editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/2000/2677_chunk_array.md",tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"JS 30 Days Challenge",permalink:"/docs/tags/js-30-days-challenge"}],version:"current",sidebarPosition:2677,frontMatter:{title:"2677. Chunk Array",sidebar_label:"2677. Chunk Array",tags:["Leetcode Easy","JS 30 Days Challenge"]},sidebar:"docSidebar",previous:{title:"2676. Throttle",permalink:"/docs/leetcode/2000/throttle"},next:{title:"2700. Differences Between Two Objects",permalink:"/docs/leetcode/2000/diffs_btw_two_object"}},l={},i=[{value:"Javascript",id:"javascript",level:2},{value:"Typescript",id:"typescript",level:2}],s={toc:i};function p(e){let{components:r,...t}=e;return(0,c.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/chunk-array/"},"https://leetcode.com/problems/chunk-array/")),(0,c.kt)("h2",{id:"javascript"},"Javascript"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-javascript"},"var chunk = function(arr, size) {\n    const result = []\n    arr.reduce((accu, value, index) => {\n        let  current\n        if (index % size === 0) {\n            current = []\n            accu.push(current)\n        } else {\n            current = accu[accu.length-1]\n        }\n\n        current.push(value)\n        return accu\n    }, result)\n    return result\n}\n")),(0,c.kt)("h2",{id:"typescript"},"Typescript"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"function chunk(arr: any[], size: number): any[][] {\n    const result = []\n    arr.reduce((accu, value, index) => {\n        let current: any[]\n        if (index % size === 0) {\n            current = []\n            accu.push(current)\n        } else {\n            current = accu[accu.length-1]\n        }\n\n        current.push(value)\n        return accu\n    }, result)\n    return result\n};\n")))}p.isMDXComponent=!0}}]);