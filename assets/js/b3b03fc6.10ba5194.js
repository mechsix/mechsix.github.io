"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[82348],{34540:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"leetcode/1-500/palindrome_partitioning","title":"131. Palindrome Partitioning","description":"https://leetcode.com/problems/palindrome-partitioning","source":"@site/docs/leetcode/1-500/131_palindrome_partitioning.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/palindrome_partitioning","permalink":"/docs/leetcode/1-500/palindrome_partitioning","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Backtracking","permalink":"/docs/tags/backtracking"}],"version":"current","sidebarPosition":131,"frontMatter":{"title":"131. Palindrome Partitioning","sidebar_label":"131. Palindrome Partitioning","tags":["Leetcode Medium","Backtracking"]},"sidebar":"docSidebar","previous":{"title":"130. Surrounded Regions","permalink":"/docs/leetcode/1-500/surrounded_regions"},"next":{"title":"133. Clone Graph","permalink":"/docs/leetcode/1-500/clone_graph"}}');var a=t(74848),o=t(28453);const r={title:"131. Palindrome Partitioning",sidebar_label:"131. Palindrome Partitioning",tags:["Leetcode Medium","Backtracking"]},c=void 0,s={},l=[{value:"Python",id:"python",level:2},{value:"Backtracking",id:"backtracking",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/palindrome-partitioning",children:"https://leetcode.com/problems/palindrome-partitioning"})}),"\n",(0,a.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,a.jsx)(n.h3,{id:"backtracking",children:"Backtracking"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        ans = []\n\n        def backtracking(start: int, stack: list):\n            if start == len(s):\n                nonlocal ans\n                ans.append(stack[:])\n                return\n\n            for end in range(start+1, len(s)+1):\n                cand = s[start:end]\n                if cand != cand[::-1]:\n                    continue\n                stack.append(cand)\n                backtracking(end, stack)\n                stack.pop()\n\n        backtracking(0, [])\n\n        return list(ans)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(96540);const a={},o=i.createContext(a);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);