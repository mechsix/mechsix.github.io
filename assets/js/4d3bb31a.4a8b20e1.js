"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[15715],{74721:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"leetcode/1001-1500/min_abs_difference","title":"1200. Minimum Absolute Difference","description":"Python","source":"@site/docs/leetcode/1001-1500/1200_min_abs_difference.md","sourceDirName":"leetcode/1001-1500","slug":"/leetcode/1001-1500/min_abs_difference","permalink":"/docs/leetcode/1001-1500/min_abs_difference","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"}],"version":"current","sidebarPosition":1200,"frontMatter":{"title":"1200. Minimum Absolute Difference","sidebar_label":"1200. Mini Abs Difference","tags":["Leetcode Easy"]},"sidebar":"docSidebar","previous":{"title":"1192. Critical Connections in a Network","permalink":"/docs/leetcode/1001-1500/critical_connections_in_network"},"next":{"title":"1202. Smallest String With Swaps","permalink":"/docs/leetcode/1001-1500/smallest_string_with_swaps"}}');var s=t(74848),r=t(28453);const o={title:"1200. Minimum Absolute Difference",sidebar_label:"1200. Mini Abs Difference",tags:["Leetcode Easy"]},c=void 0,a={},l=[{value:"Python",id:"python",level:2}];function u(e){const n={code:"code",h2:"h2",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def minimumAbsDifference(self, arr: List[int]) -> List[List[int]]:\n        if not arr:\n            return []\n\n        items = sorted(arr)\n        gap = None\n        results = []\n\n        for i in range(0, len(items)-1):\n            current_gap = items[i+1] - items[i]\n\n            if gap is None:\n                gap = current_gap\n                results.append([items[i], items[i+1]])\n                continue\n\n            if gap == current_gap:\n                results.append([items[i], items[i+1]])\n                continue\n\n            if gap > current_gap:\n                gap = current_gap\n                results = [[items[i], items[i+1]]]\n\n        return results\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(96540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);