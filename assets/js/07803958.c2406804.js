"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[73423],{82508:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"leetcode/2000/sleep","title":"2621. Sleep","description":"https://leetcode.com/problems/sleep/","source":"@site/docs/leetcode/2000/2621_sleep.md","sourceDirName":"leetcode/2000","slug":"/leetcode/2000/sleep","permalink":"/docs/leetcode/2000/sleep","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Easy","permalink":"/docs/tags/leetcode-easy"},{"inline":true,"label":"JS 30 Days Challenge","permalink":"/docs/tags/js-30-days-challenge"}],"version":"current","sidebarPosition":2621,"frontMatter":{"title":"2621. Sleep","sidebar_label":"2621. Sleep","tags":["Leetcode Easy","JS 30 Days Challenge"]},"sidebar":"docSidebar","previous":{"title":"2620. Counter","permalink":"/docs/leetcode/2000/counter"},"next":{"title":"2622. Cache With Time Limit","permalink":"/docs/leetcode/2000/cache_with_timelimit"}}');var l=s(74848),c=s(28453);const i={title:"2621. Sleep",sidebar_label:"2621. Sleep",tags:["Leetcode Easy","JS 30 Days Challenge"]},r=void 0,o={},a=[{value:"Javascript",id:"javascript",level:2},{value:"Typescript",id:"typescript",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.p,{children:(0,l.jsx)(t.a,{href:"https://leetcode.com/problems/sleep/",children:"https://leetcode.com/problems/sleep/"})}),"\n",(0,l.jsx)(t.h2,{id:"javascript",children:"Javascript"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-javascript",children:"async function sleep(millis) {\n    return new Promise((resolve, reject) => setTimeout(() => resolve(), millis))\n}\n"})}),"\n",(0,l.jsx)(t.h2,{id:"typescript",children:"Typescript"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-typescript",children:"async function sleep(millis: number): Promise<void> {\n    return new Promise((resolve, reject) => setTimeout(() => resolve(), millis))\n}\n"})})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>r});var n=s(96540);const l={},c=n.createContext(l);function i(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);