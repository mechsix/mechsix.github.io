"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[30135],{15024:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var i=n(74848),r=n(28453);const s={title:"1260. Shift 2D Grid",sidebar_label:"1260. Shift 2D Grid",tags:["Leetcode Easy","Matrix"]},o=void 0,d={id:"leetcode/1001-1500/shift_2d_grid",title:"1260. Shift 2D Grid",description:"https://leetcode.com/problems/shift-2d-grid/",source:"@site/docs/leetcode/1001-1500/1260_shift_2d_grid.md",sourceDirName:"leetcode/1001-1500",slug:"/leetcode/1001-1500/shift_2d_grid",permalink:"/docs/leetcode/1001-1500/shift_2d_grid",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Matrix",permalink:"/docs/tags/matrix"}],version:"current",sidebarPosition:1260,frontMatter:{title:"1260. Shift 2D Grid",sidebar_label:"1260. Shift 2D Grid",tags:["Leetcode Easy","Matrix"]},sidebar:"docSidebar",previous:{title:"1254. Number of Closed Islands",permalink:"/docs/leetcode/1001-1500/number_of_closed_islands"},next:{title:"1268. Search Suggestions System",permalink:"/docs/leetcode/1001-1500/search_suggestions_system"}},c={},l=[{value:"Python",id:"python",level:2},{value:"Offset 1 per run",id:"offset-1-per-run",level:3}];function a(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/shift-2d-grid/",children:"https://leetcode.com/problems/shift-2d-grid/"})}),"\n",(0,i.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,i.jsx)(t.h3,{id:"offset-1-per-run",children:"Offset 1 per run"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Time: O(mnk)"}),"\n",(0,i.jsx)(t.li,{children:"Space: O(1)"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def shiftGrid(self, grid: List[List[int]], k: int) -> List[List[int]]:\n        m = len(grid)\n        n = len(grid[0])\n\n        for i in range(k):\n            last = grid[-1][-1]\n            for r in range(m):\n                tmp = grid[r][-1]\n                for c in range(n-1, 0, -1):\n                    grid[r][c] = grid[r][c-1]\n                grid[r][0] = last\n                last = tmp\n\n        return grid\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var i=n(96540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);