"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[9417],{46610:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"leetcode/1-500/number_of_1_bits","title":"191. Number of 1 Bits","description":"https://leetcode.com/problems/number-of-1-bits/","source":"@site/docs/leetcode/1-500/191_number_of_1_bits.md","sourceDirName":"leetcode/1-500","slug":"/leetcode/1-500/number_of_1_bits","permalink":"/docs/leetcode/1-500/number_of_1_bits","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Leetcode Medium","permalink":"/docs/tags/leetcode-medium"},{"inline":true,"label":"Bit Manipulation","permalink":"/docs/tags/bit-manipulation"}],"version":"current","sidebarPosition":191,"frontMatter":{"title":"191. Number of 1 Bits","sidebar_label":"191. Number of 1 Bits","tags":["Leetcode Medium","Bit Manipulation"]},"sidebar":"docSidebar","previous":{"title":"190. Reverse Bits","permalink":"/docs/leetcode/1-500/reverse_bits"},"next":{"title":"196. Delete Duplicate Emails","permalink":"/docs/leetcode/1-500/delete_duplicate_emails"}}');var o=n(74848),s=n(28453);const r={title:"191. Number of 1 Bits",sidebar_label:"191. Number of 1 Bits",tags:["Leetcode Medium","Bit Manipulation"]},a=void 0,c={},l=[{value:"Python",id:"python",level:2},{value:"Convert the type and count",id:"convert-the-type-and-count",level:3},{value:"Hamming Weight",id:"hamming-weight",level:3},{value:"Javascript",id:"javascript",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.com/problems/number-of-1-bits/",children:"https://leetcode.com/problems/number-of-1-bits/"})}),"\n",(0,o.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,o.jsx)(t.h3,{id:"convert-the-type-and-count",children:"Convert the type and count"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def hammingWeight(self, n: int) -> int:\n        bins = str(bin(n))[2:]\n        return sum([int(char) for char in bins])\n"})}),"\n",(0,o.jsx)(t.h3,{id:"hamming-weight",children:"Hamming Weight"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def hammingWeight(self, n: int) -> int:\n        total = 0\n        while n:\n            total += 1\n            n &= (n-1)\n        return total\n"})}),"\n",(0,o.jsx)(t.h2,{id:"javascript",children:"Javascript"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:"var hammingWeight = function(n) {\n  let count = 0;\n  while (n > 0) {\n    count += (n & 1);\n    n >>>= 1;\n  }\n  return count;\n};\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);