"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[2659],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),m=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=m(n),d=a,k=s["".concat(u,".").concat(d)]||s[d]||c[d]||l;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=s;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var m=2;m<l;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},88551:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return u},default:function(){return s},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return p}});var r=n(87462),a=n(63366),l=(n(67294),n(3905)),i=["components"],o={title:"779. K-th Symbol in Grammar",sidebar_label:"779. K-th Symbol in Grammar",tags:["Leetcode Medium"]},u=void 0,m={unversionedId:"leetcode/501-1000/kth_symbol_in_grammar",id:"leetcode/501-1000/kth_symbol_in_grammar",title:"779. K-th Symbol in Grammar",description:"Recursive",source:"@site/docs/leetcode/501-1000/779_kth_symbol_in_grammar.md",sourceDirName:"leetcode/501-1000",slug:"/leetcode/501-1000/kth_symbol_in_grammar",permalink:"/docs/leetcode/501-1000/kth_symbol_in_grammar",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/501-1000/779_kth_symbol_in_grammar.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"}],version:"current",sidebarPosition:779,frontMatter:{title:"779. K-th Symbol in Grammar",sidebar_label:"779. K-th Symbol in Grammar",tags:["Leetcode Medium"]},sidebar:"docSidebar",previous:{title:"740. Delete and Earn",permalink:"/docs/leetcode/501-1000/delete_and_earn"},next:{title:"785. Is Graph Bipartite?",permalink:"/docs/leetcode/501-1000/is_graph_bipartite"}},p=[{value:"Recursive",id:"recursive",children:[{value:"Consideration",id:"consideration",children:[],level:3},{value:"Examples",id:"examples",children:[],level:3},{value:"Python",id:"python",children:[],level:3}],level:2},{value:"Brute Solution (Fail Try)",id:"brute-solution-fail-try",children:[{value:"Python",id:"python-1",children:[],level:3}],level:2}],c={toc:p};function s(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"recursive"},"Recursive"),(0,l.kt)("h3",{id:"consideration"},"Consideration"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Length is ",(0,l.kt)("inlineCode",{parentName:"li"},"2**n")),(0,l.kt)("li",{parentName:"ul"},"The kth bit is:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Same with the ",(0,l.kt)("inlineCode",{parentName:"li"},"kth")," bit in the n-1 level if ",(0,l.kt)("inlineCode",{parentName:"li"},"k <= 2**(n-1)")),(0,l.kt)("li",{parentName:"ul"},"Inverse with ",(0,l.kt)("inlineCode",{parentName:"li"},"kth")," bit in the n-1 level if ",(0,l.kt)("inlineCode",{parentName:"li"},"k > 2**(n-1)"))))),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)("p",null,"Consider (n, k) as (5, 10), then:"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"(5, 10) => !(4, 2) => (3, 2) => (2, 2) => !(1,1)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"n"),(0,l.kt)("th",{parentName:"tr",align:null},"bits"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("span",{style:{color:"#f00"}},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"0",(0,l.kt)("span",{style:{color:"#0f0"}},"1"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"0",(0,l.kt)("span",{style:{color:"#0f0"}},"1"),"10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"0",(0,l.kt)("span",{style:{color:"#f00"}},"1"),"101001")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"011010011",(0,l.kt)("span",{style:{color:"#f0f"}},"0"),"010110")))),(0,l.kt)("h3",{id:"python"},"Python"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"O(n)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def kthGrammar(self, n: int, k: int) -> int:\n        if n == 1:\n            return 0\n\n        half_length = 2 ** (n-2)\n        if k > half_length:\n            # k in the right, invert with previous level\n            return 1 if self.kthGrammar(n-1, k-half_length) == 0 else 0\n\n        # k in the left, same with previous level\n        return self.kthGrammar(n-1, k)\n")),(0,l.kt)("h2",{id:"brute-solution-fail-try"},"Brute Solution (Fail Try)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"O(n^2 + k)"),(0,l.kt)("li",{parentName:"ul"},"Timelimit exceed")),(0,l.kt)("h3",{id:"python-1"},"Python"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def kthGrammar(self, n: int, k: int) -> int:\n        if n == 1:\n            if k > 1:\n                return\n            else:\n                return 0\n\n        return self._travel(2, n, k, [0])\n\n    def _travel(self, cur_n, target_n, k, pre):\n        if cur_n > target_n:\n            return pre.pop(k-1)\n\n        nums = []\n        limit = k/2\n        for num in pre:\n            if limit < 0:\n                break\n            if num == 0:\n                nums.append(0)\n                nums.append(1)\n            else:\n                nums.append(1)\n                nums.append(0)\n            limit -= 1\n\n        return self._travel(cur_n+1, target_n, k, nums)\n")))}s.isMDXComponent=!0}}]);