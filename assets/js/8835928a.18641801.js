"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[86223],{28326:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>u});var s=n(74848),o=n(28453);const c={title:"232. Implement Queue using Stacks",sidebar_label:"232. Implement Queue using Stacks",tags:["Leetcode Easy","Stack"]},l=void 0,i={id:"leetcode/1-500/implement_queue_using_stacks",title:"232. Implement Queue using Stacks",description:"https://leetcode.com/problems/implement-queue-using-stacks/",source:"@site/docs/leetcode/1-500/232_implement_queue_using_stacks.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/implement_queue_using_stacks",permalink:"/docs/leetcode/1-500/implement_queue_using_stacks",draft:!1,unlisted:!1,tags:[{label:"Leetcode Easy",permalink:"/docs/tags/leetcode-easy"},{label:"Stack",permalink:"/docs/tags/stack"}],version:"current",sidebarPosition:232,frontMatter:{title:"232. Implement Queue using Stacks",sidebar_label:"232. Implement Queue using Stacks",tags:["Leetcode Easy","Stack"]},sidebar:"docSidebar",previous:{title:"231. Power of Two",permalink:"/docs/leetcode/1-500/power_of_two"},next:{title:"234. Palindrome Linked List",permalink:"/docs/leetcode/1-500/palindrome_linked_list"}},a={},u=[{value:"Python",id:"python",level:2}];function r(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://leetcode.com/problems/implement-queue-using-stacks/",children:"https://leetcode.com/problems/implement-queue-using-stacks/"})}),"\n",(0,s.jsx)(t.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"class MyQueue:\n    def __init__(self):\n        self.stack = []\n\n    def push(self, x: int) -> None:\n        self.stack.append(x)\n\n    def pop(self) -> int:\n        keep = []\n\n        while self.stack:\n            keep.append(self.stack.pop())\n        \n        result = keep.pop()\n        \n        while keep:\n            self.stack.append(keep.pop())\n\n        return result\n        \n\n    def peek(self) -> int:\n        return self.stack[0]\n        \n\n    def empty(self) -> bool:\n        return not bool(self.stack)\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var s=n(96540);const o={},c=s.createContext(o);function l(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);