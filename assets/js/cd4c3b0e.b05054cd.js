"use strict";(self.webpackChunkmechsix_github_io_source=self.webpackChunkmechsix_github_io_source||[]).push([[1387],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return d}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(r),d=o,f=p["".concat(c,".").concat(d)]||p[d]||u[d]||i;return r?n.createElement(f,a(a({ref:t},m),{},{components:r})):n.createElement(f,a({ref:t},m))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},78836:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return m}});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),a=["components"],l={title:"378. Kth Smallest Element in a Sorted Matrix",sidebar_label:"378. Kth Smallest Element in a Sorted Matrix",tags:["Leetcode Medium","Heap"]},c=void 0,s={unversionedId:"leetcode/1-500/kth_smallest_elm_in_sorted_martrix",id:"leetcode/1-500/kth_smallest_elm_in_sorted_martrix",title:"378. Kth Smallest Element in a Sorted Matrix",description:"Python",source:"@site/docs/leetcode/1-500/378_kth_smallest_elm_in_sorted_martrix.md",sourceDirName:"leetcode/1-500",slug:"/leetcode/1-500/kth_smallest_elm_in_sorted_martrix",permalink:"/docs/leetcode/1-500/kth_smallest_elm_in_sorted_martrix",editUrl:"https://github.dev/mechsix/mechsix.github.io.source/tree/master/docs/leetcode/1-500/378_kth_smallest_elm_in_sorted_martrix.md",tags:[{label:"Leetcode Medium",permalink:"/docs/tags/leetcode-medium"},{label:"Heap",permalink:"/docs/tags/heap"}],version:"current",sidebarPosition:378,frontMatter:{title:"378. Kth Smallest Element in a Sorted Matrix",sidebar_label:"378. Kth Smallest Element in a Sorted Matrix",tags:["Leetcode Medium","Heap"]},sidebar:"docSidebar",previous:{title:"359. Logger Rate Limiter",permalink:"/docs/leetcode/1-500/logger_rate_limiter"},next:{title:"382. Linked List Random Node",permalink:"/docs/leetcode/1-500/linked_list_rand_node"}},m=[{value:"Python",id:"python",children:[{value:"Min Heap",id:"min-heap",children:[],level:3}],level:2}],u={toc:m};function p(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("h3",{id:"min-heap"},"Min Heap"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Time: O(N*M)"),(0,i.kt)("li",{parentName:"ul"},"Space: O(N*M)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import heapq\n\n\nclass Solution:\n    def kthSmallest(self, matrix: List[List[int]], k: int) -> int:\n        heap = []\n        for row in matrix:\n            for num in row:\n                heapq.heappush(heap, num)\n\n        return heapq.nsmallest(k, heap)[-1]\n")))}p.isMDXComponent=!0}}]);